(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_f32_=>_none (func (param i32 f32)))
 (type $i32_=>_f32 (func (param i32) (result f32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_f64_=>_none (func (param i32 f64)))
 (type $i32_=>_f64 (func (param i32) (result f64)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $f64_=>_f64 (func (param f64) (result f64)))
 (type $f32_=>_f32 (func (param f32) (result f32)))
 (type $i32_f32_i32_i32_i32_=>_none (func (param i32 f32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $f32_f32_=>_f32 (func (param f32 f32) (result f32)))
 (type $i32_i32_f32_=>_none (func (param i32 i32 f32)))
 (type $i32_f32_i32_i32_=>_i32 (func (param i32 f32 i32 i32) (result i32)))
 (type $i32_i32_=>_f32 (func (param i32 i32) (result f32)))
 (type $f32_i32_i32_i32_i32_=>_none (func (param f32 i32 i32 i32 i32)))
 (type $i32_i32_i32_=>_f32 (func (param i32 i32 i32) (result f32)))
 (type $i32_i32_f32_i32_i32_=>_none (func (param i32 i32 f32 i32 i32)))
 (type $f64_i64_=>_i32 (func (param f64 i64) (result i32)))
 (type $i32_i32_f32_i32_i32_i32_=>_none (func (param i32 i32 f32 i32 i32 i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $i32_v128_=>_none (func (param i32 v128)))
 (type $f32_=>_none (func (param f32)))
 (type $f32_i32_i32_i32_=>_none (func (param f32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_f32_f32_=>_none (func (param i32 i32 i32 i32 i32 f32 f32)))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32)))
 (type $f32_f32_f32_f32_=>_f32 (func (param f32 f32 f32 f32) (result f32)))
 (type $i32_f32_=>_f32 (func (param i32 f32) (result f32)))
 (type $f64_f64_=>_f64 (func (param f64 f64) (result f64)))
 (type $f32_f32_f32_=>_f32 (func (param f32 f32 f32) (result f32)))
 (type $f64_f64_i32_=>_f64 (func (param f64 f64 i32) (result f64)))
 (type $i32_f32_=>_i32 (func (param i32 f32) (result i32)))
 (type $i32_f32_i32_=>_f32 (func (param i32 f32 i32) (result f32)))
 (type $i32_=>_v128 (func (param i32) (result v128)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_f32_i32_=>_f32 (func (param i32 i32 f32 i32) (result f32)))
 (import "env" "memory" (memory $0 (shared 17 3000)))
 (import "env" "table" (table $0 10 funcref))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "setCtrlInstanceAt" (func $assembly/env/setCtrlInstanceAt (param i32 i32) (result i32)))
 (import "env" "resetCtrlInstance" (func $assembly/env/resetCtrlInstance (param i32) (result i32)))
 (import "env" "logf" (func $assembly/env/logf (param f32)))
 (global $assembly/util/f32s i32 (i32.const 1048640))
 (global $assembly/util/mems i32 (i32.const 1048720))
 (global $assembly/core/constants/WAVETABLE_SIZE i32 (i32.const 8192))
 (global $assembly/core/constants/DELAY_MAX_SIZE i32 (i32.const 65536))
 (global $assembly/core/constants/SAMPLE_MAX_SIZE i32 (i32.const 65536))
 (global $assembly/core/constants/ANTIALIAS_WAVETABLE_OVERSAMPLING i32 (i32.const 1))
 (global $assembly/core/antialias-wavetable/Real.sign (mut f32) (f32.const 1))
 (global $assembly/core/wave/seed (mut i32) (i32.const 0))
 (global $~lib/math/NativeMath.PI f64 (f64.const 3.141592653589793))
 (global $assembly/core/wave/numHarmonics i32 (i32.const 16))
 (global $assembly/core/runner/MAX_BAR_INSTANCES i32 (i32.const 512))
 (global $assembly/core/runner/MAX_BARS i32 (i32.const 512))
 (global $assembly/core/runner/MAX_CTRL_INSTANCES i32 (i32.const 512))
 (global $assembly/core/runner/MAX_CTRLS i32 (i32.const 512))
 (global $assembly/gen/daverb/ld0 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/ld1 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/ld2 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/ld3 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/ld4 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/ld5 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/ld6 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/ld7 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/ld8 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/ld9 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/ld10 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/ld11 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/md0 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/md1 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/md2 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/md3 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/md4 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/md5 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/md6 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/md7 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/md8 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/md9 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/md10 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/md11 (mut i32) (i32.const 0))
 (global $assembly/gen/daverb/lo0 i32 (i32.const 394))
 (global $assembly/gen/daverb/lo1 i32 (i32.const 4406))
 (global $assembly/gen/daverb/lo2 i32 (i32.const 2834))
 (global $assembly/gen/daverb/lo3 i32 (i32.const 2957))
 (global $assembly/gen/daverb/lo4 i32 (i32.const 2948))
 (global $assembly/gen/daverb/lo5 i32 (i32.const 277))
 (global $assembly/gen/daverb/lo6 i32 (i32.const 1579))
 (global $assembly/gen/daverb/ro0 i32 (i32.const 523))
 (global $assembly/gen/daverb/ro1 i32 (i32.const 5374))
 (global $assembly/gen/daverb/ro2 i32 (i32.const 1819))
 (global $assembly/gen/daverb/ro3 i32 (i32.const 3960))
 (global $assembly/gen/daverb/ro4 i32 (i32.const 3128))
 (global $assembly/gen/daverb/ro5 i32 (i32.const 496))
 (global $assembly/gen/daverb/ro6 i32 (i32.const 179))
 (global $~lib/math/NativeMathf.PI f32 (f32.const 3.1415927410125732))
 (global $assembly/bench/bench-audio/kBenchSize i32 (i32.const 2048))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/rt/stub/startOffset (mut i32) (i32.const 0))
 (global $~lib/rt/stub/offset (mut i32) (i32.const 0))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 0))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/math/rempio2f_y (mut f64) (f64.const 0))
 (global $~lib/math/rempio2_y0 (mut f64) (f64.const 0))
 (global $~lib/math/rempio2_y1 (mut f64) (f64.const 0))
 (global $~lib/math/res128_hi (mut i64) (i64.const 0))
 (global $~lib/util/math/log_tail (mut f64) (f64.const 0))
 (global $~lib/memory/__heap_base i32 (i32.const 1059056))
 (data $0 (i32.const 1048588) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $1 (i32.const 1048620) ",\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\10\00\00\00 \00\10\00 \00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $2 (i32.const 1048668) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $3 (i32.const 1048700) ",\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\10\00\00\00p\00\10\00p\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $4 (i32.const 1048748) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data $5 (i32.const 1048796) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00s\00t\00a\00t\00i\00c\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00")
 (data $6 (i32.const 1048860) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data $7 (i32.const 1048924) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00s\00t\00u\00b\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $8 (i32.const 1048992) "\f8\ac\b1k($\f7?\00\b0\cd\ee_\t\e1\bf\a1\cc\d2f\f7\e1\f6?\00\d0v\bd\94\84\e0\bf\8a\d40\0e=\a1\f6?\00\f8\e8\aeC\01\e0\bf\85l\d02\eca\f6?\00@\0b6\c5\fe\de\bf\f8\98\11\95\fa#\f6?\00\e0\b7\1a\d9\fd\dd\bfl\02\cf\a4[\e7\f5?\00\90\c7\0c\ae\ff\dc\bf\b8O!Z\05\ac\f5?\00\a0\fd\118\04\dc\bf\1en\16\0f\edq\f5?\00\e0:2g\0b\db\bf5\f8\0bY\t9\f5?\00\b0-Z/\15\da\bf\dd\ada\edO\01\f5?\00`\f8Z\7f!\d9\bf\d0{H\8e\b8\ca\f4?\00\90q\b0M0\d8\bf\eeO3\b49\95\f4?\00\e0\a9\f9\89A\d7\bfi\d5\af\df\cb`\f4?\00\90\19\b5+U\d6\bfS\b9\e4Nf-\f4?\00\10\9b\a2#k\d5\bf\a6\d8\1d\11\01\fb\f3?\00\a0_\0fe\83\d4\bf6X\0c\b7\95\c9\f3?\00\a0\f67\e9\9d\d3\bfJ\fd\b6J\1c\99\f3?\00`\8dS\a1\ba\d2\bf\b5\99\e0\0c\8ei\f3?\00@\ca@\83\d9\d1\bf\b2\e7\13\82\e4:\f3?\00\e0@:\85\fa\d0\bf\b1\bd\85\19\19\r\f3?\000\e72\9c\1d\d0\bf\d7q\b2\ca%\e0\f2?\00`\fa\a2}\85\ce\bf\82\cd\13\cf\04\b4\f2?\00\80=c\c8\d3\cc\bfP\cb|,\b0\88\f2?\00\a0\14L\03&\cb\bf\e5M\94c\"^\f2?\00\e0O/\1c|\c9\bf\b1\15\86=V4\f2?\00\00\80?\02\d6\c7\bf8\af>\e3F\0b\f2?\00\e0\05\1a\a73\c6\bf\dd\a3\cd\fd\ee\e2\f1?\00\00W\e9\f5\94\c4\bf09\0bXJ\bb\f1?\00\a0\e0$\e4\f9\c2\bf\00\"\7f\84S\94\f1?\00\c0\fdZYb\c1\bf<\d7\d5\c0\06n\f1?\00\80\bdu\9a\9c\bf\bf\c2\e4\b7G_H\f1?\00\c0\f9[W{\bc\bf\d1\85\00\adX#\f1?\00\80\f4\0f\c6`\b9\bf\'\"S\0f\f0\fe\f0?\00\00\b6G\e2L\b6\bf\8f:\d0w \db\f0?\00@\01\b2x?\b3\bf\d9\80Y\d6\e6\b7\f0?\00\c0B\1a}8\b0\bf\8d@{\fe>\95\f0?\00\00\b5\08\92o\aa\bf\83;\c5\ca%s\f0?\00\00wO\95z\a4\bf\\\1b\r\e4\97Q\f0?\00\00\0c\c5\a8#\9d\bf\a2\8e \c1\910\f0?\00\00x)&j\91\bf!~\b3%\10\10\f0?\00\00\e8\d8\f8 w\bfk\a7\ca\f9~\c0\ef?\00\00P\b1S\fe\86?\84\f1\f6\d3eD\ef?\00\80\0f\e1\cc\1c\a1?\7f\10\84\9f\07\cc\ee?\00\80\8b\8c\fcM\ac?\e8Z\97\99:W\ee?\00@W\1e2\aa\b3?\e6=\bd\f0\d6\e5\ed?\00\80\8b\d0\a0\18\b9?\b38\ff\81\b6w\ed?\00@\04\da\e9r\be?C\e9Mr\b5\0c\ed?\00`\7fP\d2\dc\c1?cu\0e\dc\b2\a4\ec?\00\a0\de\03\abv\c4?Q\cb\d6\e8\8e?\ec?\00 \e2wC\07\c7?L\0c\02O+\dd\eb?\00@\a9\8b\de\8e\c9?\ca\15`\00l}\eb?\00\e0\d2j\b8\r\cc?\8f3.n6 \eb?\00\e0\ce\af\n\84\ce?9P)&p\c5\ea?\00\80g\b4\ny\d0?\dd1\'\bc\01m\ea?\00\c0\01h\05\ac\d1?\8b\f1?\bc\d3\16\ea?\00\e0\fe\d4\11\db\d2?\ad\fegI\d1\c2\e9?\00\80\c5NF\06\d4?\02\99|\f4\e4p\e9?\00\f0:\t\be-\d5?\f2\bc\829\fb \e9?\00\d0P \90Q\d6?\f1Y\f7\87\01\d3\e8?\00\f0\ea\cd\d2q\d7?m\f6\b9\eb\e5\86\e8?\00\90}\85\9c\8e\d8?\94\b9X\b6\97<\e8?\00`\e1U\01\a8\d9?\"\10\c6\ff\05\f4\e7?\00\d0\d3n\18\be\da?\ca\15\14\18\"\ad\e7?\00\e0\a0\ae\f2\d0\db?\8c\ff\9e\f9\dcg\e7?\00@\bf=\a4\e0\dc?")
 (data $9 (i32.const 1050016) "\8e\n\b9\12\00 \e6?\05\b6D\06\ab\04\89<\a64W\04\00`\e6?\a9\f7b\ea\9b\ffa<\c5\f2%\c3\ff\9f\e6?\ba\90<\cb\cf~\82<\04Z\b98\00\e0\e6?&\93sV\88\ff\88<\e3\94\99\e0\ff\1f\e7?\b1\82_\'@\fd\8a<\10\0eY\15\00`\e7?A\83#\b4u\fdr\bc\d5[e\12\00\a0\e7?v+$|\e6\08x<\a6\e9Y2\00\e0\e7?\b7\"\f6&\e4\08b\bc\d2\b2\b4\ed\ff\1f\e8?/\c9\a5\1eF\02\84\bc\c3\fc\fa-\00`\e8?\1f\9a\f2\a2\f4\f7m<Pk\8c\f7\ff\9f\e8?\fd\95I\tS\04\8e\bcf\15g9\00\e0\e8?E{\c7\be\f3\04\8a\bcE\17\bf\e2\ff\1f\e9?< \0e@4\faw\bc\d1\9f\\\cc\ff_\e9?]i\a0\05\80\ffv\bcgG\ba;\00\a0\e9?\03~\ec\c4\c4\f8p<\a5-\b9\e7\ff\df\e9?\02F\8cG\d9\7f\8e<\af\fd.\d7\ff\1f\ea?~\ae\cdMU\0cj\bc\95\ff\04\de\ff_\ea?k\b2\e9\8c\a9}\86<+\8d^\ca\ff\9f\ea?\de\13L\b5\c9\84\82\bc\ea\03\ad\dd\ff\df\ea?<.`\ea\c8\12X<M=\r\f1\ff\1f\eb?\9cx\'\ad\dd\fa\8e\bcZ\16!\ce\ff_\eb?7\12\c6\19\17\cbS<t\e6P\d9\ff\9f\eb?\00\ce\94A\d9\f7s<\af\a8\9c\13\00\e0\eb?\c0\9b]!\c4\nu<\99\dfF[\00 \ec?\c9\c1\e9S\a6\eek<\ae\f7\b9@\00`\ec?\d6pJ\'\9f\07|\bc\8a\fdUb\00\a0\ec?\1fL\e8v@\0bz\bc]\tL\d9\ff\df\ec?\d7\b5\9a\f93\f9\88<\cf\d6u\f9\ff\1f\ed?\be\e1_f\08,X\bc\93\1cV\a2\ff_\ed?\f3\95\d2\9b(\04{\bc\0c\8b\"\9d\ff\9f\ed?6\a2\0f4Q\02\87<\16~\bce\00\e0\ed?\0c\d8\a4\16\1e\01u\bc\91G\f6\02\00 \ee?\e0b\ef\t/\80\89<\d8\a6\d7W\00`\ee?\fa\f7\0cXu\0b~\bc\0c\c0\ed\'\00\a0\ee?\11\98E\t\83\84\8c\bc|\cb\f5l\00\e0\ee?\f4v\15\95\'\80\8f\bc\cc}+x\00 \ef?\8fStr\d9\81\8f\bc\nE\0c&\00`\ef?\dc\ff\'\'\00q@\bc3\d5\8c\e8\ff\9f\ef?\b0\a8\fd\e1\dc\1bX\bc\89\86\0f\d5\ff\df\ef?n\8e\91\cb\1a\f9\87<g#)\04\00 \f0?\81F2e\f3\7f\9b<h\d6\e3\e3\ff_\f0?{\95\ae\dd\08\fa\86<W\a7\85\n\00\a0\f0?\91\fb\d3\80\de\e2W\bc\cc?_\1a\00\e0\f0?\14\f0\c5\053\82\91\bc\f5\ba\af\f8\ff\1f\f1?\c2\ba\80f\bb\fa\8b\bc\ad\91M\e5\ff_\f1?\ef\e77\17\12\7f\9d\bc\e16\ac\11\00\a0\f1?\ff\f5\16\05\n\00\9c<HB\c8\19\00\e0\f1?\a0]\da\e4\fb\82\90\bcn^\fe\0f\00 \f2?C\fb\9cL\d0\fd\88\bc\91\d8\9f&\00`\f2?\82\d1\94y*\fe\8c<\da\e6\a6)\00\a0\f2?\c5\8b^qs\02p\bc9>)\e0\ff\df\f2?\f9\a6\b2\da9|\9b<\82\f0\dc\f7\ff\1f\f3?TR\dcn3\f1}<`\8bZ\f0\ff_\f3?\eb1\cdLV\03\9e\bc\cc\ae\0e.\00\a0\f3?w\a4\d3K\e7\f0u<6\b2;\04\00\e0\f3?3\88\9d\14\cb}\9c<\ff\87\d1\02\00 \f4?(=-\cf\af\08~<\b1|8\r\00`\f4?\a6\99e\857\08\82<\89\9fV\04\00\a0\f4?\d2\bcO\90\\\fa\89\bc\f3C5\04\00\e0\f4?)S\17\ed%\11x\bc\0f\7f\02\cc\ff\1f\f5?\dcTw\84\d8\83\98<o\b3\87\fd\ff_\f5?\07(\d01\e7\t\87\bc\ba\f7\1d\f2\ff\9f\f5?\02{rh\9f\f7\87<\814\fc\eb\ff\df\f5?>\e90.\90\80\91\bc")
 (data $10 (i32.const 1051052) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data $11 (i32.const 1051116) "\1c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data $12 (i32.const 1051148) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $13 (i32.const 1051280) ")\15DNn\83\f9\a2\c0\dd4\f5\d1W\'\fcA\90C<\99\95b\dba\c5\bb\de\abcQ\fe")
 (data $14 (i32.const 1051324) "\1c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data $15 (i32.const 1051356) "\1c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data $16 (i32.const 1051388) "\1c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data $17 (i32.const 1051424) "n\83\f9\a2\00\00\00\00\d1W\'\fc)\15DN\99\95b\db\c0\dd4\f5\abcQ\feA\90C<:n$\b7a\c5\bb\de\ea.I\06\e0\d2MB\1c\eb\1d\fe\1c\92\d1\t\f55\82\e8>\a7)\b1&p\9c\e9\84D\bb.9\d6\919A~_\b4\8b_\84\9c\f49S\83\ff\97\f8\1f;(\f9\bd\8b\11/\ef\0f\98\05\de\cf~6m\1fm\nZf?FO\b7\t\cb\'\c7\ba\'u-\ea_\9e\f79\07={\f1\e5\eb\b1_\fbk\ea\92R\8aF0\03V\08]\8d\1f \bc\cf\f0\abk{\fca\91\e3\a9\1d6\f4\9a_\85\99e\08\1b\e6^\80\d8\ff\8d@h\a0\14W\15\06\061\'sM")
 (data $18 (i32.const 1051628) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data $19 (i32.const 1051660) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data $20 (i32.const 1051692) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data $21 (i32.const 1051728) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?n\bf\88\1aO;\9b<53\fb\a9=\f6\ef?]\dc\d8\9c\13`q\bca\80w>\9a\ec\ef?\d1f\87\10z^\90\bc\85\7fn\e8\15\e3\ef?\13\f6g5R\d2\8c<t\85\15\d3\b0\d9\ef?\fa\8e\f9#\80\ce\8b\bc\de\f6\dd)k\d0\ef?a\c8\e6aN\f7`<\c8\9bu\18E\c7\ef?\99\d33[\e4\a3\90<\83\f3\c6\ca>\be\ef?m{\83]\a6\9a\97<\0f\89\f9lX\b5\ef?\fc\ef\fd\92\1a\b5\8e<\f7Gr+\92\ac\ef?\d1\9c/p=\be><\a2\d1\d32\ec\a3\ef?\0bn\90\894\03j\bc\1b\d3\fe\aff\9b\ef?\0e\bd/*RV\95\bcQ[\12\d0\01\93\ef?U\eaN\8c\ef\80P\bc\cc1l\c0\bd\8a\ef?\16\f4\d5\b9#\c9\91\bc\e0-\a9\ae\9a\82\ef?\afU\\\e9\e3\d3\80<Q\8e\a5\c8\98z\ef?H\93\a5\ea\15\1b\80\bc{Q}<\b8r\ef?=2\deU\f0\1f\8f\bc\ea\8d\8c8\f9j\ef?\bfS\13?\8c\89\8b<u\cbo\eb[c\ef?&\eb\11v\9c\d9\96\bc\d4\\\04\84\e0[\ef?`/:>\f7\ec\9a<\aa\b9h1\87T\ef?\9d8\86\cb\82\e7\8f\bc\1d\d9\fc\"PM\ef?\8d\c3\a6DAo\8a<\d6\8cb\88;F\ef?}\04\e4\b0\05z\80<\96\dc}\91I?\ef?\94\a8\a8\e3\fd\8e\96<8bunz8\ef?}Ht\f2\18^\87<?\a6\b2O\ce1\ef?\f2\e7\1f\98+G\80<\dd|\e2eE+\ef?^\08q?{\b8\96\bc\81c\f5\e1\df$\ef?1\ab\tm\e1\f7\82<\e1\de\1f\f5\9d\1e\ef?\fa\bfo\1a\9b!=\bc\90\d9\da\d0\7f\18\ef?\b4\n\0cr\827\8b<\0b\03\e4\a6\85\12\ef?\8f\cb\ce\89\92\14n<V/>\a9\af\0c\ef?\b6\ab\b0MuM\83<\15\b71\n\fe\06\ef?Lt\ac\e2\01B\86<1\d8L\fcp\01\ef?J\f8\d3]9\dd\8f<\ff\16d\b2\08\fc\ee?\04[\8e;\80\a3\86\bc\f1\9f\92_\c5\f6\ee?hPK\cc\edJ\92\bc\cb\a9:7\a7\f1\ee?\8e-Q\1b\f8\07\99\bcf\d8\05m\ae\ec\ee?\d26\94>\e8\d1q\bc\f7\9f\e54\db\e7\ee?\15\1b\ce\b3\19\19\99\bc\e5\a8\13\c3-\e3\ee?mL*\a7H\9f\85<\"4\12L\a6\de\ee?\8ai(z`\12\93\bc\1c\80\ac\04E\da\ee?[\89\17H\8f\a7X\bc*.\f7!\n\d6\ee?\1b\9aIg\9b,|\bc\97\a8P\d9\f5\d1\ee?\11\ac\c2`\edcC<-\89a`\08\ce\ee?\efd\06;\tf\96<W\00\1d\edA\ca\ee?y\03\a1\da\e1\ccn<\d0<\c1\b5\a2\c6\ee?0\12\0f?\8e\ff\93<\de\d3\d7\f0*\c3\ee?\b0\afz\bb\ce\90v<\'*6\d5\da\bf\ee?w\e0T\eb\bd\1d\93<\r\dd\fd\99\b2\bc\ee?\8e\a3q\004\94\8f\bc\a7,\9dv\b2\b9\ee?I\a3\93\dc\cc\de\87\bcBf\cf\a2\da\b6\ee?_8\0f\bd\c6\dex\bc\82O\9dV+\b4\ee?\f6\\{\ecF\12\86\bc\0f\92]\ca\a4\b1\ee?\8e\d7\fd\18\055\93<\da\'\b56G\af\ee?\05\9b\8a/\b7\98{<\fd\c7\97\d4\12\ad\ee?\tT\1c\e2\e1c\90<)TH\dd\07\ab\ee?\ea\c6\19P\85\c74<\b7FY\8a&\a9\ee?5\c0d+\e62\94<H!\ad\15o\a7\ee?\9fv\99aJ\e4\8c\bc\t\dcv\b9\e1\a5\ee?\a8M\ef;\c53\8c\bc\85U:\b0~\a4\ee?\ae\e9+\89xS\84\bc \c3\cc4F\a3\ee?XXVx\dd\ce\93\bc%\"U\828\a2\ee?d\19~\80\aa\10W<s\a9L\d4U\a1\ee?(\"^\bf\ef\b3\93\bc\cd;\7ff\9e\a0\ee?\82\b94\87\ad\12j\bc\bf\da\0bu\12\a0\ee?\ee\a9m\b8\efgc\bc/\1ae<\b2\9f\ee?Q\88\e0T=\dc\80\bc\84\94Q\f9}\9f\ee?\cf>Z~d\1fx\bct_\ec\e8u\9f\ee?\b0}\8b\c0J\ee\86\bct\81\a5H\9a\9f\ee?\8a\e6U\1e2\19\86\bc\c9gBV\eb\9f\ee?\d3\d4\t^\cb\9c\90<?]\deOi\a0\ee?\1d\a5M\b9\dc2{\bc\87\01\ebs\14\a1\ee?k\c0gT\fd\ec\94<2\c10\01\ed\a1\ee?Ul\d6\ab\e1\ebe<bN\cf6\f3\a2\ee?B\cf\b3/\c5\a1\88\bc\12\1a>T\'\a4\ee?47;\f1\b6i\93\bc\13\ceL\99\89\a5\ee?\1e\ff\19:\84^\80\bc\ad\c7#F\1a\a7\ee?nWr\d8P\d4\94\bc\ed\92D\9b\d9\a8\ee?\00\8a\0e[g\ad\90<\99f\8a\d9\c7\aa\ee?\b4\ea\f0\c1/\b7\8d<\db\a0*B\e5\ac\ee?\ff\e7\c5\9c`\b6e\bc\8cD\b5\162\af\ee?D_\f3Y\83\f6{<6w\15\99\ae\b1\ee?\83=\1e\a7\1f\t\93\bc\c6\ff\91\0b[\b4\ee?)\1el\8b\b8\a9]\bc\e5\c5\cd\b07\b7\ee?Y\b9\90|\f9#l\bc\0fR\c8\cbD\ba\ee?\aa\f9\f4\"CC\92\bcPN\de\9f\82\bd\ee?K\8ef\d7l\ca\85\bc\ba\07\cap\f1\c0\ee?\'\ce\91+\fc\afq<\90\f0\a3\82\91\c4\ee?\bbs\n\e15\d2m<##\e3\19c\c8\ee?c\"b\"\04\c5\87\bce\e5]{f\cc\ee?\d51\e2\e3\86\1c\8b<3-J\ec\9b\d0\ee?\15\bb\bc\d3\d1\bb\91\bc]%>\b2\03\d5\ee?\d21\ee\9c1\cc\90<X\b30\13\9e\d9\ee?\b3Zsn\84i\84<\bf\fdyUk\de\ee?\b4\9d\8e\97\cd\df\82\bcz\f3\d3\bfk\e3\ee?\873\cb\92w\1a\8c<\ad\d3Z\99\9f\e8\ee?\fa\d9\d1J\8f{\90\bcf\b6\8d)\07\ee\ee?\ba\ae\dcV\d9\c3U\bc\fb\15O\b8\a2\f3\ee?@\f6\a6=\0e\a4\90\bc:Y\e5\8dr\f9\ee?4\93\ad8\f4\d6h\bcG^\fb\f2v\ff\ee?5\8aXk\e2\ee\91\bcJ\06\a10\b0\05\ef?\cd\dd_\n\d7\fft<\d2\c1K\90\1e\0c\ef?\ac\98\92\fa\fb\bd\91\bc\t\1e\d7[\c2\12\ef?\b3\0c\af0\aens<\9cR\85\dd\9b\19\ef?\94\fd\9f\\2\e3\8e<z\d0\ff_\ab \ef?\acY\t\d1\8f\e0\84<K\d1W.\f1\'\ef?g\1aN8\af\cdc<\b5\e7\06\94m/\ef?h\19\92l,kg<i\90\ef\dc 7\ef?\d2\b5\cc\83\18\8a\80\bc\fa\c3]U\0b?\ef?o\fa\ff?]\ad\8f\bc|\89\07J-G\ef?I\a9u8\ae\r\90\bc\f2\89\r\08\87O\ef?\a7\07=\a6\85\a3t<\87\a4\fb\dc\18X\ef?\0f\"@ \9e\91\82\bc\98\83\c9\16\e3`\ef?\ac\92\c1\d5PZ\8e<\852\db\03\e6i\ef?Kk\01\acY:\84<`\b4\01\f3!s\ef?\1f>\b4\07!\d5\82\bc_\9b{3\97|\ef?\c9\rG;\b9*\89\bc)\a1\f5\14F\86\ef?\d3\88:`\04\b6t<\f6?\8b\e7.\90\ef?qr\9dQ\ec\c5\83<\83L\c7\fbQ\9a\ef?\f0\91\d3\8f\12\f7\8f\bc\da\90\a4\a2\af\a4\ef?}t#\e2\98\ae\8d\bc\f1g\8e-H\af\ef?\08 \aaA\bc\c3\8e<\'Za\ee\1b\ba\ef?2\eb\a9\c3\94+\84<\97\bak7+\c5\ef?\ee\85\d11\a9d\8a<@En[v\d0\ef?\ed\e3;\e4\ba7\8e\bc\14\be\9c\ad\fd\db\ef?\9d\cd\91M;\89w<\d8\90\9e\81\c1\e7\ef?\89\cc`A\c1\05S<\f1q\8f+\c2\f3\ef?")
 (data $22 (i32.const 1053788) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data $23 (i32.const 1053820) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data $24 (i32.const 1053852) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data $25 (i32.const 1053900) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00HB\000\acF\00\00zE")
 (data $26 (i32.const 1053932) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\n\d7#<\00\00 B\00\00\80?")
 (data $27 (i32.const 1053964) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00 \c1\00\00 A\00\00\00\00")
 (data $28 (i32.const 1053996) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00HB\000\acF\00\00zE")
 (data $29 (i32.const 1054028) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\n\d7#<\f6(|?\00\00\80?")
 (data $30 (i32.const 1054060) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00HB\000\acF\00\00zE")
 (data $31 (i32.const 1054092) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\n\d7#<\f6(|?\00\00\00?")
 (data $32 (i32.const 1054124) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00\00\00\00\00\80?\8f\c2\f5<")
 (data $33 (i32.const 1054156) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00\00\00\00\00\80?\cd\cc\cc=")
 (data $34 (i32.const 1054188) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00\00\00\00\00\80?\00\00\00?")
 (data $35 (i32.const 1054220) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00\00\00\00\00\80?\00\00\00?")
 (data $36 (i32.const 1054252) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00\00\00\00\00\80?\00\00\00?")
 (data $37 (i32.const 1054284) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00\00\00\ef\ff\7f?\00\00\00?")
 (data $38 (i32.const 1054316) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00\00\00\ef\ff\7f?\00\00\00?")
 (data $39 (i32.const 1054348) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00\00\00\00\00\80?\00\00\00?")
 (data $40 (i32.const 1054380) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00\00\00\00\00\00@\00\00\00?")
 (data $41 (i32.const 1054412) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00\00\00\00\00\00\00\00@\00\00\00?")
 (data $42 (i32.const 1054448) "\be\f3\f8y\eca\f6?\190\96[\c6\fe\de\bf=\88\afJ\edq\f5?\a4\fc\d42h\0b\db\bf\b0\10\f0\f09\95\f4?{\b7\1f\n\8bA\d7\bf\85\03\b8\b0\95\c9\f3?{\cfm\1a\e9\9d\d3\bf\a5d\88\0c\19\r\f3?1\b6\f2\f3\9b\1d\d0\bf\a0\8e\0b{\"^\f2?\f0z;\1b\1d|\c9\bf?4\1aJJ\bb\f1?\9f<\af\93\e3\f9\c2\bf\ba\e5\8a\f0X#\f1?\\\8dx\bf\cb`\b9\bf\a7\00\99A?\95\f0?\ce_G\b6\9do\aa\bf\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00\00\acG\9a\fd\8c`\ee?=\f5$\9f\ca8\b3?\a0j\02\1f\b3\a4\ec?\ba\918T\a9v\c4?\e6\fcjW6 \eb?\d2\e4\c4J\0b\84\ce?-\aa\a1c\d1\c2\e9?\1ce\c6\f0E\06\d4?\edAx\03\e6\86\e8?\f8\9f\1b,\9c\8e\d8?bHS\f5\dcg\e7?\cc{\b1N\a4\e0\dc?")
 (data $43 (i32.const 1054704) "\00\00\00\00\00\00\f0?t\85\15\d3\b0\d9\ef?\0f\89\f9lX\b5\ef?Q[\12\d0\01\93\ef?{Q}<\b8r\ef?\aa\b9h1\87T\ef?8bunz8\ef?\e1\de\1f\f5\9d\1e\ef?\15\b71\n\fe\06\ef?\cb\a9:7\a7\f1\ee?\"4\12L\a6\de\ee?-\89a`\08\ce\ee?\'*6\d5\da\bf\ee?\82O\9dV+\b4\ee?)TH\dd\07\ab\ee?\85U:\b0~\a4\ee?\cd;\7ff\9e\a0\ee?t_\ec\e8u\9f\ee?\87\01\ebs\14\a1\ee?\13\ceL\99\89\a5\ee?\db\a0*B\e5\ac\ee?\e5\c5\cd\b07\b7\ee?\90\f0\a3\82\91\c4\ee?]%>\b2\03\d5\ee?\ad\d3Z\99\9f\e8\ee?G^\fb\f2v\ff\ee?\9cR\85\dd\9b\19\ef?i\90\ef\dc 7\ef?\87\a4\fb\dc\18X\ef?_\9b{3\97|\ef?\da\90\a4\a2\af\a4\ef?@En[v\d0\ef?")
 (data $44 (i32.const 1054960) "\00\00\00\00\00\a0\f6?\00\00\00\00\00\00\00\00\00\c8\b9\f2\82,\d6\bf\80V7($\b4\fa<\00\00\00\00\00\80\f6?\00\00\00\00\00\00\00\00\00\08X\bf\bd\d1\d5\bf \f7\e0\d8\08\a5\1c\bd\00\00\00\00\00`\f6?\00\00\00\00\00\00\00\00\00XE\17wv\d5\bfmP\b6\d5\a4b#\bd\00\00\00\00\00@\f6?\00\00\00\00\00\00\00\00\00\f8-\87\ad\1a\d5\bf\d5g\b0\9e\e4\84\e6\bc\00\00\00\00\00 \f6?\00\00\00\00\00\00\00\00\00xw\95_\be\d4\bf\e0>)\93i\1b\04\bd\00\00\00\00\00\00\f6?\00\00\00\00\00\00\00\00\00`\1c\c2\8ba\d4\bf\cc\84LH/\d8\13=\00\00\00\00\00\e0\f5?\00\00\00\00\00\00\00\00\00\a8\86\860\04\d4\bf:\0b\82\ed\f3B\dc<\00\00\00\00\00\c0\f5?\00\00\00\00\00\00\00\00\00HiUL\a6\d3\bf`\94Q\86\c6\b1 =\00\00\00\00\00\a0\f5?\00\00\00\00\00\00\00\00\00\80\98\9a\ddG\d3\bf\92\80\c5\d4MY%=\00\00\00\00\00\80\f5?\00\00\00\00\00\00\00\00\00 \e1\ba\e2\e8\d2\bf\d8+\b7\99\1e{&=\00\00\00\00\00`\f5?\00\00\00\00\00\00\00\00\00\88\de\13Z\89\d2\bf?\b0\cf\b6\14\ca\15=\00\00\00\00\00`\f5?\00\00\00\00\00\00\00\00\00\88\de\13Z\89\d2\bf?\b0\cf\b6\14\ca\15=\00\00\00\00\00@\f5?\00\00\00\00\00\00\00\00\00x\cf\fbA)\d2\bfv\daS($Z\16\bd\00\00\00\00\00 \f5?\00\00\00\00\00\00\00\00\00\98i\c1\98\c8\d1\bf\04T\e7h\bc\af\1f\bd\00\00\00\00\00\00\f5?\00\00\00\00\00\00\00\00\00\a8\ab\ab\\g\d1\bf\f0\a8\823\c6\1f\1f=\00\00\00\00\00\e0\f4?\00\00\00\00\00\00\00\00\00H\ae\f9\8b\05\d1\bffZ\05\fd\c4\a8&\bd\00\00\00\00\00\c0\f4?\00\00\00\00\00\00\00\00\00\90s\e2$\a3\d0\bf\0e\03\f4~\eek\0c\bd\00\00\00\00\00\a0\f4?\00\00\00\00\00\00\00\00\00\d0\b4\94%@\d0\bf\7f-\f4\9e\b86\f0\bc\00\00\00\00\00\a0\f4?\00\00\00\00\00\00\00\00\00\d0\b4\94%@\d0\bf\7f-\f4\9e\b86\f0\bc\00\00\00\00\00\80\f4?\00\00\00\00\00\00\00\00\00@^m\18\b9\cf\bf\87<\99\ab*W\r=\00\00\00\00\00`\f4?\00\00\00\00\00\00\00\00\00`\dc\cb\ad\f0\ce\bf$\af\86\9c\b7&+=\00\00\00\00\00@\f4?\00\00\00\00\00\00\00\00\00\f0*n\07\'\ce\bf\10\ff?TO/\17\bd\00\00\00\00\00 \f4?\00\00\00\00\00\00\00\00\00\c0Ok!\\\cd\bf\1bh\ca\bb\91\ba!=\00\00\00\00\00\00\f4?\00\00\00\00\00\00\00\00\00\a0\9a\c7\f7\8f\cc\bf4\84\9fhOy\'=\00\00\00\00\00\00\f4?\00\00\00\00\00\00\00\00\00\a0\9a\c7\f7\8f\cc\bf4\84\9fhOy\'=\00\00\00\00\00\e0\f3?\00\00\00\00\00\00\00\00\00\90-t\86\c2\cb\bf\8f\b7\8b1\b0N\19=\00\00\00\00\00\c0\f3?\00\00\00\00\00\00\00\00\00\c0\80N\c9\f3\ca\bff\90\cd?cN\ba<\00\00\00\00\00\a0\f3?\00\00\00\00\00\00\00\00\00\b0\e2\1f\bc#\ca\bf\ea\c1F\dcd\8c%\bd\00\00\00\00\00\a0\f3?\00\00\00\00\00\00\00\00\00\b0\e2\1f\bc#\ca\bf\ea\c1F\dcd\8c%\bd\00\00\00\00\00\80\f3?\00\00\00\00\00\00\00\00\00P\f4\9cZR\c9\bf\e3\d4\c1\04\d9\d1*\bd\00\00\00\00\00`\f3?\00\00\00\00\00\00\00\00\00\d0 e\a0\7f\c8\bf\t\fa\db\7f\bf\bd+=\00\00\00\00\00@\f3?\00\00\00\00\00\00\00\00\00\e0\10\02\89\ab\c7\bfXJSr\90\db+=\00\00\00\00\00@\f3?\00\00\00\00\00\00\00\00\00\e0\10\02\89\ab\c7\bfXJSr\90\db+=\00\00\00\00\00 \f3?\00\00\00\00\00\00\00\00\00\d0\19\e7\0f\d6\c6\bff\e2\b2\a3j\e4\10\bd\00\00\00\00\00\00\f3?\00\00\00\00\00\00\00\00\00\90\a7p0\ff\c5\bf9P\10\9fC\9e\1e\bd\00\00\00\00\00\00\f3?\00\00\00\00\00\00\00\00\00\90\a7p0\ff\c5\bf9P\10\9fC\9e\1e\bd\00\00\00\00\00\e0\f2?\00\00\00\00\00\00\00\00\00\b0\a1\e3\e5&\c5\bf\8f[\07\90\8b\de \bd\00\00\00\00\00\c0\f2?\00\00\00\00\00\00\00\00\00\80\cbl+M\c4\bf<x5a\c1\0c\17=\00\00\00\00\00\c0\f2?\00\00\00\00\00\00\00\00\00\80\cbl+M\c4\bf<x5a\c1\0c\17=\00\00\00\00\00\a0\f2?\00\00\00\00\00\00\00\00\00\90\1e \fcq\c3\bf:T\'M\86x\f1<\00\00\00\00\00\80\f2?\00\00\00\00\00\00\00\00\00\f0\1f\f8R\95\c2\bf\08\c4q\170\8d$\bd\00\00\00\00\00`\f2?\00\00\00\00\00\00\00\00\00`/\d5*\b7\c1\bf\96\a3\11\18\a4\80.\bd\00\00\00\00\00`\f2?\00\00\00\00\00\00\00\00\00`/\d5*\b7\c1\bf\96\a3\11\18\a4\80.\bd\00\00\00\00\00@\f2?\00\00\00\00\00\00\00\00\00\90\d0|~\d7\c0\bf\f4[\e8\88\96i\n=\00\00\00\00\00@\f2?\00\00\00\00\00\00\00\00\00\90\d0|~\d7\c0\bf\f4[\e8\88\96i\n=\00\00\00\00\00 \f2?\00\00\00\00\00\00\00\00\00\e0\db1\91\ec\bf\bf\f23\a3\\Tu%\bd\00\00\00\00\00\00\f2?\00\00\00\00\00\00\00\00\00\00+n\07\'\be\bf<\00\f0*,4*=\00\00\00\00\00\00\f2?\00\00\00\00\00\00\00\00\00\00+n\07\'\be\bf<\00\f0*,4*=\00\00\00\00\00\e0\f1?\00\00\00\00\00\00\00\00\00\c0[\8fT^\bc\bf\06\be_XW\0c\1d\bd\00\00\00\00\00\c0\f1?\00\00\00\00\00\00\00\00\00\e0J:m\92\ba\bf\c8\aa[\e859%=\00\00\00\00\00\c0\f1?\00\00\00\00\00\00\00\00\00\e0J:m\92\ba\bf\c8\aa[\e859%=\00\00\00\00\00\a0\f1?\00\00\00\00\00\00\00\00\00\a01\d6E\c3\b8\bfhV/M)|\13=\00\00\00\00\00\a0\f1?\00\00\00\00\00\00\00\00\00\a01\d6E\c3\b8\bfhV/M)|\13=\00\00\00\00\00\80\f1?\00\00\00\00\00\00\00\00\00`\e5\8a\d2\f0\b6\bf\das3\c97\97&\bd\00\00\00\00\00`\f1?\00\00\00\00\00\00\00\00\00 \06?\07\1b\b5\bfW^\c6a[\02\1f=\00\00\00\00\00`\f1?\00\00\00\00\00\00\00\00\00 \06?\07\1b\b5\bfW^\c6a[\02\1f=\00\00\00\00\00@\f1?\00\00\00\00\00\00\00\00\00\e0\1b\96\d7A\b3\bf\df\13\f9\cc\da^,=\00\00\00\00\00@\f1?\00\00\00\00\00\00\00\00\00\e0\1b\96\d7A\b3\bf\df\13\f9\cc\da^,=\00\00\00\00\00 \f1?\00\00\00\00\00\00\00\00\00\80\a3\ee6e\b1\bf\t\a3\8fv^|\14=\00\00\00\00\00\00\f1?\00\00\00\00\00\00\00\00\00\80\11\c00\n\af\bf\91\8e6\83\9eY-=\00\00\00\00\00\00\f1?\00\00\00\00\00\00\00\00\00\80\11\c00\n\af\bf\91\8e6\83\9eY-=\00\00\00\00\00\e0\f0?\00\00\00\00\00\00\00\00\00\80\19q\ddB\ab\bfLp\d6\e5z\82\1c=\00\00\00\00\00\e0\f0?\00\00\00\00\00\00\00\00\00\80\19q\ddB\ab\bfLp\d6\e5z\82\1c=\00\00\00\00\00\c0\f0?\00\00\00\00\00\00\00\00\00\c02\f6Xt\a7\bf\ee\a1\f24F\fc,\bd\00\00\00\00\00\c0\f0?\00\00\00\00\00\00\00\00\00\c02\f6Xt\a7\bf\ee\a1\f24F\fc,\bd\00\00\00\00\00\a0\f0?\00\00\00\00\00\00\00\00\00\c0\fe\b9\87\9e\a3\bf\aa\fe&\f5\b7\02\f5<\00\00\00\00\00\a0\f0?\00\00\00\00\00\00\00\00\00\c0\fe\b9\87\9e\a3\bf\aa\fe&\f5\b7\02\f5<\00\00\00\00\00\80\f0?\00\00\00\00\00\00\00\00\00\00x\0e\9b\82\9f\bf\e4\t~|&\80)\bd\00\00\00\00\00\80\f0?\00\00\00\00\00\00\00\00\00\00x\0e\9b\82\9f\bf\e4\t~|&\80)\bd\00\00\00\00\00`\f0?\00\00\00\00\00\00\00\00\00\80\d5\07\1b\b9\97\bf9\a6\fa\93T\8d(\bd\00\00\00\00\00@\f0?\00\00\00\00\00\00\00\00\00\00\fc\b0\a8\c0\8f\bf\9c\a6\d3\f6|\1e\df\bc\00\00\00\00\00@\f0?\00\00\00\00\00\00\00\00\00\00\fc\b0\a8\c0\8f\bf\9c\a6\d3\f6|\1e\df\bc\00\00\00\00\00 \f0?\00\00\00\00\00\00\00\00\00\00\10k*\e0\7f\bf\e4@\da\r?\e2\19\bd\00\00\00\00\00 \f0?\00\00\00\00\00\00\00\00\00\00\10k*\e0\7f\bf\e4@\da\r?\e2\19\bd\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\ef?\00\00\00\00\00\00\00\00\00\00\89u\15\10\80?\e8+\9d\99k\c7\10\bd\00\00\00\00\00\80\ef?\00\00\00\00\00\00\00\00\00\80\93XV \90?\d2\f7\e2\06[\dc#\bd\00\00\00\00\00@\ef?\00\00\00\00\00\00\00\00\00\00\c9(%I\98?4\0cZ2\ba\a0*\bd\00\00\00\00\00\00\ef?\00\00\00\00\00\00\00\00\00@\e7\89]A\a0?S\d7\f1\\\c0\11\01=\00\00\00\00\00\c0\ee?\00\00\00\00\00\00\00\00\00\00.\d4\aef\a4?(\fd\bdus\16,\bd\00\00\00\00\00\80\ee?\00\00\00\00\00\00\00\00\00\c0\9f\14\aa\94\a8?}&Z\d0\95y\19\bd\00\00\00\00\00@\ee?\00\00\00\00\00\00\00\00\00\c0\dd\cds\cb\ac?\07(\d8G\f2h\1a\bd\00\00\00\00\00 \ee?\00\00\00\00\00\00\00\00\00\c0\06\c01\ea\ae?{;\c9O>\11\0e\bd\00\00\00\00\00\e0\ed?\00\00\00\00\00\00\00\00\00`F\d1;\97\b1?\9b\9e\rV]2%\bd\00\00\00\00\00\a0\ed?\00\00\00\00\00\00\00\00\00\e0\d1\a7\f5\bd\b3?\d7N\db\a5^\c8,=\00\00\00\00\00`\ed?\00\00\00\00\00\00\00\00\00\a0\97MZ\e9\b5?\1e\1d]<\06i,\bd\00\00\00\00\00@\ed?\00\00\00\00\00\00\00\00\00\c0\ea\n\d3\00\b7?2\ed\9d\a9\8d\1e\ec<\00\00\00\00\00\00\ed?\00\00\00\00\00\00\00\00\00@Y]^3\b9?\daG\bd:\\\11#=\00\00\00\00\00\c0\ec?\00\00\00\00\00\00\00\00\00`\ad\8d\c8j\bb?\e5h\f7+\80\90\13\bd\00\00\00\00\00\a0\ec?\00\00\00\00\00\00\00\00\00@\bc\01X\88\bc?\d3\acZ\c6\d1F&=\00\00\00\00\00`\ec?\00\00\00\00\00\00\00\00\00 \n\839\c7\be?\e0E\e6\afh\c0-\bd\00\00\00\00\00@\ec?\00\00\00\00\00\00\00\00\00\e0\db9\91\e8\bf?\fd\n\a1O\d64%\bd\00\00\00\00\00\00\ec?\00\00\00\00\00\00\00\00\00\e0\'\82\8e\17\c1?\f2\07-\cex\ef!=\00\00\00\00\00\e0\eb?\00\00\00\00\00\00\00\00\00\f0#~+\aa\c1?4\998D\8e\a7,=\00\00\00\00\00\a0\eb?\00\00\00\00\00\00\00\00\00\80\86\0ca\d1\c2?\a1\b4\81\cbl\9d\03=\00\00\00\00\00\80\eb?\00\00\00\00\00\00\00\00\00\90\15\b0\fce\c3?\89rK#\a8/\c6<\00\00\00\00\00@\eb?\00\00\00\00\00\00\00\00\00\b03\83=\91\c4?x\b6\fdTy\83%=\00\00\00\00\00 \eb?\00\00\00\00\00\00\00\00\00\b0\a1\e4\e5\'\c5?\c7}i\e5\e83&=\00\00\00\00\00\e0\ea?\00\00\00\00\00\00\00\00\00\10\8c\beNW\c6?x.<,\8b\cf\19=\00\00\00\00\00\c0\ea?\00\00\00\00\00\00\00\00\00pu\8b\12\f0\c6?\e1!\9c\e5\8d\11%\bd\00\00\00\00\00\a0\ea?\00\00\00\00\00\00\00\00\00PD\85\8d\89\c7?\05C\91p\10f\1c\bd\00\00\00\00\00`\ea?\00\00\00\00\00\00\00\00\00\009\eb\af\be\c8?\d1,\e9\aaT=\07\bd\00\00\00\00\00@\ea?\00\00\00\00\00\00\00\00\00\00\f7\dcZZ\c9?o\ff\a0X(\f2\07=\00\00\00\00\00\00\ea?\00\00\00\00\00\00\00\00\00\e0\8a<\ed\93\ca?i!VPCr(\bd\00\00\00\00\00\e0\e9?\00\00\00\00\00\00\00\00\00\d0[W\d81\cb?\aa\e1\acN\8d5\0c\bd\00\00\00\00\00\c0\e9?\00\00\00\00\00\00\00\00\00\e0;8\87\d0\cb?\b6\12TY\c4K-\bd\00\00\00\00\00\a0\e9?\00\00\00\00\00\00\00\00\00\10\f0\c6\fbo\cc?\d2+\96\c5r\ec\f1\bc\00\00\00\00\00`\e9?\00\00\00\00\00\00\00\00\00\90\d4\b0=\b1\cd?5\b0\15\f7*\ff*\bd\00\00\00\00\00@\e9?\00\00\00\00\00\00\00\00\00\10\e7\ff\0eS\ce?0\f4A`\'\12\c2<\00\00\00\00\00 \e9?\00\00\00\00\00\00\00\00\00\00\dd\e4\ad\f5\ce?\11\8e\bbe\15!\ca\bc\00\00\00\00\00\00\e9?\00\00\00\00\00\00\00\00\00\b0\b3l\1c\99\cf?0\df\0c\ca\ec\cb\1b=\00\00\00\00\00\c0\e8?\00\00\00\00\00\00\00\00\00XM`8q\d0?\91N\ed\16\db\9c\f8<\00\00\00\00\00\a0\e8?\00\00\00\00\00\00\00\00\00`ag-\c4\d0?\e9\ea<\16\8b\18\'=\00\00\00\00\00\80\e8?\00\00\00\00\00\00\00\00\00\e8\'\82\8e\17\d1?\1c\f0\a5c\0e!,\bd\00\00\00\00\00`\e8?\00\00\00\00\00\00\00\00\00\f8\ac\cb\\k\d1?\81\16\a5\f7\cd\9a+=\00\00\00\00\00@\e8?\00\00\00\00\00\00\00\00\00hZc\99\bf\d1?\b7\bdGQ\ed\a6,=\00\00\00\00\00 \e8?\00\00\00\00\00\00\00\00\00\b8\0emE\14\d2?\ea\baF\ba\de\87\n=\00\00\00\00\00\e0\e7?\00\00\00\00\00\00\00\00\00\90\dc|\f0\be\d2?\f4\04PJ\fa\9c*=\00\00\00\00\00\c0\e7?\00\00\00\00\00\00\00\00\00`\d3\e1\f1\14\d3?\b8<!\d3z\e2(\bd\00\00\00\00\00\a0\e7?\00\00\00\00\00\00\00\00\00\10\bevgk\d3?\c8w\f1\b0\cdn\11=\00\00\00\00\00\80\e7?\00\00\00\00\00\00\00\00\0003wR\c2\d3?\\\bd\06\b6T;\18=\00\00\00\00\00`\e7?\00\00\00\00\00\00\00\00\00\e8\d5#\b4\19\d4?\9d\e0\90\ec6\e4\08=\00\00\00\00\00@\e7?\00\00\00\00\00\00\00\00\00\c8q\c2\8dq\d4?u\d6g\t\ce\'/\bd\00\00\00\00\00 \e7?\00\00\00\00\00\00\00\00\000\17\9e\e0\c9\d4?\a4\d8\n\1b\89 .\bd\00\00\00\00\00\00\e7?\00\00\00\00\00\00\00\00\00\a08\07\ae\"\d5?Y\c7d\81p\be.=\00\00\00\00\00\e0\e6?\00\00\00\00\00\00\00\00\00\d0\c8S\f7{\d5?\ef@]\ee\ed\ad\1f=\00\00\00\00\00\c0\e6?\00\00\00\00\00\00\00\00\00`Y\df\bd\d5\d5?\dce\a4\08*\0b\n\bd")
 (elem $0 (i32.const 1) $assembly/core/antialias-wavetable/Real.saw $assembly/core/antialias-wavetable/Real.ramp $assembly/core/antialias-wavetable/Real.sqr $assembly/core/antialias-wavetable/Real.tri $~lib/math/NativeMath.sin $assembly/util/phaseToRadians $~lib/math/NativeMath.cos $assembly/core/wavetable/exp $assembly/core/wave/Wave.noise)
 (export "preventTreeShaking" (func $assembly/index/preventTreeShaking))
 (export "benchAudio" (func $assembly/bench/bench-audio/benchAudio))
 (export "benchAudioGain" (func $assembly/bench/bench-audio/benchAudioGain))
 (export "benchAudioTwo" (func $assembly/bench/bench-audio/benchAudioTwo))
 (export "WAVETABLE_SIZE" (global $assembly/core/constants/WAVETABLE_SIZE))
 (export "DELAY_MAX_SIZE" (global $assembly/core/constants/DELAY_MAX_SIZE))
 (export "SAMPLE_MAX_SIZE" (global $assembly/core/constants/SAMPLE_MAX_SIZE))
 (export "ANTIALIAS_WAVETABLE_OVERSAMPLING" (global $assembly/core/constants/ANTIALIAS_WAVETABLE_OVERSAMPLING))
 (export "memory" (memory $0))
 (export "gen_daverb_nearestPowerOfTwo" (func $assembly/gen/daverb/nearestPowerOfTwo))
 (export "wavetable_set_length" (func $assembly/core/wavetable/Wavetable#set:length))
 (export "wavetable_set_mask" (func $assembly/core/wavetable/Wavetable#set:mask))
 (export "wavetable_set_phases" (func $assembly/core/wavetable/Wavetable#set:phases))
 (export "wavetable_set_sine" (func $assembly/core/wavetable/Wavetable#set:sine))
 (export "wavetable_set_cos" (func $assembly/core/wavetable/Wavetable#set:cos))
 (export "wavetable_set_exp" (func $assembly/core/wavetable/Wavetable#set:exp))
 (export "wavetable_set_noise" (func $assembly/core/wavetable/Wavetable#set:noise))
 (export "util_nextPowerOfTwo" (func $assembly/util/nextPowerOfTwo))
 (export "antialias_wavetable_AntialiasWavetable_set_real" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:real))
 (export "antialias_wavetable_AntialiasWavetable_set_imag" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:imag))
 (export "antialias_wavetable_AntialiasWavetable_set_freqs" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:freqs))
 (export "antialias_wavetable_AntialiasWavetable_set_saw" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:saw))
 (export "antialias_wavetable_AntialiasWavetable_set_ramp" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:ramp))
 (export "antialias_wavetable_AntialiasWavetable_set_sqr" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:sqr))
 (export "antialias_wavetable_AntialiasWavetable_set_tri" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:tri))
 (export "antialias_wavetable_AntialiasWavetable_set_audioRate" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:audioRate))
 (export "antialias_wavetable_AntialiasWavetable_set_topFreq" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:topFreq))
 (export "antialias_wavetable_AntialiasWavetable_set_maxHarms" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:maxHarms))
 (export "antialias_wavetable_AntialiasWavetable_set_numOfTables" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:numOfTables))
 (export "antialias_wavetable_AntialiasWavetable_set_tableLength" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:tableLength))
 (export "antialias_wavetable_AntialiasWavetable_set_tableMask" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:tableMask))
 (export "antialias_wavetable_AntialiasWavetable_get_tableLength" (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:tableLength))
 (export "antialias_wavetable_AntialiasWavetable_set_stepShift" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:stepShift))
 (export "antialias_wavetable_AntialiasWavetable_get_saw" (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:saw))
 (export "antialias_wavetable_Real_saw" (func $assembly/core/antialias-wavetable/Real.saw))
 (export "antialias_wavetable_AntialiasWavetable_get_topFreq" (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:topFreq))
 (export "antialias_wavetable_AntialiasWavetable_get_maxHarms" (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:maxHarms))
 (export "antialias_wavetable_AntialiasWavetable_get_imag" (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:imag))
 (export "antialias_wavetable_AntialiasWavetable_get_real" (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:real))
 (export "antialias_wavetable_AntialiasWavetable_defineWaveform" (func $assembly/core/antialias-wavetable/AntialiasWavetable#defineWaveform))
 (export "fft_" (func $assembly/core/fft/fft))
 (export "antialias_wavetable_AntialiasWavetable_makeWavetable" (func $assembly/core/antialias-wavetable/AntialiasWavetable#makeWavetable))
 (export "antialias_wavetable_AntialiasWavetable_get_freqs" (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:freqs))
 (export "antialias_wavetable_AntialiasWavetable_makeTables" (func $assembly/core/antialias-wavetable/AntialiasWavetable#makeTables))
 (export "antialias_wavetable_AntialiasWavetable_get_ramp" (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:ramp))
 (export "antialias_wavetable_Real_ramp" (func $assembly/core/antialias-wavetable/Real.ramp))
 (export "antialias_wavetable_AntialiasWavetable_get_sqr" (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:sqr))
 (export "antialias_wavetable_Real_sqr" (func $assembly/core/antialias-wavetable/Real.sqr))
 (export "antialias_wavetable_AntialiasWavetable_get_tri" (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:tri))
 (export "antialias_wavetable_Real_tri" (func $assembly/core/antialias-wavetable/Real.tri))
 (export "antialias_wavetable_AntialiasWavetable_set_tableIndex" (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:tableIndex))
 (export "antialias_wavetable_AntialiasWavetable_constructor" (func $assembly/core/antialias-wavetable/AntialiasWavetable#constructor))
 (export "wavetable_set_antialias" (func $assembly/core/wavetable/Wavetable#set:antialias))
 (export "wavetable_get_size" (func $assembly/core/wavetable/Wavetable#get:size))
 (export "wavetable_get_length" (func $assembly/core/wavetable/Wavetable#get:length))
 (export "wavetable_get_phases" (func $assembly/core/wavetable/Wavetable#get:phases))
 (export "wavetable_get_sine" (func $assembly/core/wavetable/Wavetable#get:sine))
 (export "util_phaseToRadians" (func $assembly/util/phaseToRadians))
 (export "wavetable_fill" (func $assembly/core/wavetable/Wavetable#fill))
 (export "wavetable_get_cos" (func $assembly/core/wavetable/Wavetable#get:cos))
 (export "wavetable_get_exp" (func $assembly/core/wavetable/Wavetable#get:exp))
 (export "wavetable_exp" (func $assembly/core/wavetable/exp))
 (export "wavetable_get_noise" (func $assembly/core/wavetable/Wavetable#get:noise))
 (export "wave_rnd" (func $assembly/core/wave/rnd))
 (export "wave_noise" (func $assembly/core/wave/Wave.noise))
 (export "wavetable_set_audioRate" (func $assembly/core/wavetable/Wavetable#set:audioRate))
 (export "wavetable_set_size" (func $assembly/core/wavetable/Wavetable#set:size))
 (export "wavetable_constructor" (func $assembly/core/wavetable/Wavetable#constructor))
 (export "engine_Core_set_wavetable" (func $assembly/core/engine/Core#set:wavetable))
 (export "engine_Core_set_audioRate" (func $assembly/core/engine/Core#set:audioRate))
 (export "engine_Core_constructor" (func $assembly/core/engine/Core#constructor))
 (export "clock_set_time" (func $assembly/core/clock/Clock#set:time))
 (export "clock_set_timeStep" (func $assembly/core/clock/Clock#set:timeStep))
 (export "clock_set_prevTime" (func $assembly/core/clock/Clock#set:prevTime))
 (export "clock_set_endTime" (func $assembly/core/clock/Clock#set:endTime))
 (export "clock_set_internalTime" (func $assembly/core/clock/Clock#set:internalTime))
 (export "clock_set_bpm" (func $assembly/core/clock/Clock#set:bpm))
 (export "clock_set_coeff" (func $assembly/core/clock/Clock#set:coeff))
 (export "clock_set_barTime" (func $assembly/core/clock/Clock#set:barTime))
 (export "clock_set_barTimeStep" (func $assembly/core/clock/Clock#set:barTimeStep))
 (export "clock_set_nextBarTime" (func $assembly/core/clock/Clock#set:nextBarTime))
 (export "clock_set_loopStart" (func $assembly/core/clock/Clock#set:loopStart))
 (export "clock_set_loopEnd" (func $assembly/core/clock/Clock#set:loopEnd))
 (export "clock_set_sampleRate" (func $assembly/core/clock/Clock#set:sampleRate))
 (export "clock_set_jumpBar" (func $assembly/core/clock/Clock#set:jumpBar))
 (export "clock_set_ringPos" (func $assembly/core/clock/Clock#set:ringPos))
 (export "clock_constructor" (func $assembly/core/clock/Clock#constructor))
 (export "runner_Bar_set_size" (func $assembly/core/runner/Bar#set:size))
 (export "runner_Bar_set_main" (func $assembly/core/runner/Bar#set:main))
 (export "runner_Bar_set_tracks" (func $assembly/core/runner/Bar#set:tracks))
 (export "runner_Bar_constructor" (func $assembly/core/runner/Bar#constructor))
 (export "runner_get_barInstances" (func $assembly/core/runner/Runner#get:barInstances))
 (export "runner_Ctrl_set_tableIndex" (func $assembly/core/runner/Ctrl#set:tableIndex))
 (export "runner_Ctrl_set_id" (func $assembly/core/runner/Ctrl#set:id))
 (export "runner_Signal_set_L" (func $assembly/core/runner/Signal#set:L))
 (export "runner_Signal_set_R" (func $assembly/core/runner/Signal#set:R))
 (export "runner_Signal_set_LR" (func $assembly/core/runner/Signal#set:LR))
 (export "runner_Signal_constructor" (func $assembly/core/runner/Signal#constructor))
 (export "runner_Ctrl_set_signal" (func $assembly/core/runner/Ctrl#set:signal))
 (export "runner_Ctrl_set_literalsCount" (func $assembly/core/runner/Ctrl#set:literalsCount))
 (export "runner_Ctrl_set_liveLiterals" (func $assembly/core/runner/Ctrl#set:liveLiterals))
 (export "runner_Ctrl_set_ownLiterals" (func $assembly/core/runner/Ctrl#set:ownLiterals))
 (export "runner_Ctrl_constructor" (func $assembly/core/runner/Ctrl#constructor))
 (export "runner_get_ctrlInstances" (func $assembly/core/runner/Runner#get:ctrlInstances))
 (export "runner_set_clock" (func $assembly/core/runner/Runner#set:clock))
 (export "runner_set_barInstances" (func $assembly/core/runner/Runner#set:barInstances))
 (export "runner_set_bars" (func $assembly/core/runner/Runner#set:bars))
 (export "runner_set_ctrlInstances" (func $assembly/core/runner/Runner#set:ctrlInstances))
 (export "runner_set_ctrls" (func $assembly/core/runner/Runner#set:ctrls))
 (export "runner_set_lastMain" (func $assembly/core/runner/Runner#set:lastMain))
 (export "runner_set_last" (func $assembly/core/runner/Runner#set:last))
 (export "runner_set_tableIndex" (func $assembly/core/runner/Runner#set:tableIndex))
 (export "runner_constructor" (func $assembly/core/runner/Runner#constructor))
 (export "engine_set_runner" (func $assembly/core/engine/Engine#set:runner))
 (export "engine_Core_get_wavetable" (func $assembly/core/engine/Core#get:wavetable))
 (export "engine_set_wavetable" (func $assembly/core/engine/Engine#set:wavetable))
 (export "engine_set_rateSamples" (func $assembly/core/engine/Engine#set:rateSamples))
 (export "engine_set_rateStep" (func $assembly/core/engine/Engine#set:rateStep))
 (export "engine_set_clock" (func $assembly/core/engine/Engine#set:clock))
 (export "engine_get_clock" (func $assembly/core/engine/Engine#get:clock))
 (export "engine_set_audioRate" (func $assembly/core/engine/Engine#set:audioRate))
 (export "engine_set_core" (func $assembly/core/engine/Engine#set:core))
 (export "engine_set_signal" (func $assembly/core/engine/Engine#set:signal))
 (export "engine_constructor" (func $assembly/core/engine/Engine#constructor))
 (export "engine_get_signal" (func $assembly/core/engine/Engine#get:signal))
 (export "engine_get_rateSamples" (func $assembly/core/engine/Engine#get:rateSamples))
 (export "util_allocF32" (func $assembly/util/allocF32))
 (export "engine_createBlock" (func $assembly/core/engine/Engine#createBlock))
 (export "engine_get_runner" (func $assembly/core/engine/Engine#get:runner))
 (export "runner_clearLastBar" (func $assembly/core/runner/Runner#clearLastBar))
 (export "runner_get_ctrls" (func $assembly/core/runner/Runner#get:ctrls))
 (export "runner_Ctrl_get_signal" (func $assembly/core/runner/Ctrl#get:signal))
 (export "runner_get_bars" (func $assembly/core/runner/Runner#get:bars))
 (export "runner_get_clock" (func $assembly/core/runner/Runner#get:clock))
 (export "clock_get_time" (func $assembly/core/clock/Clock#get:time))
 (export "clock_get_barTime" (func $assembly/core/clock/Clock#get:barTime))
 (export "runner_Bar_get_size" (func $assembly/core/runner/Bar#get:size))
 (export "runner_Bar_get_tracks" (func $assembly/core/runner/Bar#get:tracks))
 (export "runner_get_tableIndex" (func $assembly/core/runner/Runner#get:tableIndex))
 (export "runner_Ctrl_get_id" (func $assembly/core/runner/Ctrl#get:id))
 (export "env_setCtrlInstanceAt" (func $assembly/env/setCtrlInstanceAt))
 (export "runner_Ctrl_get_ownLiterals" (func $assembly/core/runner/Ctrl#get:ownLiterals))
 (export "runner_Ctrl_get_liveLiterals" (func $assembly/core/runner/Ctrl#get:liveLiterals))
 (export "runner_Ctrl_get_literalsCount" (func $assembly/core/runner/Ctrl#get:literalsCount))
 (export "copy_copyMem" (func $assembly/graph/copy/copyMem))
 (export "runner_Ctrl_get_tableIndex" (func $assembly/core/runner/Ctrl#get:tableIndex))
 (export "runner_Ctrl_get_run" (func $assembly/core/runner/Ctrl#get:run))
 (export "runner_Signal_get_L" (func $assembly/core/runner/Signal#get:L))
 (export "runner_Vol_get_L" (func $assembly/core/runner/Vol#get:L))
 (export "addmul_audio_audio_scalar" (func $assembly/math/addmul_audio_audio_scalar))
 (export "runner_Signal_get_R" (func $assembly/core/runner/Signal#get:R))
 (export "runner_Vol_get_R" (func $assembly/core/runner/Vol#get:R))
 (export "runner_Signal_get_LR" (func $assembly/core/runner/Signal#get:LR))
 (export "runner_Vol_get_LR" (func $assembly/core/runner/Vol#get:LR))
 (export "runner_Bar_get_main" (func $assembly/core/runner/Bar#get:main))
 (export "mul_audio_scalar" (func $assembly/math/mul_audio_scalar))
 (export "runner_fill" (func $assembly/core/runner/Runner#fill))
 (export "clock_get_nextBarTime" (func $assembly/core/clock/Clock#get:nextBarTime))
 (export "clock_get_timeStep" (func $assembly/core/clock/Clock#get:timeStep))
 (export "runner_get_last" (func $assembly/core/runner/Runner#get:last))
 (export "fade_fadeOut" (func $assembly/graph/fade/fadeOut))
 (export "env_resetCtrlInstance" (func $assembly/env/resetCtrlInstance))
 (export "fade_fadeIn" (func $assembly/graph/fade/fadeIn))
 (export "runner_get_lastMain" (func $assembly/core/runner/Runner#get:lastMain))
 (export "runner_process" (func $assembly/core/runner/Runner#process))
 (export "gen_gen_set__engine" (func $assembly/gen/gen/Gen#set:_engine))
 (export "gen_gen_set_gain" (func $assembly/gen/gen/Gen#set:gain))
 (export "gen_gen_constructor" (func $assembly/gen/gen/Gen#constructor))
 (export "gen_zero_constructor" (func $assembly/gen/zero/Zero#constructor))
 (export "util_getObjectSize__gen_zero_Zero_" (func $assembly/util/getObjectSize<assembly/gen/zero/Zero>))
 (export "util_cloneI32" (func $assembly/util/cloneI32))
 (export "gen_osc_set_hz" (func $assembly/gen/osc/Osc#set:hz))
 (export "gen_osc_set_trig" (func $assembly/gen/osc/Osc#set:trig))
 (export "gen_osc_set_offset" (func $assembly/gen/osc/Osc#set:offset))
 (export "gen_osc_set__phase" (func $assembly/gen/osc/Osc#set:_phase))
 (export "gen_osc_set__step" (func $assembly/gen/osc/Osc#set:_step))
 (export "gen_osc_set__sample" (func $assembly/gen/osc/Osc#set:_sample))
 (export "gen_osc_set__lastTrig" (func $assembly/gen/osc/Osc#set:_lastTrig))
 (export "gen_osc_set__offsetU32" (func $assembly/gen/osc/Osc#set:_offsetU32))
 (export "gen_osc_constructor" (func $assembly/gen/osc/Osc#constructor))
 (export "gen_sin_constructor" (func $assembly/gen/sin/Sin#constructor))
 (export "util_getObjectSize__gen_sin_Sin_" (func $assembly/util/getObjectSize<assembly/gen/sin/Sin>))
 (export "gen_exp_constructor" (func $assembly/gen/exp/Exp#constructor))
 (export "util_getObjectSize__gen_exp_Exp_" (func $assembly/util/getObjectSize<assembly/gen/exp/Exp>))
 (export "gen_aosc_set__tableIndex" (func $assembly/gen/aosc/AOsc#set:_tableIndex))
 (export "gen_aosc_constructor" (func $assembly/gen/aosc/AOsc#constructor))
 (export "gen_saw_constructor" (func $assembly/gen/saw/Saw#constructor))
 (export "util_getObjectSize__gen_saw_Saw_" (func $assembly/util/getObjectSize<assembly/gen/saw/Saw>))
 (export "gen_ramp_constructor" (func $assembly/gen/ramp/Ramp#constructor))
 (export "util_getObjectSize__gen_ramp_Ramp_" (func $assembly/util/getObjectSize<assembly/gen/ramp/Ramp>))
 (export "gen_sqr_constructor" (func $assembly/gen/sqr/Sqr#constructor))
 (export "util_getObjectSize__gen_sqr_Sqr_" (func $assembly/util/getObjectSize<assembly/gen/sqr/Sqr>))
 (export "gen_tri_constructor" (func $assembly/gen/tri/Tri#constructor))
 (export "util_getObjectSize__gen_tri_Tri_" (func $assembly/util/getObjectSize<assembly/gen/tri/Tri>))
 (export "gen_noise_constructor" (func $assembly/gen/noise/Noise#constructor))
 (export "util_getObjectSize__gen_noise_Noise_" (func $assembly/util/getObjectSize<assembly/gen/noise/Noise>))
 (export "gen_dc_set_ceil" (func $assembly/gen/dc/Dc#set:ceil))
 (export "gen_dc_set_in" (func $assembly/gen/dc/Dc#set:in))
 (export "gen_dc_set_sample" (func $assembly/gen/dc/Dc#set:sample))
 (export "gen_dc_constructor" (func $assembly/gen/dc/Dc#constructor))
 (export "util_getObjectSize__gen_dc_Dc_" (func $assembly/util/getObjectSize<assembly/gen/dc/Dc>))
 (export "gen_delay_set_ms" (func $assembly/gen/delay/Delay#set:ms))
 (export "gen_delay_set_fb" (func $assembly/gen/delay/Delay#set:fb))
 (export "gen_delay_set_in" (func $assembly/gen/delay/Delay#set:in))
 (export "gen_delay_set__floats" (func $assembly/gen/delay/Delay#set:_floats))
 (export "gen_delay_set__mask" (func $assembly/gen/delay/Delay#set:_mask))
 (export "gen_delay_set__index" (func $assembly/gen/delay/Delay#set:_index))
 (export "gen_delay_set__stepf" (func $assembly/gen/delay/Delay#set:_stepf))
 (export "gen_delay_set__targetf" (func $assembly/gen/delay/Delay#set:_targetf))
 (export "gen_delay_constructor" (func $assembly/gen/delay/Delay#constructor))
 (export "util_getObjectSize__gen_delay_Delay_" (func $assembly/util/getObjectSize<assembly/gen/delay/Delay>))
 (export "gen_tap_set_ms" (func $assembly/gen/tap/Tap#set:ms))
 (export "gen_tap_set_in" (func $assembly/gen/tap/Tap#set:in))
 (export "gen_tap_set__floats" (func $assembly/gen/tap/Tap#set:_floats))
 (export "gen_tap_set__mask" (func $assembly/gen/tap/Tap#set:_mask))
 (export "gen_tap_set__index" (func $assembly/gen/tap/Tap#set:_index))
 (export "gen_tap_set__stepf" (func $assembly/gen/tap/Tap#set:_stepf))
 (export "gen_tap_set__targetf" (func $assembly/gen/tap/Tap#set:_targetf))
 (export "gen_tap_constructor" (func $assembly/gen/tap/Tap#constructor))
 (export "util_getObjectSize__gen_tap_Tap_" (func $assembly/util/getObjectSize<assembly/gen/tap/Tap>))
 (export "gen_lp_set_cut" (func $assembly/gen/lp/Lp#set:cut))
 (export "gen_lp_set_in" (func $assembly/gen/lp/Lp#set:in))
 (export "gen_lp_set__alpha" (func $assembly/gen/lp/Lp#set:_alpha))
 (export "gen_lp_set__sample" (func $assembly/gen/lp/Lp#set:_sample))
 (export "gen_lp_constructor" (func $assembly/gen/lp/Lp#constructor))
 (export "util_getObjectSize__gen_lp_Lp_" (func $assembly/util/getObjectSize<assembly/gen/lp/Lp>))
 (export "engine_get_audioRate" (func $assembly/core/engine/Engine#get:audioRate))
 (export "gen_rate_set_samples" (func $assembly/gen/rate/Rate#set:samples))
 (export "gen_rate_set__engine" (func $assembly/gen/rate/Rate#set:_engine))
 (export "gen_rate_constructor" (func $assembly/gen/rate/Rate#constructor))
 (export "util_getObjectSize__gen_rate_Rate_" (func $assembly/util/getObjectSize<assembly/gen/rate/Rate>))
 (export "gen_biquad_set_in" (func $assembly/gen/biquad/Biquad#set:in))
 (export "gen_biquad_set__x1" (func $assembly/gen/biquad/Biquad#set:_x1))
 (export "gen_biquad_set__x2" (func $assembly/gen/biquad/Biquad#set:_x2))
 (export "gen_biquad_set__y1" (func $assembly/gen/biquad/Biquad#set:_y1))
 (export "gen_biquad_set__y2" (func $assembly/gen/biquad/Biquad#set:_y2))
 (export "gen_biquad_set__a0" (func $assembly/gen/biquad/Biquad#set:_a0))
 (export "gen_biquad_set__a1" (func $assembly/gen/biquad/Biquad#set:_a1))
 (export "gen_biquad_set__a2" (func $assembly/gen/biquad/Biquad#set:_a2))
 (export "gen_biquad_set__b0" (func $assembly/gen/biquad/Biquad#set:_b0))
 (export "gen_biquad_set__b1" (func $assembly/gen/biquad/Biquad#set:_b1))
 (export "gen_biquad_set__b2" (func $assembly/gen/biquad/Biquad#set:_b2))
 (export "gen_biquad_set__params_freq" (func $assembly/gen/biquad/Biquad#set:_params_freq))
 (export "gen_biquad_set__params_Q" (func $assembly/gen/biquad/Biquad#set:_params_Q))
 (export "gen_biquad_set__params_gain" (func $assembly/gen/biquad/Biquad#set:_params_gain))
 (export "gen_biquad_constructor" (func $assembly/gen/biquad/Biquad#constructor))
 (export "gen_blp_set_cut" (func $assembly/gen/blp/Blp#set:cut))
 (export "gen_blp_set_q" (func $assembly/gen/blp/Blp#set:q))
 (export "gen_blp_constructor" (func $assembly/gen/blp/Blp#constructor))
 (export "util_getObjectSize__gen_blp_Blp_" (func $assembly/util/getObjectSize<assembly/gen/blp/Blp>))
 (export "gen_bhp_set_cut" (func $assembly/gen/bhp/Bhp#set:cut))
 (export "gen_bhp_set_q" (func $assembly/gen/bhp/Bhp#set:q))
 (export "gen_bhp_constructor" (func $assembly/gen/bhp/Bhp#constructor))
 (export "util_getObjectSize__gen_bhp_Bhp_" (func $assembly/util/getObjectSize<assembly/gen/bhp/Bhp>))
 (export "gen_bbp_set_cut" (func $assembly/gen/bbp/Bbp#set:cut))
 (export "gen_bbp_set_q" (func $assembly/gen/bbp/Bbp#set:q))
 (export "gen_bbp_constructor" (func $assembly/gen/bbp/Bbp#constructor))
 (export "util_getObjectSize__gen_bbp_Bbp_" (func $assembly/util/getObjectSize<assembly/gen/bbp/Bbp>))
 (export "gen_bno_set_cut" (func $assembly/gen/bno/Bno#set:cut))
 (export "gen_bno_set_q" (func $assembly/gen/bno/Bno#set:q))
 (export "gen_bno_constructor" (func $assembly/gen/bno/Bno#constructor))
 (export "util_getObjectSize__gen_bno_Bno_" (func $assembly/util/getObjectSize<assembly/gen/bno/Bno>))
 (export "gen_bpk_set_cut" (func $assembly/gen/bpk/Bpk#set:cut))
 (export "gen_bpk_set_q" (func $assembly/gen/bpk/Bpk#set:q))
 (export "gen_bpk_set_amt" (func $assembly/gen/bpk/Bpk#set:amt))
 (export "gen_bpk_constructor" (func $assembly/gen/bpk/Bpk#constructor))
 (export "util_getObjectSize__gen_bpk_Bpk_" (func $assembly/util/getObjectSize<assembly/gen/bpk/Bpk>))
 (export "gen_bap_set_cut" (func $assembly/gen/bap/Bap#set:cut))
 (export "gen_bap_set_q" (func $assembly/gen/bap/Bap#set:q))
 (export "gen_bap_constructor" (func $assembly/gen/bap/Bap#constructor))
 (export "util_getObjectSize__gen_bap_Bap_" (func $assembly/util/getObjectSize<assembly/gen/bap/Bap>))
 (export "gen_bls_set_cut" (func $assembly/gen/bls/Bls#set:cut))
 (export "gen_bls_set_q" (func $assembly/gen/bls/Bls#set:q))
 (export "gen_bls_set_amt" (func $assembly/gen/bls/Bls#set:amt))
 (export "gen_bls_constructor" (func $assembly/gen/bls/Bls#constructor))
 (export "util_getObjectSize__gen_bls_Bls_" (func $assembly/util/getObjectSize<assembly/gen/bls/Bls>))
 (export "gen_bhs_set_cut" (func $assembly/gen/bhs/Bhs#set:cut))
 (export "gen_bhs_set_q" (func $assembly/gen/bhs/Bhs#set:q))
 (export "gen_bhs_set_amt" (func $assembly/gen/bhs/Bhs#set:amt))
 (export "gen_bhs_constructor" (func $assembly/gen/bhs/Bhs#constructor))
 (export "util_getObjectSize__gen_bhs_Bhs_" (func $assembly/util/getObjectSize<assembly/gen/bhs/Bhs>))
 (export "gen_svf_set_in" (func $assembly/gen/svf/Svf#set:in))
 (export "gen_svf_set__c1" (func $assembly/gen/svf/Svf#set:_c1))
 (export "gen_svf_set__c2" (func $assembly/gen/svf/Svf#set:_c2))
 (export "gen_svf_set__a1" (func $assembly/gen/svf/Svf#set:_a1))
 (export "gen_svf_set__a2" (func $assembly/gen/svf/Svf#set:_a2))
 (export "gen_svf_set__a3" (func $assembly/gen/svf/Svf#set:_a3))
 (export "gen_svf_set__v0" (func $assembly/gen/svf/Svf#set:_v0))
 (export "gen_svf_set__v1" (func $assembly/gen/svf/Svf#set:_v1))
 (export "gen_svf_set__v2" (func $assembly/gen/svf/Svf#set:_v2))
 (export "gen_svf_set__v3" (func $assembly/gen/svf/Svf#set:_v3))
 (export "gen_svf_set__k" (func $assembly/gen/svf/Svf#set:_k))
 (export "gen_svf_set__params_freq" (func $assembly/gen/svf/Svf#set:_params_freq))
 (export "gen_svf_set__params_Q" (func $assembly/gen/svf/Svf#set:_params_Q))
 (export "gen_svf_constructor" (func $assembly/gen/svf/Svf#constructor))
 (export "gen_slp_set_cut" (func $assembly/gen/slp/Slp#set:cut))
 (export "gen_slp_set_q" (func $assembly/gen/slp/Slp#set:q))
 (export "gen_slp_constructor" (func $assembly/gen/slp/Slp#constructor))
 (export "util_getObjectSize__gen_slp_Slp_" (func $assembly/util/getObjectSize<assembly/gen/slp/Slp>))
 (export "gen_shp_set_cut" (func $assembly/gen/shp/Shp#set:cut))
 (export "gen_shp_set_q" (func $assembly/gen/shp/Shp#set:q))
 (export "gen_shp_constructor" (func $assembly/gen/shp/Shp#constructor))
 (export "util_getObjectSize__gen_shp_Shp_" (func $assembly/util/getObjectSize<assembly/gen/shp/Shp>))
 (export "gen_sbp_set_cut" (func $assembly/gen/sbp/Sbp#set:cut))
 (export "gen_sbp_set_q" (func $assembly/gen/sbp/Sbp#set:q))
 (export "gen_sbp_constructor" (func $assembly/gen/sbp/Sbp#constructor))
 (export "util_getObjectSize__gen_sbp_Sbp_" (func $assembly/util/getObjectSize<assembly/gen/sbp/Sbp>))
 (export "gen_sap_set_cut" (func $assembly/gen/sap/Sap#set:cut))
 (export "gen_sap_set_q" (func $assembly/gen/sap/Sap#set:q))
 (export "gen_sap_constructor" (func $assembly/gen/sap/Sap#constructor))
 (export "util_getObjectSize__gen_sap_Sap_" (func $assembly/util/getObjectSize<assembly/gen/sap/Sap>))
 (export "gen_sno_set_cut" (func $assembly/gen/sno/Sno#set:cut))
 (export "gen_sno_set_q" (func $assembly/gen/sno/Sno#set:q))
 (export "gen_sno_constructor" (func $assembly/gen/sno/Sno#constructor))
 (export "util_getObjectSize__gen_sno_Sno_" (func $assembly/util/getObjectSize<assembly/gen/sno/Sno>))
 (export "gen_spk_set_cut" (func $assembly/gen/spk/Spk#set:cut))
 (export "gen_spk_set_q" (func $assembly/gen/spk/Spk#set:q))
 (export "gen_spk_constructor" (func $assembly/gen/spk/Spk#constructor))
 (export "util_getObjectSize__gen_spk_Spk_" (func $assembly/util/getObjectSize<assembly/gen/spk/Spk>))
 (export "gen_moog_set_in" (func $assembly/gen/moog/Moog#set:in))
 (export "gen_moog_set__m_azt1" (func $assembly/gen/moog/Moog#set:_m_azt1))
 (export "gen_moog_set__m_azt2" (func $assembly/gen/moog/Moog#set:_m_azt2))
 (export "gen_moog_set__m_azt3" (func $assembly/gen/moog/Moog#set:_m_azt3))
 (export "gen_moog_set__m_azt4" (func $assembly/gen/moog/Moog#set:_m_azt4))
 (export "gen_moog_set__m_az5" (func $assembly/gen/moog/Moog#set:_m_az5))
 (export "gen_moog_set__m_amf" (func $assembly/gen/moog/Moog#set:_m_amf))
 (export "gen_moog_set__v2" (func $assembly/gen/moog/Moog#set:_v2))
 (export "gen_moog_set__x1" (func $assembly/gen/moog/Moog#set:_x1))
 (export "gen_moog_set__az3" (func $assembly/gen/moog/Moog#set:_az3))
 (export "gen_moog_set__az4" (func $assembly/gen/moog/Moog#set:_az4))
 (export "gen_moog_set__amf" (func $assembly/gen/moog/Moog#set:_amf))
 (export "gen_moog_set__kVt" (func $assembly/gen/moog/Moog#set:_kVt))
 (export "gen_moog_set__m_kacr" (func $assembly/gen/moog/Moog#set:_m_kacr))
 (export "gen_moog_set__m_k2vg" (func $assembly/gen/moog/Moog#set:_m_k2vg))
 (export "gen_moog_set__m_postGain" (func $assembly/gen/moog/Moog#set:_m_postGain))
 (export "gen_moog_set__params_freq" (func $assembly/gen/moog/Moog#set:_params_freq))
 (export "gen_moog_set__params_Q" (func $assembly/gen/moog/Moog#set:_params_Q))
 (export "gen_moog_constructor" (func $assembly/gen/moog/Moog#constructor))
 (export "gen_mlp_set_cut" (func $assembly/gen/mlp/Mlp#set:cut))
 (export "gen_mlp_set_q" (func $assembly/gen/mlp/Mlp#set:q))
 (export "gen_mlp_constructor" (func $assembly/gen/mlp/Mlp#constructor))
 (export "util_getObjectSize__gen_mlp_Mlp_" (func $assembly/util/getObjectSize<assembly/gen/mlp/Mlp>))
 (export "gen_mhp_set_cut" (func $assembly/gen/mhp/Mhp#set:cut))
 (export "gen_mhp_set_q" (func $assembly/gen/mhp/Mhp#set:q))
 (export "gen_mhp_constructor" (func $assembly/gen/mhp/Mhp#constructor))
 (export "util_getObjectSize__gen_mhp_Mhp_" (func $assembly/util/getObjectSize<assembly/gen/mhp/Mhp>))
 (export "gen_daverb_set_in" (func $assembly/gen/daverb/Daverb#set:in))
 (export "gen_daverb_set_pd" (func $assembly/gen/daverb/Daverb#set:pd))
 (export "gen_daverb_set_bw" (func $assembly/gen/daverb/Daverb#set:bw))
 (export "gen_daverb_set_fi" (func $assembly/gen/daverb/Daverb#set:fi))
 (export "gen_daverb_set_si" (func $assembly/gen/daverb/Daverb#set:si))
 (export "gen_daverb_set_dc" (func $assembly/gen/daverb/Daverb#set:dc))
 (export "gen_daverb_set_ft" (func $assembly/gen/daverb/Daverb#set:ft))
 (export "gen_daverb_set_st" (func $assembly/gen/daverb/Daverb#set:st))
 (export "gen_daverb_set_dp" (func $assembly/gen/daverb/Daverb#set:dp))
 (export "gen_daverb_set_ex" (func $assembly/gen/daverb/Daverb#set:ex))
 (export "gen_daverb_set_ed" (func $assembly/gen/daverb/Daverb#set:ed))
 (export "gen_daverb_set__params_pd" (func $assembly/gen/daverb/Daverb#set:_params_pd))
 (export "gen_daverb_set__params_bw" (func $assembly/gen/daverb/Daverb#set:_params_bw))
 (export "gen_daverb_set__params_fi" (func $assembly/gen/daverb/Daverb#set:_params_fi))
 (export "gen_daverb_set__params_si" (func $assembly/gen/daverb/Daverb#set:_params_si))
 (export "gen_daverb_set__params_dc" (func $assembly/gen/daverb/Daverb#set:_params_dc))
 (export "gen_daverb_set__params_ft" (func $assembly/gen/daverb/Daverb#set:_params_ft))
 (export "gen_daverb_set__params_st" (func $assembly/gen/daverb/Daverb#set:_params_st))
 (export "gen_daverb_set__params_dp" (func $assembly/gen/daverb/Daverb#set:_params_dp))
 (export "gen_daverb_set__params_ex" (func $assembly/gen/daverb/Daverb#set:_params_ex))
 (export "gen_daverb_set__params_ed" (func $assembly/gen/daverb/Daverb#set:_params_ed))
 (export "gen_daverb_set__dpn" (func $assembly/gen/daverb/Daverb#set:_dpn))
 (export "gen_daverb_set__exn" (func $assembly/gen/daverb/Daverb#set:_exn))
 (export "gen_daverb_set__edn" (func $assembly/gen/daverb/Daverb#set:_edn))
 (export "gen_daverb_set__pdn" (func $assembly/gen/daverb/Daverb#set:_pdn))
 (export "gen_daverb_set__predelay" (func $assembly/gen/daverb/Daverb#set:_predelay))
 (export "gen_daverb_set__d0" (func $assembly/gen/daverb/Daverb#set:_d0))
 (export "gen_daverb_set__d1" (func $assembly/gen/daverb/Daverb#set:_d1))
 (export "gen_daverb_set__d2" (func $assembly/gen/daverb/Daverb#set:_d2))
 (export "gen_daverb_set__d3" (func $assembly/gen/daverb/Daverb#set:_d3))
 (export "gen_daverb_set__d4" (func $assembly/gen/daverb/Daverb#set:_d4))
 (export "gen_daverb_set__d5" (func $assembly/gen/daverb/Daverb#set:_d5))
 (export "gen_daverb_set__d6" (func $assembly/gen/daverb/Daverb#set:_d6))
 (export "gen_daverb_set__d7" (func $assembly/gen/daverb/Daverb#set:_d7))
 (export "gen_daverb_set__d8" (func $assembly/gen/daverb/Daverb#set:_d8))
 (export "gen_daverb_set__d9" (func $assembly/gen/daverb/Daverb#set:_d9))
 (export "gen_daverb_set__d10" (func $assembly/gen/daverb/Daverb#set:_d10))
 (export "gen_daverb_set__d11" (func $assembly/gen/daverb/Daverb#set:_d11))
 (export "gen_daverb_set__index" (func $assembly/gen/daverb/Daverb#set:_index))
 (export "gen_daverb_set__mask" (func $assembly/gen/daverb/Daverb#set:_mask))
 (export "gen_daverb_set__lp1" (func $assembly/gen/daverb/Daverb#set:_lp1))
 (export "gen_daverb_set__lp2" (func $assembly/gen/daverb/Daverb#set:_lp2))
 (export "gen_daverb_set__lp3" (func $assembly/gen/daverb/Daverb#set:_lp3))
 (export "gen_daverb_set__excPhase" (func $assembly/gen/daverb/Daverb#set:_excPhase))
 (export "gen_daverb_constructor" (func $assembly/gen/daverb/Daverb#constructor))
 (export "util_getObjectSize__gen_daverb_Daverb_" (func $assembly/util/getObjectSize<assembly/gen/daverb/Daverb>))
 (export "gen_tanh_set_gain" (func $assembly/gen/tanh/Tanh#set:gain))
 (export "gen_tanh_set__gainv" (func $assembly/gen/tanh/Tanh#set:_gainv))
 (export "gen_tanh_set_in" (func $assembly/gen/tanh/Tanh#set:in))
 (export "gen_tanh_constructor" (func $assembly/gen/tanh/Tanh#constructor))
 (export "util_getObjectSize__gen_tanh_Tanh_" (func $assembly/util/getObjectSize<assembly/gen/tanh/Tanh>))
 (export "gen_diode_set_cut" (func $assembly/gen/diode/Diode#set:cut))
 (export "gen_diode_set_hpf" (func $assembly/gen/diode/Diode#set:hpf))
 (export "gen_diode_set_sat" (func $assembly/gen/diode/Diode#set:sat))
 (export "gen_diode_set_q" (func $assembly/gen/diode/Diode#set:q))
 (export "gen_diode_set_in" (func $assembly/gen/diode/Diode#set:in))
 (export "gen_diode_set__z0" (func $assembly/gen/diode/Diode#set:_z0))
 (export "gen_diode_set__z1" (func $assembly/gen/diode/Diode#set:_z1))
 (export "gen_diode_set__z2" (func $assembly/gen/diode/Diode#set:_z2))
 (export "gen_diode_set__z3" (func $assembly/gen/diode/Diode#set:_z3))
 (export "gen_diode_set__z4" (func $assembly/gen/diode/Diode#set:_z4))
 (export "gen_diode_set__A" (func $assembly/gen/diode/Diode#set:_A))
 (export "gen_diode_set__a" (func $assembly/gen/diode/Diode#set:_a))
 (export "gen_diode_set__a2" (func $assembly/gen/diode/Diode#set:_a2))
 (export "gen_diode_set__b" (func $assembly/gen/diode/Diode#set:_b))
 (export "gen_diode_set__b2" (func $assembly/gen/diode/Diode#set:_b2))
 (export "gen_diode_set__c" (func $assembly/gen/diode/Diode#set:_c))
 (export "gen_diode_set__g" (func $assembly/gen/diode/Diode#set:_g))
 (export "gen_diode_set__g0" (func $assembly/gen/diode/Diode#set:_g0))
 (export "gen_diode_set__ah" (func $assembly/gen/diode/Diode#set:_ah))
 (export "gen_diode_set__bh" (func $assembly/gen/diode/Diode#set:_bh))
 (export "gen_diode_set__ainv" (func $assembly/gen/diode/Diode#set:_ainv))
 (export "gen_diode_set__k" (func $assembly/gen/diode/Diode#set:_k))
 (export "gen_diode_constructor" (func $assembly/gen/diode/Diode#constructor))
 (export "util_getObjectSize__gen_diode_Diode_" (func $assembly/util/getObjectSize<assembly/gen/diode/Diode>))
 (export "gen_dclip_set_in" (func $assembly/gen/dclip/Dclip#set:in))
 (export "gen_dclip_constructor" (func $assembly/gen/dclip/Dclip#constructor))
 (export "util_getObjectSize__gen_dclip_Dclip_" (func $assembly/util/getObjectSize<assembly/gen/dclip/Dclip>))
 (export "gen_dcliplin_set_threshold" (func $assembly/gen/dcliplin/Dcliplin#set:threshold))
 (export "gen_dcliplin_set_factor" (func $assembly/gen/dcliplin/Dcliplin#set:factor))
 (export "gen_dcliplin_set_in" (func $assembly/gen/dcliplin/Dcliplin#set:in))
 (export "gen_dcliplin_constructor" (func $assembly/gen/dcliplin/Dcliplin#constructor))
 (export "util_getObjectSize__gen_dcliplin_Dcliplin_" (func $assembly/util/getObjectSize<assembly/gen/dcliplin/Dcliplin>))
 (export "gen_dclipexp_set_factor" (func $assembly/gen/dclipexp/Dclipexp#set:factor))
 (export "gen_dclipexp_set_in" (func $assembly/gen/dclipexp/Dclipexp#set:in))
 (export "gen_dclipexp_constructor" (func $assembly/gen/dclipexp/Dclipexp#constructor))
 (export "util_getObjectSize__gen_dclipexp_Dclipexp_" (func $assembly/util/getObjectSize<assembly/gen/dclipexp/Dclipexp>))
 (export "gen_clamp_set_min" (func $assembly/gen/clamp/Clamp#set:min))
 (export "gen_clamp_set_max" (func $assembly/gen/clamp/Clamp#set:max))
 (export "gen_clamp_set_in" (func $assembly/gen/clamp/Clamp#set:in))
 (export "gen_clamp_constructor" (func $assembly/gen/clamp/Clamp#constructor))
 (export "util_getObjectSize__gen_clamp_Clamp_" (func $assembly/util/getObjectSize<assembly/gen/clamp/Clamp>))
 (export "gen_clip_set_threshold" (func $assembly/gen/clip/Clip#set:threshold))
 (export "gen_clip_set_in" (func $assembly/gen/clip/Clip#set:in))
 (export "gen_clip_constructor" (func $assembly/gen/clip/Clip#constructor))
 (export "util_getObjectSize__gen_clip_Clip_" (func $assembly/util/getObjectSize<assembly/gen/clip/Clip>))
 (export "gen_comp_set_threshold" (func $assembly/gen/comp/Comp#set:threshold))
 (export "gen_comp_set_ratio" (func $assembly/gen/comp/Comp#set:ratio))
 (export "gen_comp_set_attack" (func $assembly/gen/comp/Comp#set:attack))
 (export "gen_comp_set_release" (func $assembly/gen/comp/Comp#set:release))
 (export "gen_comp_set_in" (func $assembly/gen/comp/Comp#set:in))
 (export "gen_comp_set_sidechain" (func $assembly/gen/comp/Comp#set:sidechain))
 (export "gen_comp_set__prevLevel" (func $assembly/gen/comp/Comp#set:_prevLevel))
 (export "gen_comp_set__gainReduction" (func $assembly/gen/comp/Comp#set:_gainReduction))
 (export "gen_comp_constructor" (func $assembly/gen/comp/Comp#constructor))
 (export "util_getObjectSize__gen_comp_Comp_" (func $assembly/util/getObjectSize<assembly/gen/comp/Comp>))
 (export "gen_inc_set_amt" (func $assembly/gen/inc/Inc#set:amt))
 (export "gen_inc_set_trig" (func $assembly/gen/inc/Inc#set:trig))
 (export "gen_inc_set__lastTrig" (func $assembly/gen/inc/Inc#set:_lastTrig))
 (export "gen_inc_set__value" (func $assembly/gen/inc/Inc#set:_value))
 (export "gen_inc_constructor" (func $assembly/gen/inc/Inc#constructor))
 (export "util_getObjectSize__gen_inc_Inc_" (func $assembly/util/getObjectSize<assembly/gen/inc/Inc>))
 (export "gen_sample_set_offset" (func $assembly/gen/sample/Sample#set:offset))
 (export "gen_sample_set_trig" (func $assembly/gen/sample/Sample#set:trig))
 (export "gen_sample_set__floats" (func $assembly/gen/sample/Sample#set:_floats))
 (export "gen_sample_set__mask" (func $assembly/gen/sample/Sample#set:_mask))
 (export "gen_sample_set__phase" (func $assembly/gen/sample/Sample#set:_phase))
 (export "gen_sample_set__step" (func $assembly/gen/sample/Sample#set:_step))
 (export "gen_sample_set__offsetCurrent" (func $assembly/gen/sample/Sample#set:_offsetCurrent))
 (export "gen_sample_set__offsetTarget" (func $assembly/gen/sample/Sample#set:_offsetTarget))
 (export "gen_sample_set__lastTrig" (func $assembly/gen/sample/Sample#set:_lastTrig))
 (export "gen_sample_constructor" (func $assembly/gen/sample/Sample#constructor))
 (export "gen_freesound_set_id" (func $assembly/gen/freesound/Freesound#set:id))
 (export "gen_freesound_constructor" (func $assembly/gen/freesound/Freesound#constructor))
 (export "util_getObjectSize__gen_freesound_Freesound_" (func $assembly/util/getObjectSize<assembly/gen/freesound/Freesound>))
 (export "gen_freesound_get_id" (func $assembly/gen/freesound/Freesound#get:id))
 (export "env_logf" (func $assembly/env/logf))
 (export "gen_say_set_text" (func $assembly/gen/say/Say#set:text))
 (export "gen_say_constructor" (func $assembly/gen/say/Say#constructor))
 (export "util_getObjectSize__gen_say_Say_" (func $assembly/util/getObjectSize<assembly/gen/say/Say>))
 (export "gen_gen__update" (func $assembly/gen/gen/Gen#_update))
 (export "gen_gen__reset" (func $assembly/gen/gen/Gen#_reset))
 (export "gen_gen__audio" (func $assembly/gen/gen/Gen#_audio))
 (export "pow_audio_scalar" (func $assembly/math/pow_audio_scalar))
 (export "pow_scalar_audio" (func $assembly/math/pow_scalar_audio))
 (export "pow_scalar_scalar" (func $assembly/math/pow_scalar_scalar))
 (export "mul_audio_audio" (func $assembly/math/mul_audio_audio))
 (export "div_audio_scalar" (func $assembly/math/div_audio_scalar))
 (export "div_scalar_audio" (func $assembly/math/div_scalar_audio))
 (export "add_audio_scalar" (func $assembly/math/add_audio_scalar))
 (export "add_audio_audio" (func $assembly/math/add_audio_audio))
 (export "sub_audio_scalar" (func $assembly/math/sub_audio_scalar))
 (export "sub_audio_audio" (func $assembly/math/sub_audio_audio))
 (export "not_audio" (func $assembly/math/not_audio))
 (export "to_audio_scalar" (func $assembly/math/to_audio_scalar))
 (export "join_join21g" (func $assembly/graph/join/join21g))
 (export "join_join21" (func $assembly/graph/join/join21))
 (export "dc_bias_dcBias" (func $assembly/graph/dc-bias/dcBias))
 (export "rms_" (func $assembly/graph/rms/rms))
 (export "copy_copyInto" (func $assembly/graph/copy/copyInto))
 (export "index_preventTreeShaking" (func $assembly/index/preventTreeShaking))
 (export "bench_audio_benchAudio" (func $assembly/bench/bench-audio/benchAudio))
 (export "gen_gen_get_gain" (func $assembly/gen/gen/Gen#get:gain))
 (export "bench_audio_benchAudioGain" (func $assembly/bench/bench-audio/benchAudioGain))
 (export "bench_audio_benchAudioTwo" (func $assembly/bench/bench-audio/benchAudioTwo))
 (export "gen_bap_get_cut" (func $assembly/gen/bap/Bap#get:cut))
 (export "gen_bap_get_q" (func $assembly/gen/bap/Bap#get:q))
 (export "gen_biquad_get__params_freq" (func $assembly/gen/biquad/Biquad#get:_params_freq))
 (export "util_clamp" (func $assembly/util/clamp))
 (export "util_paramClamp" (func $assembly/util/paramClamp))
 (export "gen_biquad_get__params_Q" (func $assembly/gen/biquad/Biquad#get:_params_Q))
 (export "gen_gen_get__engine" (func $assembly/gen/gen/Gen#get:_engine))
 (export "gen_biquad_get__a0" (func $assembly/gen/biquad/Biquad#get:_a0))
 (export "gen_biquad_get__b0" (func $assembly/gen/biquad/Biquad#get:_b0))
 (export "gen_biquad_get__b1" (func $assembly/gen/biquad/Biquad#get:_b1))
 (export "gen_biquad_get__b2" (func $assembly/gen/biquad/Biquad#get:_b2))
 (export "gen_biquad_get__a1" (func $assembly/gen/biquad/Biquad#get:_a1))
 (export "gen_biquad_get__a2" (func $assembly/gen/biquad/Biquad#get:_a2))
 (export "gen_bap__update" (func $assembly/gen/bap/Bap#_update))
 (export "gen_bbp_get_cut" (func $assembly/gen/bbp/Bbp#get:cut))
 (export "gen_bbp_get_q" (func $assembly/gen/bbp/Bbp#get:q))
 (export "gen_bbp__update" (func $assembly/gen/bbp/Bbp#_update))
 (export "gen_bhp_get_cut" (func $assembly/gen/bhp/Bhp#get:cut))
 (export "gen_bhp_get_q" (func $assembly/gen/bhp/Bhp#get:q))
 (export "gen_bhp__update" (func $assembly/gen/bhp/Bhp#_update))
 (export "gen_bhs_get_cut" (func $assembly/gen/bhs/Bhs#get:cut))
 (export "gen_bhs_get_q" (func $assembly/gen/bhs/Bhs#get:q))
 (export "gen_bhs_get_amt" (func $assembly/gen/bhs/Bhs#get:amt))
 (export "gen_biquad_get__params_gain" (func $assembly/gen/biquad/Biquad#get:_params_gain))
 (export "gen_bhs__update" (func $assembly/gen/bhs/Bhs#_update))
 (export "gen_blp_get_cut" (func $assembly/gen/blp/Blp#get:cut))
 (export "gen_blp_get_q" (func $assembly/gen/blp/Blp#get:q))
 (export "gen_blp__update" (func $assembly/gen/blp/Blp#_update))
 (export "gen_bls_get_cut" (func $assembly/gen/bls/Bls#get:cut))
 (export "gen_bls_get_q" (func $assembly/gen/bls/Bls#get:q))
 (export "gen_bls_get_amt" (func $assembly/gen/bls/Bls#get:amt))
 (export "gen_bls__update" (func $assembly/gen/bls/Bls#_update))
 (export "gen_bno_get_cut" (func $assembly/gen/bno/Bno#get:cut))
 (export "gen_bno_get_q" (func $assembly/gen/bno/Bno#get:q))
 (export "gen_bno__update" (func $assembly/gen/bno/Bno#_update))
 (export "gen_bpk_get_cut" (func $assembly/gen/bpk/Bpk#get:cut))
 (export "gen_bpk_get_q" (func $assembly/gen/bpk/Bpk#get:q))
 (export "gen_bpk_get_amt" (func $assembly/gen/bpk/Bpk#get:amt))
 (export "gen_bpk__update" (func $assembly/gen/bpk/Bpk#_update))
 (export "gen_comp__update" (func $assembly/gen/comp/Comp#_update))
 (export "gen_daverb_get_dp" (func $assembly/gen/daverb/Daverb#get:dp))
 (export "gen_daverb_get_ex" (func $assembly/gen/daverb/Daverb#get:ex))
 (export "gen_daverb_get_ed" (func $assembly/gen/daverb/Daverb#get:ed))
 (export "gen_daverb_get_pd" (func $assembly/gen/daverb/Daverb#get:pd))
 (export "gen_daverb__update" (func $assembly/gen/daverb/Daverb#_update))
 (export "gen_delay_get_ms" (func $assembly/gen/delay/Delay#get:ms))
 (export "engine_get_rateStep" (func $assembly/core/engine/Engine#get:rateStep))
 (export "gen_delay_get__stepf" (func $assembly/gen/delay/Delay#get:_stepf))
 (export "gen_delay_get__targetf" (func $assembly/gen/delay/Delay#get:_targetf))
 (export "gen_delay__update" (func $assembly/gen/delay/Delay#_update))
 (export "gen_diode_get_hpf" (func $assembly/gen/diode/Diode#get:hpf))
 (export "gen_diode_clamp" (func $assembly/gen/diode/clamp))
 (export "gen_diode_get_q" (func $assembly/gen/diode/Diode#get:q))
 (export "gen_diode_get__k" (func $assembly/gen/diode/Diode#get:_k))
 (export "gen_diode_get_cut" (func $assembly/gen/diode/Diode#get:cut))
 (export "gen_diode__update" (func $assembly/gen/diode/Diode#_update))
 (export "gen_inc_get__lastTrig" (func $assembly/gen/inc/Inc#get:_lastTrig))
 (export "gen_inc_get_trig" (func $assembly/gen/inc/Inc#get:trig))
 (export "gen_inc__update" (func $assembly/gen/inc/Inc#_update))
 (export "gen_lp_get_cut" (func $assembly/gen/lp/Lp#get:cut))
 (export "gen_lp__update" (func $assembly/gen/lp/Lp#_update))
 (export "gen_mhp_get_cut" (func $assembly/gen/mhp/Mhp#get:cut))
 (export "gen_mhp_get_q" (func $assembly/gen/mhp/Mhp#get:q))
 (export "gen_moog_get__params_freq" (func $assembly/gen/moog/Moog#get:_params_freq))
 (export "gen_moog_get__params_Q" (func $assembly/gen/moog/Moog#get:_params_Q))
 (export "gen_moog_get__kVt" (func $assembly/gen/moog/Moog#get:_kVt))
 (export "gen_moog_get__v2" (func $assembly/gen/moog/Moog#get:_v2))
 (export "gen_mhp__update" (func $assembly/gen/mhp/Mhp#_update))
 (export "gen_mlp_get_cut" (func $assembly/gen/mlp/Mlp#get:cut))
 (export "gen_mlp_get_q" (func $assembly/gen/mlp/Mlp#get:q))
 (export "gen_mlp__update" (func $assembly/gen/mlp/Mlp#_update))
 (export "gen_rate_get_samples" (func $assembly/gen/rate/Rate#get:samples))
 (export "gen_rate_get__engine" (func $assembly/gen/rate/Rate#get:_engine))
 (export "gen_rate__update" (func $assembly/gen/rate/Rate#_update))
 (export "gen_sap_get_cut" (func $assembly/gen/sap/Sap#get:cut))
 (export "gen_sap_get_q" (func $assembly/gen/sap/Sap#get:q))
 (export "gen_svf_get__params_freq" (func $assembly/gen/svf/Svf#get:_params_freq))
 (export "gen_svf_get__params_Q" (func $assembly/gen/svf/Svf#get:_params_Q))
 (export "gen_svf_get__k" (func $assembly/gen/svf/Svf#get:_k))
 (export "gen_svf_get__a1" (func $assembly/gen/svf/Svf#get:_a1))
 (export "gen_svf_get__a2" (func $assembly/gen/svf/Svf#get:_a2))
 (export "gen_sap__update" (func $assembly/gen/sap/Sap#_update))
 (export "gen_sbp_get_cut" (func $assembly/gen/sbp/Sbp#get:cut))
 (export "gen_sbp_get_q" (func $assembly/gen/sbp/Sbp#get:q))
 (export "gen_sbp__update" (func $assembly/gen/sbp/Sbp#_update))
 (export "gen_shp_get_cut" (func $assembly/gen/shp/Shp#get:cut))
 (export "gen_shp_get_q" (func $assembly/gen/shp/Shp#get:q))
 (export "gen_shp__update" (func $assembly/gen/shp/Shp#_update))
 (export "gen_slp_get_cut" (func $assembly/gen/slp/Slp#get:cut))
 (export "gen_slp_get_q" (func $assembly/gen/slp/Slp#get:q))
 (export "gen_slp__update" (func $assembly/gen/slp/Slp#_update))
 (export "gen_sno_get_cut" (func $assembly/gen/sno/Sno#get:cut))
 (export "gen_sno_get_q" (func $assembly/gen/sno/Sno#get:q))
 (export "gen_sno__update" (func $assembly/gen/sno/Sno#_update))
 (export "gen_spk_get_cut" (func $assembly/gen/spk/Spk#get:cut))
 (export "gen_spk_get_q" (func $assembly/gen/spk/Spk#get:q))
 (export "gen_spk__update" (func $assembly/gen/spk/Spk#_update))
 (export "gen_tanh_get_gain" (func $assembly/gen/tanh/Tanh#get:gain))
 (export "gen_tanh__update" (func $assembly/gen/tanh/Tanh#_update))
 (export "gen_tap_get_ms" (func $assembly/gen/tap/Tap#get:ms))
 (export "gen_tap_get__stepf" (func $assembly/gen/tap/Tap#get:_stepf))
 (export "gen_tap_get__targetf" (func $assembly/gen/tap/Tap#get:_targetf))
 (export "gen_tap__update" (func $assembly/gen/tap/Tap#_update))
 (export "gen_osc_get_hz" (func $assembly/gen/osc/Osc#get:hz))
 (export "gen_osc_get_offset" (func $assembly/gen/osc/Osc#get:offset))
 (export "gen_osc_get__lastTrig" (func $assembly/gen/osc/Osc#get:_lastTrig))
 (export "gen_osc_get_trig" (func $assembly/gen/osc/Osc#get:trig))
 (export "gen_osc__update" (func $assembly/gen/osc/Osc#_update))
 (export "gen_sample_get_offset" (func $assembly/gen/sample/Sample#get:offset))
 (export "gen_sample_get__mask" (func $assembly/gen/sample/Sample#get:_mask))
 (export "gen_sample_get__offsetCurrent" (func $assembly/gen/sample/Sample#get:_offsetCurrent))
 (export "gen_sample_get__offsetTarget" (func $assembly/gen/sample/Sample#get:_offsetTarget))
 (export "gen_sample_get__lastTrig" (func $assembly/gen/sample/Sample#get:_lastTrig))
 (export "gen_sample_get_trig" (func $assembly/gen/sample/Sample#get:trig))
 (export "gen_sample__update" (func $assembly/gen/sample/Sample#_update))
 (export "engine_get_wavetable" (func $assembly/core/engine/Engine#get:wavetable))
 (export "wavetable_get_antialias" (func $assembly/core/wavetable/Wavetable#get:antialias))
 (export "antialias_wavetable_AntialiasWavetable_get_numOfTables" (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:numOfTables))
 (export "antialias_wavetable_AntialiasWavetable_getTableIndex" (func $assembly/core/antialias-wavetable/AntialiasWavetable#getTableIndex))
 (export "antialias_wavetable_AntialiasWavetable_get_stepShift" (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:stepShift))
 (export "gen_osc_get__step" (func $assembly/gen/osc/Osc#get:_step))
 (export "gen_aosc__update" (func $assembly/gen/aosc/AOsc#_update))
 (export "gen_delay_get__floats" (func $assembly/gen/delay/Delay#get:_floats))
 (export "gen_delay__reset" (func $assembly/gen/delay/Delay#_reset))
 (export "gen_clamp_get_min" (func $assembly/gen/clamp/Clamp#get:min))
 (export "gen_clamp_get_max" (func $assembly/gen/clamp/Clamp#get:max))
 (export "gen_clamp_get_in" (func $assembly/gen/clamp/Clamp#get:in))
 (export "gen_clamp__audio" (func $assembly/gen/clamp/Clamp#_audio))
 (export "gen_clip_get_threshold" (func $assembly/gen/clip/Clip#get:threshold))
 (export "gen_clip_get_in" (func $assembly/gen/clip/Clip#get:in))
 (export "gen_clip__audio" (func $assembly/gen/clip/Clip#_audio))
 (export "gen_comp_get_in" (func $assembly/gen/comp/Comp#get:in))
 (export "gen_comp_get__gainReduction" (func $assembly/gen/comp/Comp#get:_gainReduction))
 (export "gen_comp_get_threshold" (func $assembly/gen/comp/Comp#get:threshold))
 (export "gen_comp_get_ratio" (func $assembly/gen/comp/Comp#get:ratio))
 (export "gen_comp_get_attack" (func $assembly/gen/comp/Comp#get:attack))
 (export "gen_comp_get_release" (func $assembly/gen/comp/Comp#get:release))
 (export "gen_comp_get_sidechain" (func $assembly/gen/comp/Comp#get:sidechain))
 (export "gen_comp__audio" (func $assembly/gen/comp/Comp#_audio))
 (export "gen_daverb_get_in" (func $assembly/gen/daverb/Daverb#get:in))
 (export "gen_daverb_get__mask" (func $assembly/gen/daverb/Daverb#get:_mask))
 (export "gen_daverb_get__index" (func $assembly/gen/daverb/Daverb#get:_index))
 (export "gen_daverb_get__lp1" (func $assembly/gen/daverb/Daverb#get:_lp1))
 (export "gen_daverb_get__lp2" (func $assembly/gen/daverb/Daverb#get:_lp2))
 (export "gen_daverb_get__lp3" (func $assembly/gen/daverb/Daverb#get:_lp3))
 (export "gen_daverb_get__excPhase" (func $assembly/gen/daverb/Daverb#get:_excPhase))
 (export "gen_daverb_get__predelay" (func $assembly/gen/daverb/Daverb#get:_predelay))
 (export "gen_daverb_get_bw" (func $assembly/gen/daverb/Daverb#get:bw))
 (export "gen_daverb_get__pdn" (func $assembly/gen/daverb/Daverb#get:_pdn))
 (export "util_cubic" (func $assembly/util/cubic))
 (export "gen_daverb_get_fi" (func $assembly/gen/daverb/Daverb#get:fi))
 (export "gen_daverb_get__d0" (func $assembly/gen/daverb/Daverb#get:_d0))
 (export "gen_daverb_get__d1" (func $assembly/gen/daverb/Daverb#get:_d1))
 (export "gen_daverb_get_si" (func $assembly/gen/daverb/Daverb#get:si))
 (export "gen_daverb_get__d2" (func $assembly/gen/daverb/Daverb#get:_d2))
 (export "gen_daverb_get__d3" (func $assembly/gen/daverb/Daverb#get:_d3))
 (export "gen_daverb_get__edn" (func $assembly/gen/daverb/Daverb#get:_edn))
 (export "wavetable_get_mask" (func $assembly/core/wavetable/Wavetable#get:mask))
 (export "wavetable_readAt" (func $assembly/core/wavetable/Wavetable#readAt))
 (export "gen_daverb_get__d4" (func $assembly/gen/daverb/Daverb#get:_d4))
 (export "gen_daverb_get_dc" (func $assembly/gen/daverb/Daverb#get:dc))
 (export "gen_daverb_get__d11" (func $assembly/gen/daverb/Daverb#get:_d11))
 (export "gen_daverb_get_ft" (func $assembly/gen/daverb/Daverb#get:ft))
 (export "gen_daverb_get__d5" (func $assembly/gen/daverb/Daverb#get:_d5))
 (export "gen_daverb_get__dpn" (func $assembly/gen/daverb/Daverb#get:_dpn))
 (export "gen_daverb_get_st" (func $assembly/gen/daverb/Daverb#get:st))
 (export "gen_daverb_get__d6" (func $assembly/gen/daverb/Daverb#get:_d6))
 (export "gen_daverb_get__d7" (func $assembly/gen/daverb/Daverb#get:_d7))
 (export "gen_daverb_get__d8" (func $assembly/gen/daverb/Daverb#get:_d8))
 (export "gen_daverb_get__d9" (func $assembly/gen/daverb/Daverb#get:_d9))
 (export "gen_daverb_get__d10" (func $assembly/gen/daverb/Daverb#get:_d10))
 (export "gen_daverb__audio" (func $assembly/gen/daverb/Daverb#_audio))
 (export "gen_dc_get_ceil" (func $assembly/gen/dc/Dc#get:ceil))
 (export "gen_dc_get_sample" (func $assembly/gen/dc/Dc#get:sample))
 (export "gen_dc_get_in" (func $assembly/gen/dc/Dc#get:in))
 (export "gen_dc__audio" (func $assembly/gen/dc/Dc#_audio))
 (export "gen_dclip_get_in" (func $assembly/gen/dclip/Dclip#get:in))
 (export "gen_dclip__audio" (func $assembly/gen/dclip/Dclip#_audio))
 (export "gen_dclipexp_get_factor" (func $assembly/gen/dclipexp/Dclipexp#get:factor))
 (export "gen_dclipexp_get_in" (func $assembly/gen/dclipexp/Dclipexp#get:in))
 (export "gen_dclipexp__audio" (func $assembly/gen/dclipexp/Dclipexp#_audio))
 (export "gen_dcliplin_get_threshold" (func $assembly/gen/dcliplin/Dcliplin#get:threshold))
 (export "gen_dcliplin_get_factor" (func $assembly/gen/dcliplin/Dcliplin#get:factor))
 (export "gen_dcliplin_get_in" (func $assembly/gen/dcliplin/Dcliplin#get:in))
 (export "gen_dcliplin__audio" (func $assembly/gen/dcliplin/Dcliplin#_audio))
 (export "gen_delay_get_in" (func $assembly/gen/delay/Delay#get:in))
 (export "gen_delay_get__mask" (func $assembly/gen/delay/Delay#get:_mask))
 (export "gen_delay_get__index" (func $assembly/gen/delay/Delay#get:_index))
 (export "gen_delay_get_fb" (func $assembly/gen/delay/Delay#get:fb))
 (export "gen_delay__audio" (func $assembly/gen/delay/Delay#_audio))
 (export "gen_diode_get__A" (func $assembly/gen/diode/Diode#get:_A))
 (export "gen_diode_get__a" (func $assembly/gen/diode/Diode#get:_a))
 (export "gen_diode_get__a2" (func $assembly/gen/diode/Diode#get:_a2))
 (export "gen_diode_get__b" (func $assembly/gen/diode/Diode#get:_b))
 (export "gen_diode_get__b2" (func $assembly/gen/diode/Diode#get:_b2))
 (export "gen_diode_get__c" (func $assembly/gen/diode/Diode#get:_c))
 (export "gen_diode_get__g" (func $assembly/gen/diode/Diode#get:_g))
 (export "gen_diode_get__g0" (func $assembly/gen/diode/Diode#get:_g0))
 (export "gen_diode_get__ah" (func $assembly/gen/diode/Diode#get:_ah))
 (export "gen_diode_get__bh" (func $assembly/gen/diode/Diode#get:_bh))
 (export "gen_diode_get__ainv" (func $assembly/gen/diode/Diode#get:_ainv))
 (export "gen_diode_get_sat" (func $assembly/gen/diode/Diode#get:sat))
 (export "gen_diode_get_in" (func $assembly/gen/diode/Diode#get:in))
 (export "gen_diode_get__z0" (func $assembly/gen/diode/Diode#get:_z0))
 (export "gen_diode_get__z1" (func $assembly/gen/diode/Diode#get:_z1))
 (export "gen_diode_get__z2" (func $assembly/gen/diode/Diode#get:_z2))
 (export "gen_diode_get__z3" (func $assembly/gen/diode/Diode#get:_z3))
 (export "gen_diode_get__z4" (func $assembly/gen/diode/Diode#get:_z4))
 (export "gen_diode_soft" (func $assembly/gen/diode/soft))
 (export "gen_diode__audio" (func $assembly/gen/diode/Diode#_audio))
 (export "gen_inc_get_amt" (func $assembly/gen/inc/Inc#get:amt))
 (export "gen_inc_get__value" (func $assembly/gen/inc/Inc#get:_value))
 (export "gen_inc__audio" (func $assembly/gen/inc/Inc#_audio))
 (export "gen_lp_get__alpha" (func $assembly/gen/lp/Lp#get:_alpha))
 (export "gen_lp_get__sample" (func $assembly/gen/lp/Lp#get:_sample))
 (export "gen_lp_get_in" (func $assembly/gen/lp/Lp#get:in))
 (export "gen_lp__audio" (func $assembly/gen/lp/Lp#_audio))
 (export "gen_moog_get_in" (func $assembly/gen/moog/Moog#get:in))
 (export "gen_moog_get__m_amf" (func $assembly/gen/moog/Moog#get:_m_amf))
 (export "gen_moog_get__m_kacr" (func $assembly/gen/moog/Moog#get:_m_kacr))
 (export "gen_moog_get__m_azt1" (func $assembly/gen/moog/Moog#get:_m_azt1))
 (export "gen_moog_get__m_k2vg" (func $assembly/gen/moog/Moog#get:_m_k2vg))
 (export "gen_moog_get__x1" (func $assembly/gen/moog/Moog#get:_x1))
 (export "gen_moog_tanha" (func $assembly/gen/moog/tanha))
 (export "gen_moog_get__m_azt2" (func $assembly/gen/moog/Moog#get:_m_azt2))
 (export "gen_moog_get__m_azt3" (func $assembly/gen/moog/Moog#get:_m_azt3))
 (export "gen_moog_get__az3" (func $assembly/gen/moog/Moog#get:_az3))
 (export "gen_moog_get__m_azt4" (func $assembly/gen/moog/Moog#get:_m_azt4))
 (export "gen_moog_get__az4" (func $assembly/gen/moog/Moog#get:_az4))
 (export "gen_moog_get__m_postGain" (func $assembly/gen/moog/Moog#get:_m_postGain))
 (export "gen_mhp__audio" (func $assembly/gen/mhp/Mhp#_audio))
 (export "gen_mlp__audio" (func $assembly/gen/mlp/Mlp#_audio))
 (export "gen_svf_get_in" (func $assembly/gen/svf/Svf#get:in))
 (export "gen_svf_get__c2" (func $assembly/gen/svf/Svf#get:_c2))
 (export "gen_svf_get__c1" (func $assembly/gen/svf/Svf#get:_c1))
 (export "gen_svf_get__v3" (func $assembly/gen/svf/Svf#get:_v3))
 (export "gen_svf_get__a3" (func $assembly/gen/svf/Svf#get:_a3))
 (export "gen_svf_get__v1" (func $assembly/gen/svf/Svf#get:_v1))
 (export "gen_svf_get__v2" (func $assembly/gen/svf/Svf#get:_v2))
 (export "gen_svf_get__v0" (func $assembly/gen/svf/Svf#get:_v0))
 (export "gen_sap__audio" (func $assembly/gen/sap/Sap#_audio))
 (export "gen_sbp__audio" (func $assembly/gen/sbp/Sbp#_audio))
 (export "gen_shp__audio" (func $assembly/gen/shp/Shp#_audio))
 (export "gen_slp__audio" (func $assembly/gen/slp/Slp#_audio))
 (export "gen_sno__audio" (func $assembly/gen/sno/Sno#_audio))
 (export "gen_spk__audio" (func $assembly/gen/spk/Spk#_audio))
 (export "gen_tanh_get__gainv" (func $assembly/gen/tanh/Tanh#get:_gainv))
 (export "gen_tanh_get_in" (func $assembly/gen/tanh/Tanh#get:in))
 (export "gen_tanh__audio" (func $assembly/gen/tanh/Tanh#_audio))
 (export "gen_tap_get_in" (func $assembly/gen/tap/Tap#get:in))
 (export "gen_tap_get__mask" (func $assembly/gen/tap/Tap#get:_mask))
 (export "gen_tap_get__index" (func $assembly/gen/tap/Tap#get:_index))
 (export "gen_tap_get__floats" (func $assembly/gen/tap/Tap#get:_floats))
 (export "gen_tap__audio" (func $assembly/gen/tap/Tap#_audio))
 (export "gen_zero__audio" (func $assembly/gen/zero/Zero#_audio))
 (export "gen_biquad_get_in" (func $assembly/gen/biquad/Biquad#get:in))
 (export "gen_biquad_get__x1" (func $assembly/gen/biquad/Biquad#get:_x1))
 (export "gen_biquad_get__x2" (func $assembly/gen/biquad/Biquad#get:_x2))
 (export "gen_biquad_get__y1" (func $assembly/gen/biquad/Biquad#get:_y1))
 (export "gen_biquad_get__y2" (func $assembly/gen/biquad/Biquad#get:_y2))
 (export "gen_biquad__audio" (func $assembly/gen/biquad/Biquad#_audio))
 (export "gen_osc_get__table" (func $assembly/gen/osc/Osc#get:_table))
 (export "gen_osc_get__mask" (func $assembly/gen/osc/Osc#get:_mask))
 (export "gen_osc_get__phase" (func $assembly/gen/osc/Osc#get:_phase))
 (export "gen_osc_get__offsetU32" (func $assembly/gen/osc/Osc#get:_offsetU32))
 (export "wavetable_read" (func $assembly/core/wavetable/Wavetable#read))
 (export "gen_osc__audio" (func $assembly/gen/osc/Osc#_audio))
 (export "gen_sample_get__phase" (func $assembly/gen/sample/Sample#get:_phase))
 (export "gen_sample_get__floats" (func $assembly/gen/sample/Sample#get:_floats))
 (export "util_cubicFrac" (func $assembly/util/cubicFrac))
 (export "gen_sample__audio" (func $assembly/gen/sample/Sample#_audio))
 (export "gen_exp_get__table" (func $assembly/gen/exp/Exp#get:_table))
 (export "gen_noise_get__table" (func $assembly/gen/noise/Noise#get:_table))
 (export "gen_sin_get__table" (func $assembly/gen/sin/Sin#get:_table))
 (export "gen_aosc_get__tables" (func $assembly/gen/aosc/AOsc#get:_tables))
 (export "gen_aosc_get__tableIndex" (func $assembly/gen/aosc/AOsc#get:_tableIndex))
 (export "gen_aosc_get__table" (func $assembly/gen/aosc/AOsc#get:_table))
 (export "antialias_wavetable_AntialiasWavetable_get_tableMask" (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:tableMask))
 (export "gen_aosc_get__mask" (func $assembly/gen/aosc/AOsc#get:_mask))
 (export "gen_ramp_get__tables" (func $assembly/gen/ramp/Ramp#get:_tables))
 (export "gen_saw_get__tables" (func $assembly/gen/saw/Saw#get:_tables))
 (export "gen_sqr_get__tables" (func $assembly/gen/sqr/Sqr#get:_tables))
 (export "gen_tri_get__tables" (func $assembly/gen/tri/Tri#get:_tables))
 (export "gen_gen__update_override" (func $assembly/gen/gen/Gen#_update@override))
 (export "gen_gen__reset_override" (func $assembly/gen/gen/Gen#_reset@override))
 (export "gen_gen__audio_override" (func $assembly/gen/gen/Gen#_audio@override))
 (export "gen_osc_get__table_override" (func $assembly/gen/osc/Osc#get:_table@override))
 (export "gen_osc_get__mask_override" (func $assembly/gen/osc/Osc#get:_mask@override))
 (export "gen_aosc_get__tables_override" (func $assembly/gen/aosc/AOsc#get:_tables@override))
 (start $~start)
 (func $assembly/gen/daverb/nearestPowerOfTwo (param $n i32) (result i32)
  (local $power i32)
  (local $result i32)
  (local $lowerPower i32)
  (local $upperPower i32)
  local.get $n
  local.get $n
  i32.const 1
  i32.sub
  i32.and
  i32.const 0
  i32.eq
  if
   local.get $n
   return
  end
  i32.const 0
  local.set $power
  i32.const 1
  local.set $result
  loop $while-continue|0
   local.get $result
   local.get $n
   i32.lt_u
   if
    local.get $result
    i32.const 1
    i32.shl
    local.set $result
    local.get $power
    i32.const 1
    i32.add
    local.set $power
    br $while-continue|0
   end
  end
  local.get $result
  local.get $n
  i32.sub
  local.set $lowerPower
  local.get $result
  i32.const 1
  i32.shl
  local.get $n
  i32.sub
  local.set $upperPower
  local.get $lowerPower
  local.get $upperPower
  i32.lt_u
  if
   local.get $result
   return
  else
   local.get $result
   i32.const 1
   i32.shl
   return
  end
  unreachable
 )
 (func $start:assembly/gen/daverb
  f64.const 44100
  f64.const 0.004771345
  f64.mul
  i32.trunc_sat_f64_u
  call $assembly/gen/daverb/nearestPowerOfTwo
  global.set $assembly/gen/daverb/ld0
  f64.const 44100
  f64.const 0.003595309
  f64.mul
  i32.trunc_sat_f64_u
  call $assembly/gen/daverb/nearestPowerOfTwo
  global.set $assembly/gen/daverb/ld1
  f64.const 44100
  f64.const 0.012734787
  f64.mul
  i32.trunc_sat_f64_u
  call $assembly/gen/daverb/nearestPowerOfTwo
  global.set $assembly/gen/daverb/ld2
  f64.const 44100
  f64.const 0.009307483
  f64.mul
  i32.trunc_sat_f64_u
  call $assembly/gen/daverb/nearestPowerOfTwo
  global.set $assembly/gen/daverb/ld3
  f64.const 44100
  f64.const 0.022579886
  f64.mul
  i32.trunc_sat_f64_u
  call $assembly/gen/daverb/nearestPowerOfTwo
  global.set $assembly/gen/daverb/ld4
  f64.const 44100
  f64.const 0.149625349
  f64.mul
  i32.trunc_sat_f64_u
  call $assembly/gen/daverb/nearestPowerOfTwo
  global.set $assembly/gen/daverb/ld5
  f64.const 44100
  f64.const 0.060481839
  f64.mul
  i32.trunc_sat_f64_u
  call $assembly/gen/daverb/nearestPowerOfTwo
  global.set $assembly/gen/daverb/ld6
  f64.const 44100
  f64.const 0.1249958
  f64.mul
  i32.trunc_sat_f64_u
  call $assembly/gen/daverb/nearestPowerOfTwo
  global.set $assembly/gen/daverb/ld7
  f64.const 44100
  f64.const 0.030509727
  f64.mul
  i32.trunc_sat_f64_u
  call $assembly/gen/daverb/nearestPowerOfTwo
  global.set $assembly/gen/daverb/ld8
  f64.const 44100
  f64.const 0.141695508
  f64.mul
  i32.trunc_sat_f64_u
  call $assembly/gen/daverb/nearestPowerOfTwo
  global.set $assembly/gen/daverb/ld9
  f64.const 44100
  f64.const 0.089244313
  f64.mul
  i32.trunc_sat_f64_u
  call $assembly/gen/daverb/nearestPowerOfTwo
  global.set $assembly/gen/daverb/ld10
  f64.const 44100
  f64.const 0.106280031
  f64.mul
  i32.trunc_sat_f64_u
  call $assembly/gen/daverb/nearestPowerOfTwo
  global.set $assembly/gen/daverb/ld11
  global.get $assembly/gen/daverb/ld0
  i32.const 1
  i32.sub
  global.set $assembly/gen/daverb/md0
  global.get $assembly/gen/daverb/ld1
  i32.const 1
  i32.sub
  global.set $assembly/gen/daverb/md1
  global.get $assembly/gen/daverb/ld2
  i32.const 1
  i32.sub
  global.set $assembly/gen/daverb/md2
  global.get $assembly/gen/daverb/ld3
  i32.const 1
  i32.sub
  global.set $assembly/gen/daverb/md3
  global.get $assembly/gen/daverb/ld4
  i32.const 1
  i32.sub
  global.set $assembly/gen/daverb/md4
  global.get $assembly/gen/daverb/ld5
  i32.const 1
  i32.sub
  global.set $assembly/gen/daverb/md5
  global.get $assembly/gen/daverb/ld6
  i32.const 1
  i32.sub
  global.set $assembly/gen/daverb/md6
  global.get $assembly/gen/daverb/ld7
  i32.const 1
  i32.sub
  global.set $assembly/gen/daverb/md7
  global.get $assembly/gen/daverb/ld8
  i32.const 1
  i32.sub
  global.set $assembly/gen/daverb/md8
  global.get $assembly/gen/daverb/ld9
  i32.const 1
  i32.sub
  global.set $assembly/gen/daverb/md9
  global.get $assembly/gen/daverb/ld10
  i32.const 1
  i32.sub
  global.set $assembly/gen/daverb/md10
  global.get $assembly/gen/daverb/ld11
  i32.const 1
  i32.sub
  global.set $assembly/gen/daverb/md11
 )
 (func $start:assembly/index
  call $start:assembly/gen/daverb
 )
 (func $assembly/core/wavetable/Wavetable#set:length (param $this i32) (param $length i32)
  local.get $this
  local.get $length
  i32.store $0
 )
 (func $assembly/core/wavetable/Wavetable#set:mask (param $this i32) (param $mask i32)
  local.get $this
  local.get $mask
  i32.store $0 offset=4
 )
 (func $~lib/rt/stub/maybeGrowMemory (param $newOffset i32)
  (local $pagesBefore i32)
  (local $maxOffset i32)
  (local $pagesNeeded i32)
  (local $4 i32)
  (local $5 i32)
  (local $pagesWanted i32)
  memory.size $0
  local.set $pagesBefore
  local.get $pagesBefore
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $maxOffset
  local.get $newOffset
  local.get $maxOffset
  i32.gt_u
  if
   local.get $newOffset
   local.get $maxOffset
   i32.sub
   i32.const 65535
   i32.add
   i32.const 65535
   i32.const -1
   i32.xor
   i32.and
   i32.const 16
   i32.shr_u
   local.set $pagesNeeded
   local.get $pagesBefore
   local.tee $4
   local.get $pagesNeeded
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $pagesWanted
   local.get $pagesWanted
   memory.grow $0
   i32.const 0
   i32.lt_s
   if
    local.get $pagesNeeded
    memory.grow $0
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
  end
  local.get $newOffset
  global.set $~lib/rt/stub/offset
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (param $this i32) (param $mmInfo i32)
  local.get $this
  local.get $mmInfo
  i32.store $0
 )
 (func $~lib/rt/stub/__alloc (param $size i32) (result i32)
  (local $block i32)
  (local $ptr i32)
  (local $size|3 i32)
  (local $payloadSize i32)
  local.get $size
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 1048880
   i32.const 1048944
   i32.const 33
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.set $block
  global.get $~lib/rt/stub/offset
  i32.const 4
  i32.add
  local.set $ptr
  block $~lib/rt/stub/computeSize|inlined.0 (result i32)
   local.get $size
   local.set $size|3
   local.get $size|3
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
   br $~lib/rt/stub/computeSize|inlined.0
  end
  local.set $payloadSize
  local.get $ptr
  local.get $payloadSize
  i32.add
  call $~lib/rt/stub/maybeGrowMemory
  local.get $block
  local.get $payloadSize
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $ptr
  return
 )
 (func $~lib/rt/common/OBJECT#set:gcInfo (param $this i32) (param $gcInfo i32)
  local.get $this
  local.get $gcInfo
  i32.store $0 offset=4
 )
 (func $~lib/rt/common/OBJECT#set:gcInfo2 (param $this i32) (param $gcInfo2 i32)
  local.get $this
  local.get $gcInfo2
  i32.store $0 offset=8
 )
 (func $~lib/rt/common/OBJECT#set:rtId (param $this i32) (param $rtId i32)
  local.get $this
  local.get $rtId
  i32.store $0 offset=12
 )
 (func $~lib/rt/common/OBJECT#set:rtSize (param $this i32) (param $rtSize i32)
  local.get $this
  local.get $rtSize
  i32.store $0 offset=16
 )
 (func $~lib/rt/stub/__new (param $size i32) (param $id i32) (result i32)
  (local $ptr i32)
  (local $object i32)
  local.get $size
  i32.const 1073741804
  i32.gt_u
  if
   i32.const 1048880
   i32.const 1048944
   i32.const 86
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/stub/__alloc
  local.set $ptr
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $object
  local.get $object
  i32.const 0
  call $~lib/rt/common/OBJECT#set:gcInfo
  local.get $object
  i32.const 0
  call $~lib/rt/common/OBJECT#set:gcInfo2
  local.get $object
  local.get $id
  call $~lib/rt/common/OBJECT#set:rtId
  local.get $object
  local.get $size
  call $~lib/rt/common/OBJECT#set:rtSize
  local.get $ptr
  i32.const 16
  i32.add
  return
 )
 (func $~lib/staticarray/StaticArray<u32>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 1048768
   i32.const 1048816
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 2
  i32.shl
  local.set $outSize
  local.get $outSize
  i32.const 11
  call $~lib/rt/stub/__new
  local.set $out
  i32.const 0
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  i32.const 0
  local.get $outSize
  memory.fill $0
  local.get $out
  return
 )
 (func $~lib/rt/stub/__link (param $parentPtr i32) (param $childPtr i32) (param $expectMultiple i32)
  nop
 )
 (func $assembly/core/wavetable/Wavetable#set:phases (param $this i32) (param $phases i32)
  local.get $this
  local.get $phases
  i32.store $0 offset=8
  local.get $this
  local.get $phases
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/staticarray/StaticArray<f32>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 1048768
   i32.const 1048816
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 2
  i32.shl
  local.set $outSize
  local.get $outSize
  i32.const 4
  call $~lib/rt/stub/__new
  local.set $out
  i32.const 0
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  i32.const 0
  local.get $outSize
  memory.fill $0
  local.get $out
  return
 )
 (func $assembly/core/wavetable/Wavetable#set:sine (param $this i32) (param $sine i32)
  local.get $this
  local.get $sine
  i32.store $0 offset=12
  local.get $this
  local.get $sine
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/wavetable/Wavetable#set:cos (param $this i32) (param $cos i32)
  local.get $this
  local.get $cos
  i32.store $0 offset=16
  local.get $this
  local.get $cos
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/wavetable/Wavetable#set:exp (param $this i32) (param $exp i32)
  local.get $this
  local.get $exp
  i32.store $0 offset=20
  local.get $this
  local.get $exp
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/wavetable/Wavetable#set:noise (param $this i32) (param $noise i32)
  local.get $this
  local.get $noise
  i32.store $0 offset=24
  local.get $this
  local.get $noise
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/util/nextPowerOfTwo (param $v i32) (result i32)
  local.get $v
  i32.const 1
  i32.sub
  local.set $v
  local.get $v
  local.get $v
  i32.const 1
  i32.shr_u
  i32.or
  local.set $v
  local.get $v
  local.get $v
  i32.const 2
  i32.shr_u
  i32.or
  local.set $v
  local.get $v
  local.get $v
  i32.const 4
  i32.shr_u
  i32.or
  local.set $v
  local.get $v
  local.get $v
  i32.const 8
  i32.shr_u
  i32.or
  local.set $v
  local.get $v
  local.get $v
  i32.const 16
  i32.shr_u
  i32.or
  local.set $v
  local.get $v
  i32.const 1
  i32.add
  local.set $v
  local.get $v
  return
 )
 (func $~lib/math/NativeMath.log2 (param $x f64) (result f64)
  (local $x|1 f64)
  (local $ix i64)
  (local $r f64)
  (local $rhi f64)
  (local $rlo f64)
  (local $hi f64)
  (local $lo f64)
  (local $r2 f64)
  (local $r4 f64)
  (local $p f64)
  (local $y f64)
  (local $top i32)
  (local $tmp i64)
  (local $i i32)
  (local $k i64)
  (local $iz i64)
  (local $invc f64)
  (local $logc f64)
  (local $z f64)
  (local $kd f64)
  (local $chi f64)
  (local $clo f64)
  (local $r|23 f64)
  (local $rhi|24 f64)
  (local $rlo|25 f64)
  (local $t1 f64)
  (local $t2 f64)
  (local $t3 f64)
  (local $hi|29 f64)
  (local $lo|30 f64)
  (local $r2|31 f64)
  (local $p|32 f64)
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  block $~lib/util/math/log2_lut|inlined.0 (result f64)
   local.get $x
   local.set $x|1
   local.get $x|1
   i64.reinterpret_f64
   local.set $ix
   local.get $ix
   i64.const 4606800540372828160
   i64.sub
   i64.const 4607381812656734208
   i64.const 4606800540372828160
   i64.sub
   i64.lt_u
   if
    local.get $x|1
    f64.const 1
    f64.sub
    local.set $r
    local.get $r
    i64.reinterpret_f64
    i64.const -4294967296
    i64.and
    f64.reinterpret_i64
    local.set $rhi
    local.get $r
    local.get $rhi
    f64.sub
    local.set $rlo
    local.get $rhi
    f64.const 1.4426950407214463
    f64.mul
    local.set $hi
    local.get $rlo
    f64.const 1.4426950407214463
    f64.mul
    local.get $r
    f64.const 1.6751713164886512e-10
    f64.mul
    f64.add
    local.set $lo
    local.get $r
    local.get $r
    f64.mul
    local.set $r2
    local.get $r2
    local.get $r2
    f64.mul
    local.set $r4
    local.get $r2
    f64.const -0.7213475204444817
    local.get $r
    f64.const 0.48089834696298744
    f64.mul
    f64.add
    f64.mul
    local.set $p
    local.get $hi
    local.get $p
    f64.add
    local.set $y
    local.get $lo
    local.get $hi
    local.get $y
    f64.sub
    local.get $p
    f64.add
    f64.add
    local.set $lo
    local.get $lo
    local.get $r4
    f64.const -0.360673760222145
    local.get $r
    f64.const 0.2885390081805197
    f64.mul
    f64.add
    local.get $r2
    f64.const -0.24044917405728863
    local.get $r
    f64.const 0.2060992861022954
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $r4
    f64.const -0.18033596705327856
    local.get $r
    f64.const 0.1603032746063156
    f64.mul
    f64.add
    local.get $r2
    f64.const -0.14483316576701266
    local.get $r
    f64.const 0.13046826811283835
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $lo
    local.get $y
    local.get $lo
    f64.add
    br $~lib/util/math/log2_lut|inlined.0
   end
   local.get $ix
   i64.const 48
   i64.shr_u
   i32.wrap_i64
   local.set $top
   local.get $top
   i32.const 16
   i32.sub
   i32.const 32752
   i32.const 16
   i32.sub
   i32.ge_u
   if
    local.get $ix
    i64.const 1
    i64.shl
    i64.const 0
    i64.eq
    if
     f64.const -1
     local.get $x|1
     local.get $x|1
     f64.mul
     f64.div
     br $~lib/util/math/log2_lut|inlined.0
    end
    local.get $ix
    i64.const 9218868437227405312
    i64.eq
    if
     local.get $x|1
     br $~lib/util/math/log2_lut|inlined.0
    end
    local.get $top
    i32.const 32768
    i32.and
    if (result i32)
     i32.const 1
    else
     local.get $top
     i32.const 32752
     i32.and
     i32.const 32752
     i32.eq
    end
    if
     local.get $x|1
     local.get $x|1
     f64.sub
     local.get $x|1
     local.get $x|1
     f64.sub
     f64.div
     br $~lib/util/math/log2_lut|inlined.0
    end
    local.get $x|1
    f64.const 4503599627370496
    f64.mul
    i64.reinterpret_f64
    local.set $ix
    local.get $ix
    i64.const 52
    i64.const 52
    i64.shl
    i64.sub
    local.set $ix
   end
   local.get $ix
   i64.const 4604367669032910848
   i64.sub
   local.set $tmp
   local.get $tmp
   i64.const 52
   i32.const 6
   i64.extend_i32_s
   i64.sub
   i64.shr_u
   i32.const 63
   i64.extend_i32_s
   i64.and
   i32.wrap_i64
   local.set $i
   local.get $tmp
   i64.const 52
   i64.shr_s
   local.set $k
   local.get $ix
   local.get $tmp
   i64.const -4503599627370496
   i64.and
   i64.sub
   local.set $iz
   i32.const 1048992
   local.get $i
   i32.const 1
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load $0
   local.set $invc
   i32.const 1048992
   local.get $i
   i32.const 1
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load $0 offset=8
   local.set $logc
   local.get $iz
   f64.reinterpret_i64
   local.set $z
   local.get $k
   f64.convert_i64_s
   local.set $kd
   i32.const 1050016
   local.get $i
   i32.const 1
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load $0
   local.set $chi
   i32.const 1050016
   local.get $i
   i32.const 1
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load $0 offset=8
   local.set $clo
   local.get $z
   local.get $chi
   f64.sub
   local.get $clo
   f64.sub
   local.get $invc
   f64.mul
   local.set $r|23
   local.get $r|23
   i64.reinterpret_f64
   i64.const -4294967296
   i64.and
   f64.reinterpret_i64
   local.set $rhi|24
   local.get $r|23
   local.get $rhi|24
   f64.sub
   local.set $rlo|25
   local.get $rhi|24
   f64.const 1.4426950407214463
   f64.mul
   local.set $t1
   local.get $rlo|25
   f64.const 1.4426950407214463
   f64.mul
   local.get $r|23
   f64.const 1.6751713164886512e-10
   f64.mul
   f64.add
   local.set $t2
   local.get $kd
   local.get $logc
   f64.add
   local.set $t3
   local.get $t3
   local.get $t1
   f64.add
   local.set $hi|29
   local.get $t3
   local.get $hi|29
   f64.sub
   local.get $t1
   f64.add
   local.get $t2
   f64.add
   local.set $lo|30
   local.get $r|23
   local.get $r|23
   f64.mul
   local.set $r2|31
   f64.const -0.7213475204444882
   local.get $r|23
   f64.const 0.4808983469629985
   f64.mul
   f64.add
   local.get $r2|31
   f64.const -0.36067375954075914
   local.get $r|23
   f64.const 0.2885390073180969
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.get $r2|31
   local.get $r2|31
   f64.mul
   f64.const -0.2404693555628422
   local.get $r|23
   f64.const 0.2061202382173603
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.set $p|32
   local.get $lo|30
   local.get $r2|31
   local.get $p|32
   f64.mul
   f64.add
   local.get $hi|29
   f64.add
   br $~lib/util/math/log2_lut|inlined.0
  end
  return
 )
 (func $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 1048768
   i32.const 1048816
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 2
  i32.shl
  local.set $outSize
  local.get $outSize
  i32.const 13
  call $~lib/rt/stub/__new
  local.set $out
  i32.const 0
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  i32.const 0
  local.get $outSize
  memory.fill $0
  local.get $out
  return
 )
 (func $~lib/rt/common/OBJECT#get:rtSize (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/stub/__link
 )
 (func $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#__set (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#get:length
  i32.ge_u
  if
   i32.const 1051072
   i32.const 1048816
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  local.get $value
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#__uset
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:real (param $this i32) (param $real i32)
  local.get $this
  local.get $real
  i32.store $0
  local.get $this
  local.get $real
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:imag (param $this i32) (param $imag i32)
  local.get $this
  local.get $imag
  i32.store $0 offset=4
  local.get $this
  local.get $imag
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:freqs (param $this i32) (param $freqs i32)
  local.get $this
  local.get $freqs
  i32.store $0 offset=8
  local.get $this
  local.get $freqs
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:saw (param $this i32) (param $saw i32)
  local.get $this
  local.get $saw
  i32.store $0 offset=52
  local.get $this
  local.get $saw
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:ramp (param $this i32) (param $ramp i32)
  local.get $this
  local.get $ramp
  i32.store $0 offset=56
  local.get $this
  local.get $ramp
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:sqr (param $this i32) (param $sqr i32)
  local.get $this
  local.get $sqr
  i32.store $0 offset=60
  local.get $this
  local.get $sqr
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:tri (param $this i32) (param $tri i32)
  local.get $this
  local.get $tri
  i32.store $0 offset=64
  local.get $this
  local.get $tri
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:audioRate (param $this i32) (param $audioRate i32)
  local.get $this
  local.get $audioRate
  i32.store $0 offset=48
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:topFreq (param $this i32) (param $topFreq f64)
  local.get $this
  local.get $topFreq
  f64.store $0 offset=16
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:maxHarms (param $this i32) (param $maxHarms i32)
  local.get $this
  local.get $maxHarms
  i32.store $0 offset=24
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:numOfTables (param $this i32) (param $numOfTables i32)
  local.get $this
  local.get $numOfTables
  i32.store $0 offset=28
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:tableLength (param $this i32) (param $tableLength i32)
  local.get $this
  local.get $tableLength
  i32.store $0 offset=32
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:tableMask (param $this i32) (param $tableMask i32)
  local.get $this
  local.get $tableMask
  i32.store $0 offset=36
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:tableLength (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=32
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:stepShift (param $this i32) (param $stepShift i32)
  local.get $this
  local.get $stepShift
  i32.store $0 offset=44
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:saw (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=52
 )
 (func $~lib/staticarray/StaticArray<f32>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $~lib/staticarray/StaticArray<f32>#__uset (param $this i32) (param $index i32) (param $value f32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  f32.store $0
  i32.const 0
  drop
 )
 (func $~lib/staticarray/StaticArray<f32>#__set (param $this i32) (param $index i32) (param $value f32)
  local.get $index
  local.get $this
  call $~lib/staticarray/StaticArray<f32>#get:length
  i32.ge_u
  if
   i32.const 1051072
   i32.const 1048816
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  local.get $value
  call $~lib/staticarray/StaticArray<f32>#__uset
 )
 (func $assembly/core/antialias-wavetable/Real.saw (param $real i32) (param $i i32) (param $j i32)
  (local $temp f32)
  f32.const -1
  local.get $i
  f32.convert_i32_u
  f32.div
  local.set $temp
  local.get $real
  local.get $i
  local.get $temp
  call $~lib/staticarray/StaticArray<f32>#__set
  local.get $real
  local.get $j
  local.get $temp
  f32.neg
  call $~lib/staticarray/StaticArray<f32>#__set
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:topFreq (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=16
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:maxHarms (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:imag (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/util/bytes/FILL<f32> (param $ptr i32) (param $len i32) (param $value f32) (param $start i32) (param $end i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $5
   i32.const 0
   local.tee $6
   local.get $5
   local.get $6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $7
   local.get $len
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $9
   i32.const 0
   local.tee $10
   local.get $9
   local.get $10
   i32.gt_u
   select
  else
   local.get $end
   local.tee $11
   local.get $len
   local.tee $12
   local.get $11
   local.get $12
   i32.lt_s
   select
  end
  local.set $end
  i32.const 4
  i32.const 1
  i32.eq
  drop
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $value
  i32.reinterpret_f32
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   i32.const 4
   i32.const 8
   i32.eq
  end
  if
   local.get $start
   local.get $end
   i32.lt_s
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    i32.const 0
    local.get $end
    local.get $start
    i32.sub
    i32.const 2
    i32.shl
    memory.fill $0
   end
   return
  end
  loop $for-loop|0
   local.get $start
   local.get $end
   i32.lt_s
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    f32.store $0
    local.get $start
    i32.const 1
    i32.add
    local.set $start
    br $for-loop|0
   end
  end
 )
 (func $~lib/staticarray/StaticArray<f32>#fill (param $this i32) (param $value f32) (param $start i32) (param $end i32) (result i32)
  i32.const 0
  drop
  local.get $this
  local.get $this
  call $~lib/staticarray/StaticArray<f32>#get:length
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<f32>
  local.get $this
  return
 )
 (func $~lib/staticarray/StaticArray<f32>#fill@varargs (param $this i32) (param $value f32) (param $start i32) (param $end i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $start
   end
   global.get $~lib/builtins/i32.MAX_VALUE
   local.set $end
  end
  local.get $this
  local.get $value
  local.get $start
  local.get $end
  call $~lib/staticarray/StaticArray<f32>#fill
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:real (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#defineWaveform (param $this i32) (param $harms i32) (param $fn i32)
  (local $i i32)
  (local $j i32)
  local.get $harms
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:tableLength
  i32.const 1
  i32.shr_u
  i32.gt_u
  if
   local.get $this
   call $assembly/core/antialias-wavetable/AntialiasWavetable#get:tableLength
   i32.const 1
   i32.shr_u
   local.set $harms
  end
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:imag
  f32.const 0
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/staticarray/StaticArray<f32>#fill@varargs
  drop
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:real
  f32.const 0
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/staticarray/StaticArray<f32>#fill@varargs
  drop
  f32.const 1
  global.set $assembly/core/antialias-wavetable/Real.sign
  i32.const 1
  local.set $i
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:tableLength
  i32.const 1
  i32.sub
  local.set $j
  loop $for-loop|0
   local.get $i
   local.get $harms
   i32.le_u
   if
    local.get $this
    call $assembly/core/antialias-wavetable/AntialiasWavetable#get:real
    local.get $i
    local.get $j
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    local.get $j
    i32.const 1
    i32.sub
    local.set $j
    br $for-loop|0
   end
  end
 )
 (func $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#get:length
  i32.ge_u
  if
   i32.const 1051072
   i32.const 1048816
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 1051168
   i32.const 1048816
   i32.const 82
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  return
 )
 (func $~lib/staticarray/StaticArray<f32>#__get (param $this i32) (param $index i32) (result f32)
  (local $value f32)
  local.get $index
  local.get $this
  call $~lib/staticarray/StaticArray<f32>#get:length
  i32.ge_u
  if
   i32.const 1051072
   i32.const 1048816
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
  return
 )
 (func $~lib/math/NativeMathf.cos (param $x f32) (result f32)
  (local $ux i32)
  (local $sign i32)
  (local $x|3 f64)
  (local $z f64)
  (local $w f64)
  (local $r f64)
  (local $x|7 f64)
  (local $z|8 f64)
  (local $w|9 f64)
  (local $r|10 f64)
  (local $x|11 f64)
  (local $z|12 f64)
  (local $w|13 f64)
  (local $r|14 f64)
  (local $s f64)
  (local $x|16 f64)
  (local $z|17 f64)
  (local $w|18 f64)
  (local $r|19 f64)
  (local $s|20 f64)
  (local $x|21 f64)
  (local $z|22 f64)
  (local $w|23 f64)
  (local $r|24 f64)
  (local $x|25 f64)
  (local $z|26 f64)
  (local $w|27 f64)
  (local $r|28 f64)
  (local $s|29 f64)
  (local $x|30 f64)
  (local $z|31 f64)
  (local $w|32 f64)
  (local $r|33 f64)
  (local $s|34 f64)
  (local $x|35 f32)
  (local $u i32)
  (local $sign|37 i32)
  (local $q f64)
  (local $x|39 f32)
  (local $u|40 i32)
  (local $offset i32)
  (local $shift i64)
  (local $tblPtr i32)
  (local $b0 i64)
  (local $b1 i64)
  (local $lo i64)
  (local $b2 i64)
  (local $hi i64)
  (local $mantissa i64)
  (local $product i64)
  (local $r|51 i64)
  (local $q|52 i32)
  (local $q|53 i32)
  (local $n i32)
  (local $y f64)
  (local $x|56 f64)
  (local $z|57 f64)
  (local $w|58 f64)
  (local $r|59 f64)
  (local $s|60 f64)
  (local $x|61 f64)
  (local $z|62 f64)
  (local $w|63 f64)
  (local $r|64 f64)
  (local $t f32)
  local.get $x
  i32.reinterpret_f32
  local.set $ux
  local.get $ux
  i32.const 31
  i32.shr_u
  local.set $sign
  local.get $ux
  i32.const 2147483647
  i32.and
  local.set $ux
  local.get $ux
  i32.const 1061752794
  i32.le_u
  if
   local.get $ux
   i32.const 964689920
   i32.lt_u
   if
    f32.const 1
    return
   end
   block $~lib/math/cos_kernf|inlined.0 (result f32)
    local.get $x
    f64.promote_f32
    local.set $x|3
    local.get $x|3
    local.get $x|3
    f64.mul
    local.set $z
    local.get $z
    local.get $z
    f64.mul
    local.set $w
    f64.const -0.001388676377460993
    local.get $z
    f64.const 2.439044879627741e-05
    f64.mul
    f64.add
    local.set $r
    f32.const 1
    f64.promote_f32
    local.get $z
    f64.const -0.499999997251031
    f64.mul
    f64.add
    local.get $w
    f64.const 0.04166662332373906
    f64.mul
    f64.add
    local.get $w
    local.get $z
    f64.mul
    local.get $r
    f64.mul
    f64.add
    f32.demote_f64
    br $~lib/math/cos_kernf|inlined.0
   end
   return
  end
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  local.get $ux
  i32.const 1081824209
  i32.le_u
  if
   local.get $ux
   i32.const 1075235811
   i32.gt_u
   if
    block $~lib/math/cos_kernf|inlined.1 (result f32)
     local.get $sign
     if (result f64)
      local.get $x
      f64.promote_f32
      f64.const 3.141592653589793
      f64.add
     else
      local.get $x
      f64.promote_f32
      f64.const 3.141592653589793
      f64.sub
     end
     local.set $x|7
     local.get $x|7
     local.get $x|7
     f64.mul
     local.set $z|8
     local.get $z|8
     local.get $z|8
     f64.mul
     local.set $w|9
     f64.const -0.001388676377460993
     local.get $z|8
     f64.const 2.439044879627741e-05
     f64.mul
     f64.add
     local.set $r|10
     f32.const 1
     f64.promote_f32
     local.get $z|8
     f64.const -0.499999997251031
     f64.mul
     f64.add
     local.get $w|9
     f64.const 0.04166662332373906
     f64.mul
     f64.add
     local.get $w|9
     local.get $z|8
     f64.mul
     local.get $r|10
     f64.mul
     f64.add
     f32.demote_f64
     br $~lib/math/cos_kernf|inlined.1
    end
    f32.neg
    return
   else
    local.get $sign
    if (result f32)
     block $~lib/math/sin_kernf|inlined.0 (result f32)
      local.get $x
      f64.promote_f32
      f64.const 1.5707963267948966
      f64.add
      local.set $x|11
      local.get $x|11
      local.get $x|11
      f64.mul
      local.set $z|12
      local.get $z|12
      local.get $z|12
      f64.mul
      local.set $w|13
      f64.const -1.9839334836096632e-04
      local.get $z|12
      f64.const 2.718311493989822e-06
      f64.mul
      f64.add
      local.set $r|14
      local.get $z|12
      local.get $x|11
      f64.mul
      local.set $s
      local.get $x|11
      local.get $s
      f64.const -0.16666666641626524
      local.get $z|12
      f64.const 0.008333329385889463
      f64.mul
      f64.add
      f64.mul
      f64.add
      local.get $s
      local.get $w|13
      f64.mul
      local.get $r|14
      f64.mul
      f64.add
      f32.demote_f64
      br $~lib/math/sin_kernf|inlined.0
     end
    else
     block $~lib/math/sin_kernf|inlined.1 (result f32)
      f64.const 1.5707963267948966
      local.get $x
      f64.promote_f32
      f64.sub
      local.set $x|16
      local.get $x|16
      local.get $x|16
      f64.mul
      local.set $z|17
      local.get $z|17
      local.get $z|17
      f64.mul
      local.set $w|18
      f64.const -1.9839334836096632e-04
      local.get $z|17
      f64.const 2.718311493989822e-06
      f64.mul
      f64.add
      local.set $r|19
      local.get $z|17
      local.get $x|16
      f64.mul
      local.set $s|20
      local.get $x|16
      local.get $s|20
      f64.const -0.16666666641626524
      local.get $z|17
      f64.const 0.008333329385889463
      f64.mul
      f64.add
      f64.mul
      f64.add
      local.get $s|20
      local.get $w|18
      f64.mul
      local.get $r|19
      f64.mul
      f64.add
      f32.demote_f64
      br $~lib/math/sin_kernf|inlined.1
     end
    end
    return
   end
   unreachable
  end
  local.get $ux
  i32.const 1088565717
  i32.le_u
  if
   local.get $ux
   i32.const 1085271519
   i32.gt_u
   if
    block $~lib/math/cos_kernf|inlined.2 (result f32)
     local.get $sign
     if (result f64)
      local.get $x
      f64.promote_f32
      f64.const 6.283185307179586
      f64.add
     else
      local.get $x
      f64.promote_f32
      f64.const 6.283185307179586
      f64.sub
     end
     local.set $x|21
     local.get $x|21
     local.get $x|21
     f64.mul
     local.set $z|22
     local.get $z|22
     local.get $z|22
     f64.mul
     local.set $w|23
     f64.const -0.001388676377460993
     local.get $z|22
     f64.const 2.439044879627741e-05
     f64.mul
     f64.add
     local.set $r|24
     f32.const 1
     f64.promote_f32
     local.get $z|22
     f64.const -0.499999997251031
     f64.mul
     f64.add
     local.get $w|23
     f64.const 0.04166662332373906
     f64.mul
     f64.add
     local.get $w|23
     local.get $z|22
     f64.mul
     local.get $r|24
     f64.mul
     f64.add
     f32.demote_f64
     br $~lib/math/cos_kernf|inlined.2
    end
    return
   else
    local.get $sign
    if (result f32)
     block $~lib/math/sin_kernf|inlined.2 (result f32)
      local.get $x
      f32.neg
      f64.promote_f32
      f64.const 4.71238898038469
      f64.sub
      local.set $x|25
      local.get $x|25
      local.get $x|25
      f64.mul
      local.set $z|26
      local.get $z|26
      local.get $z|26
      f64.mul
      local.set $w|27
      f64.const -1.9839334836096632e-04
      local.get $z|26
      f64.const 2.718311493989822e-06
      f64.mul
      f64.add
      local.set $r|28
      local.get $z|26
      local.get $x|25
      f64.mul
      local.set $s|29
      local.get $x|25
      local.get $s|29
      f64.const -0.16666666641626524
      local.get $z|26
      f64.const 0.008333329385889463
      f64.mul
      f64.add
      f64.mul
      f64.add
      local.get $s|29
      local.get $w|27
      f64.mul
      local.get $r|28
      f64.mul
      f64.add
      f32.demote_f64
      br $~lib/math/sin_kernf|inlined.2
     end
    else
     block $~lib/math/sin_kernf|inlined.3 (result f32)
      local.get $x
      f64.promote_f32
      f64.const 4.71238898038469
      f64.sub
      local.set $x|30
      local.get $x|30
      local.get $x|30
      f64.mul
      local.set $z|31
      local.get $z|31
      local.get $z|31
      f64.mul
      local.set $w|32
      f64.const -1.9839334836096632e-04
      local.get $z|31
      f64.const 2.718311493989822e-06
      f64.mul
      f64.add
      local.set $r|33
      local.get $z|31
      local.get $x|30
      f64.mul
      local.set $s|34
      local.get $x|30
      local.get $s|34
      f64.const -0.16666666641626524
      local.get $z|31
      f64.const 0.008333329385889463
      f64.mul
      f64.add
      f64.mul
      f64.add
      local.get $s|34
      local.get $w|32
      f64.mul
      local.get $r|33
      f64.mul
      f64.add
      f32.demote_f64
      br $~lib/math/sin_kernf|inlined.3
     end
    end
    return
   end
   unreachable
  end
  local.get $ux
  i32.const 2139095040
  i32.ge_u
  if
   local.get $x
   local.get $x
   f32.sub
   return
  end
  block $~lib/math/rempio2f|inlined.0 (result i32)
   local.get $x
   local.set $x|35
   local.get $ux
   local.set $u
   local.get $sign
   local.set $sign|37
   local.get $u
   i32.const 1305022427
   i32.lt_u
   if
    local.get $x|35
    f64.promote_f32
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.set $q
    local.get $x|35
    f64.promote_f32
    local.get $q
    f64.const 1.5707963109016418
    f64.mul
    f64.sub
    local.get $q
    f64.const 1.5893254773528196e-08
    f64.mul
    f64.sub
    global.set $~lib/math/rempio2f_y
    local.get $q
    i32.trunc_sat_f64_s
    br $~lib/math/rempio2f|inlined.0
   end
   block $~lib/math/pio2f_large_quot|inlined.0 (result i32)
    local.get $x|35
    local.set $x|39
    local.get $u
    local.set $u|40
    local.get $u|40
    i32.const 23
    i32.shr_s
    i32.const 152
    i32.sub
    local.set $offset
    local.get $offset
    i32.const 63
    i32.and
    i64.extend_i32_s
    local.set $shift
    i32.const 1051280
    local.get $offset
    i32.const 6
    i32.shr_s
    i32.const 3
    i32.shl
    i32.add
    local.set $tblPtr
    local.get $tblPtr
    i64.load $0
    local.set $b0
    local.get $tblPtr
    i64.load $0 offset=8
    local.set $b1
    local.get $shift
    i64.const 32
    i64.gt_u
    if
     local.get $tblPtr
     i64.load $0 offset=16
     local.set $b2
     local.get $b2
     i64.const 96
     local.get $shift
     i64.sub
     i64.shr_u
     local.set $lo
     local.get $lo
     local.get $b1
     local.get $shift
     i64.const 32
     i64.sub
     i64.shl
     i64.or
     local.set $lo
    else
     local.get $b1
     i64.const 32
     local.get $shift
     i64.sub
     i64.shr_u
     local.set $lo
    end
    local.get $b1
    i64.const 64
    local.get $shift
    i64.sub
    i64.shr_u
    local.get $b0
    local.get $shift
    i64.shl
    i64.or
    local.set $hi
    local.get $u|40
    i32.const 8388607
    i32.and
    i32.const 8388608
    i32.or
    i64.extend_i32_s
    local.set $mantissa
    local.get $mantissa
    local.get $hi
    i64.mul
    local.get $mantissa
    local.get $lo
    i64.mul
    i64.const 32
    i64.shr_u
    i64.add
    local.set $product
    local.get $product
    i64.const 2
    i64.shl
    local.set $r|51
    local.get $product
    i64.const 62
    i64.shr_u
    local.get $r|51
    i64.const 63
    i64.shr_u
    i64.add
    i32.wrap_i64
    local.set $q|52
    f64.const 8.515303950216386e-20
    local.get $x|39
    f64.promote_f32
    f64.copysign
    local.get $r|51
    f64.convert_i64_s
    f64.mul
    global.set $~lib/math/rempio2f_y
    local.get $q|52
    br $~lib/math/pio2f_large_quot|inlined.0
   end
   local.set $q|53
   i32.const 0
   local.get $q|53
   i32.sub
   local.get $q|53
   local.get $sign|37
   select
   br $~lib/math/rempio2f|inlined.0
  end
  local.set $n
  global.get $~lib/math/rempio2f_y
  local.set $y
  local.get $n
  i32.const 1
  i32.and
  if (result f32)
   block $~lib/math/sin_kernf|inlined.4 (result f32)
    local.get $y
    local.set $x|56
    local.get $x|56
    local.get $x|56
    f64.mul
    local.set $z|57
    local.get $z|57
    local.get $z|57
    f64.mul
    local.set $w|58
    f64.const -1.9839334836096632e-04
    local.get $z|57
    f64.const 2.718311493989822e-06
    f64.mul
    f64.add
    local.set $r|59
    local.get $z|57
    local.get $x|56
    f64.mul
    local.set $s|60
    local.get $x|56
    local.get $s|60
    f64.const -0.16666666641626524
    local.get $z|57
    f64.const 0.008333329385889463
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $s|60
    local.get $w|58
    f64.mul
    local.get $r|59
    f64.mul
    f64.add
    f32.demote_f64
    br $~lib/math/sin_kernf|inlined.4
   end
  else
   block $~lib/math/cos_kernf|inlined.3 (result f32)
    local.get $y
    local.set $x|61
    local.get $x|61
    local.get $x|61
    f64.mul
    local.set $z|62
    local.get $z|62
    local.get $z|62
    f64.mul
    local.set $w|63
    f64.const -0.001388676377460993
    local.get $z|62
    f64.const 2.439044879627741e-05
    f64.mul
    f64.add
    local.set $r|64
    f32.const 1
    f64.promote_f32
    local.get $z|62
    f64.const -0.499999997251031
    f64.mul
    f64.add
    local.get $w|63
    f64.const 0.04166662332373906
    f64.mul
    f64.add
    local.get $w|63
    local.get $z|62
    f64.mul
    local.get $r|64
    f64.mul
    f64.add
    f32.demote_f64
    br $~lib/math/cos_kernf|inlined.3
   end
  end
  local.set $t
  local.get $n
  i32.const 1
  i32.add
  i32.const 2
  i32.and
  if (result f32)
   local.get $t
   f32.neg
  else
   local.get $t
  end
  return
 )
 (func $~lib/math/NativeMathf.sin (param $x f32) (result f32)
  (local $ux i32)
  (local $sign i32)
  (local $x|3 f64)
  (local $z f64)
  (local $w f64)
  (local $r f64)
  (local $s f64)
  (local $x|8 f64)
  (local $z|9 f64)
  (local $w|10 f64)
  (local $r|11 f64)
  (local $x|12 f64)
  (local $z|13 f64)
  (local $w|14 f64)
  (local $r|15 f64)
  (local $x|16 f64)
  (local $z|17 f64)
  (local $w|18 f64)
  (local $r|19 f64)
  (local $s|20 f64)
  (local $x|21 f64)
  (local $z|22 f64)
  (local $w|23 f64)
  (local $r|24 f64)
  (local $x|25 f64)
  (local $z|26 f64)
  (local $w|27 f64)
  (local $r|28 f64)
  (local $x|29 f64)
  (local $z|30 f64)
  (local $w|31 f64)
  (local $r|32 f64)
  (local $s|33 f64)
  (local $x|34 f32)
  (local $u i32)
  (local $sign|36 i32)
  (local $q f64)
  (local $x|38 f32)
  (local $u|39 i32)
  (local $offset i32)
  (local $shift i64)
  (local $tblPtr i32)
  (local $b0 i64)
  (local $b1 i64)
  (local $lo i64)
  (local $b2 i64)
  (local $hi i64)
  (local $mantissa i64)
  (local $product i64)
  (local $r|50 i64)
  (local $q|51 i32)
  (local $q|52 i32)
  (local $n i32)
  (local $y f64)
  (local $x|55 f64)
  (local $z|56 f64)
  (local $w|57 f64)
  (local $r|58 f64)
  (local $x|59 f64)
  (local $z|60 f64)
  (local $w|61 f64)
  (local $r|62 f64)
  (local $s|63 f64)
  (local $t f32)
  local.get $x
  i32.reinterpret_f32
  local.set $ux
  local.get $ux
  i32.const 31
  i32.shr_u
  local.set $sign
  local.get $ux
  i32.const 2147483647
  i32.and
  local.set $ux
  local.get $ux
  i32.const 1061752794
  i32.le_u
  if
   local.get $ux
   i32.const 964689920
   i32.lt_u
   if
    local.get $x
    return
   end
   block $~lib/math/sin_kernf|inlined.5 (result f32)
    local.get $x
    f64.promote_f32
    local.set $x|3
    local.get $x|3
    local.get $x|3
    f64.mul
    local.set $z
    local.get $z
    local.get $z
    f64.mul
    local.set $w
    f64.const -1.9839334836096632e-04
    local.get $z
    f64.const 2.718311493989822e-06
    f64.mul
    f64.add
    local.set $r
    local.get $z
    local.get $x|3
    f64.mul
    local.set $s
    local.get $x|3
    local.get $s
    f64.const -0.16666666641626524
    local.get $z
    f64.const 0.008333329385889463
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $s
    local.get $w
    f64.mul
    local.get $r
    f64.mul
    f64.add
    f32.demote_f64
    br $~lib/math/sin_kernf|inlined.5
   end
   return
  end
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  local.get $ux
  i32.const 1081824209
  i32.le_u
  if
   local.get $ux
   i32.const 1075235811
   i32.le_u
   if
    local.get $sign
    if (result f32)
     block $~lib/math/cos_kernf|inlined.4 (result f32)
      local.get $x
      f64.promote_f32
      f64.const 1.5707963267948966
      f64.add
      local.set $x|8
      local.get $x|8
      local.get $x|8
      f64.mul
      local.set $z|9
      local.get $z|9
      local.get $z|9
      f64.mul
      local.set $w|10
      f64.const -0.001388676377460993
      local.get $z|9
      f64.const 2.439044879627741e-05
      f64.mul
      f64.add
      local.set $r|11
      f32.const 1
      f64.promote_f32
      local.get $z|9
      f64.const -0.499999997251031
      f64.mul
      f64.add
      local.get $w|10
      f64.const 0.04166662332373906
      f64.mul
      f64.add
      local.get $w|10
      local.get $z|9
      f64.mul
      local.get $r|11
      f64.mul
      f64.add
      f32.demote_f64
      br $~lib/math/cos_kernf|inlined.4
     end
     f32.neg
    else
     block $~lib/math/cos_kernf|inlined.5 (result f32)
      local.get $x
      f64.promote_f32
      f64.const 1.5707963267948966
      f64.sub
      local.set $x|12
      local.get $x|12
      local.get $x|12
      f64.mul
      local.set $z|13
      local.get $z|13
      local.get $z|13
      f64.mul
      local.set $w|14
      f64.const -0.001388676377460993
      local.get $z|13
      f64.const 2.439044879627741e-05
      f64.mul
      f64.add
      local.set $r|15
      f32.const 1
      f64.promote_f32
      local.get $z|13
      f64.const -0.499999997251031
      f64.mul
      f64.add
      local.get $w|14
      f64.const 0.04166662332373906
      f64.mul
      f64.add
      local.get $w|14
      local.get $z|13
      f64.mul
      local.get $r|15
      f64.mul
      f64.add
      f32.demote_f64
      br $~lib/math/cos_kernf|inlined.5
     end
    end
    return
   end
   block $~lib/math/sin_kernf|inlined.6 (result f32)
    local.get $sign
    if (result f64)
     local.get $x
     f64.promote_f32
     f64.const 3.141592653589793
     f64.add
    else
     local.get $x
     f64.promote_f32
     f64.const 3.141592653589793
     f64.sub
    end
    f64.neg
    local.set $x|16
    local.get $x|16
    local.get $x|16
    f64.mul
    local.set $z|17
    local.get $z|17
    local.get $z|17
    f64.mul
    local.set $w|18
    f64.const -1.9839334836096632e-04
    local.get $z|17
    f64.const 2.718311493989822e-06
    f64.mul
    f64.add
    local.set $r|19
    local.get $z|17
    local.get $x|16
    f64.mul
    local.set $s|20
    local.get $x|16
    local.get $s|20
    f64.const -0.16666666641626524
    local.get $z|17
    f64.const 0.008333329385889463
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $s|20
    local.get $w|18
    f64.mul
    local.get $r|19
    f64.mul
    f64.add
    f32.demote_f64
    br $~lib/math/sin_kernf|inlined.6
   end
   return
  end
  local.get $ux
  i32.const 1088565717
  i32.le_u
  if
   local.get $ux
   i32.const 1085271519
   i32.le_u
   if
    local.get $sign
    if (result f32)
     block $~lib/math/cos_kernf|inlined.6 (result f32)
      local.get $x
      f64.promote_f32
      f64.const 4.71238898038469
      f64.add
      local.set $x|21
      local.get $x|21
      local.get $x|21
      f64.mul
      local.set $z|22
      local.get $z|22
      local.get $z|22
      f64.mul
      local.set $w|23
      f64.const -0.001388676377460993
      local.get $z|22
      f64.const 2.439044879627741e-05
      f64.mul
      f64.add
      local.set $r|24
      f32.const 1
      f64.promote_f32
      local.get $z|22
      f64.const -0.499999997251031
      f64.mul
      f64.add
      local.get $w|23
      f64.const 0.04166662332373906
      f64.mul
      f64.add
      local.get $w|23
      local.get $z|22
      f64.mul
      local.get $r|24
      f64.mul
      f64.add
      f32.demote_f64
      br $~lib/math/cos_kernf|inlined.6
     end
    else
     block $~lib/math/cos_kernf|inlined.7 (result f32)
      local.get $x
      f64.promote_f32
      f64.const 4.71238898038469
      f64.sub
      local.set $x|25
      local.get $x|25
      local.get $x|25
      f64.mul
      local.set $z|26
      local.get $z|26
      local.get $z|26
      f64.mul
      local.set $w|27
      f64.const -0.001388676377460993
      local.get $z|26
      f64.const 2.439044879627741e-05
      f64.mul
      f64.add
      local.set $r|28
      f32.const 1
      f64.promote_f32
      local.get $z|26
      f64.const -0.499999997251031
      f64.mul
      f64.add
      local.get $w|27
      f64.const 0.04166662332373906
      f64.mul
      f64.add
      local.get $w|27
      local.get $z|26
      f64.mul
      local.get $r|28
      f64.mul
      f64.add
      f32.demote_f64
      br $~lib/math/cos_kernf|inlined.7
     end
     f32.neg
    end
    return
   end
   block $~lib/math/sin_kernf|inlined.7 (result f32)
    local.get $sign
    if (result f64)
     local.get $x
     f64.promote_f32
     f64.const 6.283185307179586
     f64.add
    else
     local.get $x
     f64.promote_f32
     f64.const 6.283185307179586
     f64.sub
    end
    local.set $x|29
    local.get $x|29
    local.get $x|29
    f64.mul
    local.set $z|30
    local.get $z|30
    local.get $z|30
    f64.mul
    local.set $w|31
    f64.const -1.9839334836096632e-04
    local.get $z|30
    f64.const 2.718311493989822e-06
    f64.mul
    f64.add
    local.set $r|32
    local.get $z|30
    local.get $x|29
    f64.mul
    local.set $s|33
    local.get $x|29
    local.get $s|33
    f64.const -0.16666666641626524
    local.get $z|30
    f64.const 0.008333329385889463
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $s|33
    local.get $w|31
    f64.mul
    local.get $r|32
    f64.mul
    f64.add
    f32.demote_f64
    br $~lib/math/sin_kernf|inlined.7
   end
   return
  end
  local.get $ux
  i32.const 2139095040
  i32.ge_u
  if
   local.get $x
   local.get $x
   f32.sub
   return
  end
  block $~lib/math/rempio2f|inlined.1 (result i32)
   local.get $x
   local.set $x|34
   local.get $ux
   local.set $u
   local.get $sign
   local.set $sign|36
   local.get $u
   i32.const 1305022427
   i32.lt_u
   if
    local.get $x|34
    f64.promote_f32
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.set $q
    local.get $x|34
    f64.promote_f32
    local.get $q
    f64.const 1.5707963109016418
    f64.mul
    f64.sub
    local.get $q
    f64.const 1.5893254773528196e-08
    f64.mul
    f64.sub
    global.set $~lib/math/rempio2f_y
    local.get $q
    i32.trunc_sat_f64_s
    br $~lib/math/rempio2f|inlined.1
   end
   block $~lib/math/pio2f_large_quot|inlined.1 (result i32)
    local.get $x|34
    local.set $x|38
    local.get $u
    local.set $u|39
    local.get $u|39
    i32.const 23
    i32.shr_s
    i32.const 152
    i32.sub
    local.set $offset
    local.get $offset
    i32.const 63
    i32.and
    i64.extend_i32_s
    local.set $shift
    i32.const 1051280
    local.get $offset
    i32.const 6
    i32.shr_s
    i32.const 3
    i32.shl
    i32.add
    local.set $tblPtr
    local.get $tblPtr
    i64.load $0
    local.set $b0
    local.get $tblPtr
    i64.load $0 offset=8
    local.set $b1
    local.get $shift
    i64.const 32
    i64.gt_u
    if
     local.get $tblPtr
     i64.load $0 offset=16
     local.set $b2
     local.get $b2
     i64.const 96
     local.get $shift
     i64.sub
     i64.shr_u
     local.set $lo
     local.get $lo
     local.get $b1
     local.get $shift
     i64.const 32
     i64.sub
     i64.shl
     i64.or
     local.set $lo
    else
     local.get $b1
     i64.const 32
     local.get $shift
     i64.sub
     i64.shr_u
     local.set $lo
    end
    local.get $b1
    i64.const 64
    local.get $shift
    i64.sub
    i64.shr_u
    local.get $b0
    local.get $shift
    i64.shl
    i64.or
    local.set $hi
    local.get $u|39
    i32.const 8388607
    i32.and
    i32.const 8388608
    i32.or
    i64.extend_i32_s
    local.set $mantissa
    local.get $mantissa
    local.get $hi
    i64.mul
    local.get $mantissa
    local.get $lo
    i64.mul
    i64.const 32
    i64.shr_u
    i64.add
    local.set $product
    local.get $product
    i64.const 2
    i64.shl
    local.set $r|50
    local.get $product
    i64.const 62
    i64.shr_u
    local.get $r|50
    i64.const 63
    i64.shr_u
    i64.add
    i32.wrap_i64
    local.set $q|51
    f64.const 8.515303950216386e-20
    local.get $x|38
    f64.promote_f32
    f64.copysign
    local.get $r|50
    f64.convert_i64_s
    f64.mul
    global.set $~lib/math/rempio2f_y
    local.get $q|51
    br $~lib/math/pio2f_large_quot|inlined.1
   end
   local.set $q|52
   i32.const 0
   local.get $q|52
   i32.sub
   local.get $q|52
   local.get $sign|36
   select
   br $~lib/math/rempio2f|inlined.1
  end
  local.set $n
  global.get $~lib/math/rempio2f_y
  local.set $y
  local.get $n
  i32.const 1
  i32.and
  if (result f32)
   block $~lib/math/cos_kernf|inlined.8 (result f32)
    local.get $y
    local.set $x|55
    local.get $x|55
    local.get $x|55
    f64.mul
    local.set $z|56
    local.get $z|56
    local.get $z|56
    f64.mul
    local.set $w|57
    f64.const -0.001388676377460993
    local.get $z|56
    f64.const 2.439044879627741e-05
    f64.mul
    f64.add
    local.set $r|58
    f32.const 1
    f64.promote_f32
    local.get $z|56
    f64.const -0.499999997251031
    f64.mul
    f64.add
    local.get $w|57
    f64.const 0.04166662332373906
    f64.mul
    f64.add
    local.get $w|57
    local.get $z|56
    f64.mul
    local.get $r|58
    f64.mul
    f64.add
    f32.demote_f64
    br $~lib/math/cos_kernf|inlined.8
   end
  else
   block $~lib/math/sin_kernf|inlined.8 (result f32)
    local.get $y
    local.set $x|59
    local.get $x|59
    local.get $x|59
    f64.mul
    local.set $z|60
    local.get $z|60
    local.get $z|60
    f64.mul
    local.set $w|61
    f64.const -1.9839334836096632e-04
    local.get $z|60
    f64.const 2.718311493989822e-06
    f64.mul
    f64.add
    local.set $r|62
    local.get $z|60
    local.get $x|59
    f64.mul
    local.set $s|63
    local.get $x|59
    local.get $s|63
    f64.const -0.16666666641626524
    local.get $z|60
    f64.const 0.008333329385889463
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $s|63
    local.get $w|61
    f64.mul
    local.get $r|62
    f64.mul
    f64.add
    f32.demote_f64
    br $~lib/math/sin_kernf|inlined.8
   end
  end
  local.set $t
  local.get $n
  i32.const 2
  i32.and
  if (result f32)
   local.get $t
   f32.neg
  else
   local.get $t
  end
  return
 )
 (func $assembly/core/fft/fft (param $N i32) (param $ar i32) (param $ai i32)
  (local $i i32)
  (local $j i32)
  (local $k i32)
  (local $L i32)
  (local $M i32)
  (local $TEMP i32)
  (local $LE i32)
  (local $LE1 i32)
  (local $ip i32)
  (local $NV2 i32)
  (local $NM1 i32)
  (local $t f32)
  (local $Ur f32)
  (local $Ui f32)
  (local $Wr f32)
  (local $Wi f32)
  (local $Tr f32)
  (local $Ti f32)
  (local $Ur_old f32)
  local.get $N
  i32.const 1
  i32.shr_s
  local.set $NV2
  local.get $N
  i32.const 1
  i32.sub
  local.set $NM1
  local.get $N
  local.set $TEMP
  i32.const 0
  local.set $M
  loop $while-continue|0
   local.get $TEMP
   i32.const 1
   i32.shr_s
   local.tee $TEMP
   if
    local.get $M
    i32.const 1
    i32.add
    local.set $M
    br $while-continue|0
   end
  end
  i32.const 1
  local.set $j
  i32.const 1
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $NM1
   i32.le_s
   if
    local.get $i
    local.get $j
    i32.lt_s
    if
     local.get $ar
     local.get $j
     i32.const 1
     i32.sub
     call $~lib/staticarray/StaticArray<f32>#__get
     local.set $t
     local.get $ar
     local.get $j
     i32.const 1
     i32.sub
     local.get $ar
     local.get $i
     i32.const 1
     i32.sub
     call $~lib/staticarray/StaticArray<f32>#__get
     call $~lib/staticarray/StaticArray<f32>#__set
     local.get $ar
     local.get $i
     i32.const 1
     i32.sub
     local.get $t
     call $~lib/staticarray/StaticArray<f32>#__set
     local.get $ai
     local.get $j
     i32.const 1
     i32.sub
     call $~lib/staticarray/StaticArray<f32>#__get
     local.set $t
     local.get $ai
     local.get $j
     i32.const 1
     i32.sub
     local.get $ai
     local.get $i
     i32.const 1
     i32.sub
     call $~lib/staticarray/StaticArray<f32>#__get
     call $~lib/staticarray/StaticArray<f32>#__set
     local.get $ai
     local.get $i
     i32.const 1
     i32.sub
     local.get $t
     call $~lib/staticarray/StaticArray<f32>#__set
    end
    local.get $NV2
    local.set $k
    loop $while-continue|2
     local.get $k
     local.get $j
     i32.lt_s
     if
      local.get $j
      local.get $k
      i32.sub
      local.set $j
      local.get $k
      i32.const 2
      i32.div_s
      local.set $k
      br $while-continue|2
     end
    end
    local.get $j
    local.get $k
    i32.add
    local.set $j
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  i32.const 1
  local.set $LE
  i32.const 1
  local.set $L
  loop $for-loop|3
   local.get $L
   local.get $M
   i32.le_s
   if
    local.get $LE
    local.set $LE1
    local.get $LE
    i32.const 2
    i32.mul
    local.set $LE
    f32.const 1
    local.set $Ur
    f32.const 0
    local.set $Ui
    global.get $~lib/math/NativeMathf.PI
    local.get $LE1
    f32.convert_i32_s
    f32.div
    call $~lib/math/NativeMathf.cos
    local.set $Wr
    global.get $~lib/math/NativeMathf.PI
    local.get $LE1
    f32.convert_i32_s
    f32.div
    call $~lib/math/NativeMathf.sin
    f32.neg
    local.set $Wi
    i32.const 1
    local.set $j
    loop $for-loop|4
     local.get $j
     local.get $LE1
     i32.le_s
     if
      local.get $j
      local.set $i
      loop $for-loop|5
       local.get $i
       local.get $N
       i32.le_s
       if
        local.get $i
        local.get $LE1
        i32.add
        local.set $ip
        local.get $ar
        local.get $ip
        i32.const 1
        i32.sub
        call $~lib/staticarray/StaticArray<f32>#__get
        local.get $Ur
        f32.mul
        local.get $ai
        local.get $ip
        i32.const 1
        i32.sub
        call $~lib/staticarray/StaticArray<f32>#__get
        local.get $Ui
        f32.mul
        f32.sub
        local.set $Tr
        local.get $ar
        local.get $ip
        i32.const 1
        i32.sub
        call $~lib/staticarray/StaticArray<f32>#__get
        local.get $Ui
        f32.mul
        local.get $ai
        local.get $ip
        i32.const 1
        i32.sub
        call $~lib/staticarray/StaticArray<f32>#__get
        local.get $Ur
        f32.mul
        f32.add
        local.set $Ti
        local.get $ar
        local.get $ip
        i32.const 1
        i32.sub
        local.get $ar
        local.get $i
        i32.const 1
        i32.sub
        call $~lib/staticarray/StaticArray<f32>#__get
        local.get $Tr
        f32.sub
        call $~lib/staticarray/StaticArray<f32>#__set
        local.get $ai
        local.get $ip
        i32.const 1
        i32.sub
        local.get $ai
        local.get $i
        i32.const 1
        i32.sub
        call $~lib/staticarray/StaticArray<f32>#__get
        local.get $Ti
        f32.sub
        call $~lib/staticarray/StaticArray<f32>#__set
        local.get $ar
        local.get $i
        i32.const 1
        i32.sub
        local.get $ar
        local.get $i
        i32.const 1
        i32.sub
        call $~lib/staticarray/StaticArray<f32>#__get
        local.get $Tr
        f32.add
        call $~lib/staticarray/StaticArray<f32>#__set
        local.get $ai
        local.get $i
        i32.const 1
        i32.sub
        local.get $ai
        local.get $i
        i32.const 1
        i32.sub
        call $~lib/staticarray/StaticArray<f32>#__get
        local.get $Ti
        f32.add
        call $~lib/staticarray/StaticArray<f32>#__set
        local.get $i
        local.get $LE
        i32.add
        local.set $i
        br $for-loop|5
       end
      end
      local.get $Ur
      local.set $Ur_old
      local.get $Ur_old
      local.get $Wr
      f32.mul
      local.get $Ui
      local.get $Wi
      f32.mul
      f32.sub
      local.set $Ur
      local.get $Ur_old
      local.get $Wi
      f32.mul
      local.get $Ui
      local.get $Wr
      f32.mul
      f32.add
      local.set $Ui
      local.get $j
      i32.const 1
      i32.add
      local.set $j
      br $for-loop|4
     end
    end
    local.get $L
    i32.const 1
    i32.add
    local.set $L
    br $for-loop|3
   end
  end
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#makeWavetable (param $this i32) (param $wave i32)
  (local $scale f32)
  (local $max f32)
  (local $i i32)
  (local $x f32)
  (local $temp f32)
  (local $idx i32)
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:tableLength
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:real
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:imag
  call $assembly/core/fft/fft
  f32.const 0
  local.set $max
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $this
   call $assembly/core/antialias-wavetable/AntialiasWavetable#get:tableLength
   i32.lt_u
   if
    block $~lib/math/NativeMathf.abs|inlined.0 (result f32)
     local.get $this
     call $assembly/core/antialias-wavetable/AntialiasWavetable#get:imag
     local.get $i
     call $~lib/staticarray/StaticArray<f32>#__get
     local.set $x
     local.get $x
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.0
    end
    local.set $temp
    local.get $max
    local.get $temp
    f32.lt
    if
     local.get $temp
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  f32.const 1
  local.get $max
  f32.div
  f32.const 0.9990000128746033
  f32.mul
  local.set $scale
  i32.const 0
  local.set $idx
  loop $for-loop|1
   local.get $idx
   local.get $this
   call $assembly/core/antialias-wavetable/AntialiasWavetable#get:tableLength
   i32.lt_u
   if
    local.get $wave
    local.get $idx
    local.get $this
    call $assembly/core/antialias-wavetable/AntialiasWavetable#get:imag
    local.get $idx
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $scale
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $idx
    i32.const 1
    i32.add
    local.set $idx
    br $for-loop|1
   end
  end
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:freqs (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#makeTables (param $this i32) (param $target i32) (param $fn i32)
  (local $topFreq f64)
  (local $i i32)
  (local $harms i32)
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:topFreq
  local.set $topFreq
  i32.const 0
  local.set $i
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:maxHarms
  local.set $harms
  loop $for-loop|0
   local.get $harms
   i32.const 1
   i32.ge_u
   if
    local.get $this
    local.get $harms
    local.get $fn
    call $assembly/core/antialias-wavetable/AntialiasWavetable#defineWaveform
    local.get $this
    local.get $target
    local.get $i
    call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#__get
    call $assembly/core/antialias-wavetable/AntialiasWavetable#makeWavetable
    local.get $this
    call $assembly/core/antialias-wavetable/AntialiasWavetable#get:freqs
    local.get $i
    local.get $topFreq
    f32.demote_f64
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $topFreq
    f64.const 2
    f64.mul
    local.set $topFreq
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    local.get $harms
    i32.const 1
    i32.shr_u
    local.set $harms
    br $for-loop|0
   end
  end
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:ramp (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=56
 )
 (func $assembly/core/antialias-wavetable/Real.ramp (param $real i32) (param $i i32) (param $j i32)
  (local $temp f32)
  f32.const -1
  local.get $i
  f32.convert_i32_u
  f32.div
  local.set $temp
  local.get $real
  local.get $i
  local.get $temp
  f32.neg
  call $~lib/staticarray/StaticArray<f32>#__set
  local.get $real
  local.get $j
  local.get $temp
  call $~lib/staticarray/StaticArray<f32>#__set
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:sqr (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=60
 )
 (func $assembly/core/antialias-wavetable/Real.sqr (param $real i32) (param $i i32) (param $j i32)
  (local $temp f32)
  local.get $i
  i32.const 1
  i32.and
  if (result f32)
   f32.const 1
   local.get $i
   f32.convert_i32_u
   f32.div
  else
   f32.const 0
  end
  local.set $temp
  local.get $real
  local.get $i
  local.get $temp
  f32.neg
  call $~lib/staticarray/StaticArray<f32>#__set
  local.get $real
  local.get $j
  local.get $temp
  call $~lib/staticarray/StaticArray<f32>#__set
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:tri (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=64
 )
 (func $assembly/core/antialias-wavetable/Real.tri (param $real i32) (param $i i32) (param $j i32)
  (local $temp f32)
  local.get $i
  i32.const 1
  i32.and
  if (result f32)
   f32.const 1
   local.get $i
   local.get $i
   i32.mul
   f32.convert_i32_u
   f32.div
   global.get $assembly/core/antialias-wavetable/Real.sign
   f32.neg
   global.set $assembly/core/antialias-wavetable/Real.sign
   global.get $assembly/core/antialias-wavetable/Real.sign
   f32.mul
  else
   f32.const 0
  end
  local.set $temp
  local.get $real
  local.get $i
  local.get $temp
  call $~lib/staticarray/StaticArray<f32>#__set
  local.get $real
  local.get $j
  local.get $temp
  f32.neg
  call $~lib/staticarray/StaticArray<f32>#__set
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#set:tableIndex (param $this i32) (param $tableIndex i32)
  local.get $this
  local.get $tableIndex
  i32.store $0 offset=40
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#constructor (param $this i32) (param $audioRate i32) (result i32)
  (local $topFreq f64)
  (local $maxHarms i32)
  (local $tableLength i32)
  (local $tableMask i32)
  (local $numOfTables i32)
  (local $saw i32)
  (local $ramp i32)
  (local $sqr i32)
  (local $tri i32)
  (local $i i32)
  (local $freqs i32)
  (local $real i32)
  (local $imag i32)
  local.get $this
  i32.eqz
  if
   i32.const 68
   i32.const 12
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:real
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:imag
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:freqs
  local.get $this
  f64.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:topFreq
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:maxHarms
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:numOfTables
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:tableLength
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:tableMask
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:tableIndex
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:stepShift
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:audioRate
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:saw
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:ramp
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:sqr
  local.get $this
  i32.const 0
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:tri
  f64.const 10
  local.set $topFreq
  local.get $audioRate
  f64.convert_i32_u
  f64.const 3
  local.get $topFreq
  f64.mul
  f64.div
  f64.const 0.5
  f64.add
  i32.trunc_sat_f64_u
  local.set $maxHarms
  local.get $maxHarms
  call $assembly/util/nextPowerOfTwo
  i32.const 2
  i32.mul
  global.get $assembly/core/constants/ANTIALIAS_WAVETABLE_OVERSAMPLING
  i32.mul
  local.set $tableLength
  local.get $tableLength
  i32.const 1
  i32.sub
  i32.const 2
  i32.shl
  local.set $tableMask
  local.get $maxHarms
  f64.convert_i32_u
  call $~lib/math/NativeMath.log2
  f64.const 1
  f64.add
  i32.trunc_sat_f64_u
  local.set $numOfTables
  i32.const 0
  local.get $numOfTables
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#constructor
  local.set $saw
  i32.const 0
  local.get $numOfTables
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#constructor
  local.set $ramp
  i32.const 0
  local.get $numOfTables
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#constructor
  local.set $sqr
  i32.const 0
  local.get $numOfTables
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#constructor
  local.set $tri
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $numOfTables
   i32.lt_u
   if
    local.get $saw
    local.get $i
    i32.const 0
    local.get $tableLength
    call $~lib/staticarray/StaticArray<f32>#constructor
    call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#__set
    local.get $ramp
    local.get $i
    i32.const 0
    local.get $tableLength
    call $~lib/staticarray/StaticArray<f32>#constructor
    call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#__set
    local.get $sqr
    local.get $i
    i32.const 0
    local.get $tableLength
    call $~lib/staticarray/StaticArray<f32>#constructor
    call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#__set
    local.get $tri
    local.get $i
    i32.const 0
    local.get $tableLength
    call $~lib/staticarray/StaticArray<f32>#constructor
    call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#__set
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.get $numOfTables
  call $~lib/staticarray/StaticArray<f32>#constructor
  local.set $freqs
  i32.const 0
  local.get $tableLength
  call $~lib/staticarray/StaticArray<f32>#constructor
  local.set $real
  i32.const 0
  local.get $tableLength
  call $~lib/staticarray/StaticArray<f32>#constructor
  local.set $imag
  local.get $this
  local.get $real
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:real
  local.get $this
  local.get $imag
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:imag
  local.get $this
  local.get $freqs
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:freqs
  local.get $this
  local.get $saw
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:saw
  local.get $this
  local.get $ramp
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:ramp
  local.get $this
  local.get $sqr
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:sqr
  local.get $this
  local.get $tri
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:tri
  local.get $this
  local.get $audioRate
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:audioRate
  local.get $this
  local.get $topFreq
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:topFreq
  local.get $this
  local.get $maxHarms
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:maxHarms
  local.get $this
  local.get $numOfTables
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:numOfTables
  local.get $this
  local.get $tableLength
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:tableLength
  local.get $this
  local.get $tableMask
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:tableMask
  local.get $this
  global.get $assembly/core/constants/WAVETABLE_SIZE
  f64.convert_i32_u
  call $~lib/math/NativeMath.log2
  i32.trunc_sat_f64_s
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:tableLength
  f64.convert_i32_u
  call $~lib/math/NativeMath.log2
  i32.trunc_sat_f64_s
  i32.sub
  call $assembly/core/antialias-wavetable/AntialiasWavetable#set:stepShift
  local.get $this
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:saw
  i32.const 1051136
  call $assembly/core/antialias-wavetable/AntialiasWavetable#makeTables
  local.get $this
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:ramp
  i32.const 1051344
  call $assembly/core/antialias-wavetable/AntialiasWavetable#makeTables
  local.get $this
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:sqr
  i32.const 1051376
  call $assembly/core/antialias-wavetable/AntialiasWavetable#makeTables
  local.get $this
  local.get $this
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:tri
  i32.const 1051408
  call $assembly/core/antialias-wavetable/AntialiasWavetable#makeTables
  local.get $this
 )
 (func $assembly/core/wavetable/Wavetable#set:antialias (param $this i32) (param $antialias i32)
  local.get $this
  local.get $antialias
  i32.store $0 offset=28
  local.get $this
  local.get $antialias
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/wavetable/Wavetable#get:size (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=36
 )
 (func $assembly/core/wavetable/Wavetable#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/core/wavetable/Wavetable#get:phases (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/staticarray/StaticArray<u32>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $~lib/staticarray/StaticArray<u32>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 0
  drop
 )
 (func $~lib/staticarray/StaticArray<u32>#__set (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  call $~lib/staticarray/StaticArray<u32>#get:length
  i32.ge_u
  if
   i32.const 1051072
   i32.const 1048816
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  local.get $value
  call $~lib/staticarray/StaticArray<u32>#__uset
 )
 (func $assembly/core/wavetable/Wavetable#get:sine (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/math/pio2_large_quot (param $x f64) (param $u i64) (result i32)
  (local $magnitude i64)
  (local $offset i64)
  (local $shift i64)
  (local $tblPtr i32)
  (local $s0 i64)
  (local $s1 i64)
  (local $s2 i64)
  (local $b0 i64)
  (local $b1 i64)
  (local $b2 i64)
  (local $rshift i64)
  (local $b3 i64)
  (local $significand i64)
  (local $u|15 i64)
  (local $v i64)
  (local $u1 i64)
  (local $v1 i64)
  (local $w0 i64)
  (local $w1 i64)
  (local $t i64)
  (local $blo i64)
  (local $bhi i64)
  (local $ahi i64)
  (local $clo i64)
  (local $plo i64)
  (local $phi i64)
  (local $rlo i64)
  (local $rhi i64)
  (local $slo i64)
  (local $shi i64)
  (local $q i64)
  (local $q0 i64)
  (local $q1 i64)
  (local $shift|35 i64)
  (local $u|36 i64)
  (local $v|37 i64)
  (local $u1|38 i64)
  (local $v1|39 i64)
  (local $w0|40 i64)
  (local $w1|41 i64)
  (local $t|42 i64)
  (local $lo i64)
  (local $hi i64)
  (local $ahi|45 i64)
  (local $alo i64)
  (local $blo|47 i64)
  (local $shifter i64)
  (local $signbit i64)
  (local $coeff f64)
  local.get $u
  i64.const 9223372036854775807
  i64.and
  local.set $magnitude
  local.get $magnitude
  i64.const 52
  i64.shr_s
  i64.const 1045
  i64.sub
  local.set $offset
  local.get $offset
  i64.const 63
  i64.and
  local.set $shift
  i32.const 1051424
  local.get $offset
  i64.const 6
  i64.shr_s
  i32.wrap_i64
  i32.const 3
  i32.shl
  i32.add
  local.set $tblPtr
  local.get $tblPtr
  i64.load $0
  local.set $b0
  local.get $tblPtr
  i64.load $0 offset=8
  local.set $b1
  local.get $tblPtr
  i64.load $0 offset=16
  local.set $b2
  local.get $shift
  i64.const 0
  i64.ne
  if
   i32.const 64
   i64.extend_i32_s
   local.get $shift
   i64.sub
   local.set $rshift
   local.get $tblPtr
   i64.load $0 offset=24
   local.set $b3
   local.get $b1
   local.get $rshift
   i64.shr_u
   local.get $b0
   local.get $shift
   i64.shl
   i64.or
   local.set $s0
   local.get $b2
   local.get $rshift
   i64.shr_u
   local.get $b1
   local.get $shift
   i64.shl
   i64.or
   local.set $s1
   local.get $b3
   local.get $rshift
   i64.shr_u
   local.get $b2
   local.get $shift
   i64.shl
   i64.or
   local.set $s2
  else
   local.get $b0
   local.set $s0
   local.get $b1
   local.set $s1
   local.get $b2
   local.set $s2
  end
  local.get $u
  i64.const 4503599627370495
  i64.and
  i64.const 4503599627370496
  i64.or
  local.set $significand
  block $~lib/math/umuldi|inlined.0 (result i64)
   local.get $s1
   local.set $u|15
   local.get $significand
   local.set $v
   local.get $u|15
   i64.const 4294967295
   i64.and
   local.set $u1
   local.get $v
   i64.const 4294967295
   i64.and
   local.set $v1
   local.get $u|15
   i64.const 32
   i64.shr_u
   local.set $u|15
   local.get $v
   i64.const 32
   i64.shr_u
   local.set $v
   local.get $u1
   local.get $v1
   i64.mul
   local.set $t
   local.get $t
   i64.const 4294967295
   i64.and
   local.set $w0
   local.get $u|15
   local.get $v1
   i64.mul
   local.get $t
   i64.const 32
   i64.shr_u
   i64.add
   local.set $t
   local.get $t
   i64.const 32
   i64.shr_u
   local.set $w1
   local.get $u1
   local.get $v
   i64.mul
   local.get $t
   i64.const 4294967295
   i64.and
   i64.add
   local.set $t
   local.get $u|15
   local.get $v
   i64.mul
   local.get $w1
   i64.add
   local.get $t
   i64.const 32
   i64.shr_u
   i64.add
   global.set $~lib/math/res128_hi
   local.get $t
   i64.const 32
   i64.shl
   local.get $w0
   i64.add
   br $~lib/math/umuldi|inlined.0
  end
  local.set $blo
  global.get $~lib/math/res128_hi
  local.set $bhi
  local.get $s0
  local.get $significand
  i64.mul
  local.set $ahi
  local.get $s2
  i64.const 32
  i64.shr_u
  local.get $significand
  i64.const 32
  i64.shr_s
  i64.mul
  local.set $clo
  local.get $blo
  local.get $clo
  i64.add
  local.set $plo
  local.get $ahi
  local.get $bhi
  i64.add
  local.get $plo
  local.get $clo
  i64.lt_u
  i64.extend_i32_u
  i64.add
  local.set $phi
  local.get $plo
  i64.const 2
  i64.shl
  local.set $rlo
  local.get $phi
  i64.const 2
  i64.shl
  local.get $plo
  i64.const 62
  i64.shr_u
  i64.or
  local.set $rhi
  local.get $rhi
  i64.const 63
  i64.shr_s
  local.set $slo
  local.get $slo
  i64.const 1
  i64.shr_s
  local.set $shi
  local.get $phi
  i64.const 62
  i64.shr_s
  local.get $slo
  i64.sub
  local.set $q
  i64.const 4372995238176751616
  block $~lib/math/pio2_right|inlined.0 (result i64)
   local.get $rlo
   local.get $slo
   i64.xor
   local.set $q0
   local.get $rhi
   local.get $shi
   i64.xor
   local.set $q1
   local.get $q1
   i64.clz
   local.set $shift|35
   local.get $q1
   local.get $shift|35
   i64.shl
   local.get $q0
   i64.const 64
   local.get $shift|35
   i64.sub
   i64.shr_u
   i64.or
   local.set $q1
   local.get $q0
   local.get $shift|35
   i64.shl
   local.set $q0
   block $~lib/math/umuldi|inlined.1 (result i64)
    i64.const -3958705157555305932
    local.set $u|36
    local.get $q1
    local.set $v|37
    local.get $u|36
    i64.const 4294967295
    i64.and
    local.set $u1|38
    local.get $v|37
    i64.const 4294967295
    i64.and
    local.set $v1|39
    local.get $u|36
    i64.const 32
    i64.shr_u
    local.set $u|36
    local.get $v|37
    i64.const 32
    i64.shr_u
    local.set $v|37
    local.get $u1|38
    local.get $v1|39
    i64.mul
    local.set $t|42
    local.get $t|42
    i64.const 4294967295
    i64.and
    local.set $w0|40
    local.get $u|36
    local.get $v1|39
    i64.mul
    local.get $t|42
    i64.const 32
    i64.shr_u
    i64.add
    local.set $t|42
    local.get $t|42
    i64.const 32
    i64.shr_u
    local.set $w1|41
    local.get $u1|38
    local.get $v|37
    i64.mul
    local.get $t|42
    i64.const 4294967295
    i64.and
    i64.add
    local.set $t|42
    local.get $u|36
    local.get $v|37
    i64.mul
    local.get $w1|41
    i64.add
    local.get $t|42
    i64.const 32
    i64.shr_u
    i64.add
    global.set $~lib/math/res128_hi
    local.get $t|42
    i64.const 32
    i64.shl
    local.get $w0|40
    i64.add
    br $~lib/math/umuldi|inlined.1
   end
   local.set $lo
   global.get $~lib/math/res128_hi
   local.set $hi
   local.get $hi
   i64.const 11
   i64.shr_u
   local.set $ahi|45
   local.get $lo
   i64.const 11
   i64.shr_u
   local.get $hi
   i64.const 53
   i64.shl
   i64.or
   local.set $alo
   f64.const 2.6469779601696886e-23
   i64.const -4267615245585081135
   f64.convert_i64_u
   f64.mul
   local.get $q1
   f64.convert_i64_u
   f64.mul
   f64.const 2.6469779601696886e-23
   i64.const -3958705157555305932
   f64.convert_i64_u
   f64.mul
   local.get $q0
   f64.convert_i64_u
   f64.mul
   f64.add
   i64.trunc_sat_f64_u
   local.set $blo|47
   local.get $ahi|45
   local.get $lo
   local.get $blo|47
   i64.lt_u
   i64.extend_i32_u
   i64.add
   f64.convert_i64_u
   global.set $~lib/math/rempio2_y0
   f64.const 5.421010862427522e-20
   local.get $alo
   local.get $blo|47
   i64.add
   f64.convert_i64_u
   f64.mul
   global.set $~lib/math/rempio2_y1
   local.get $shift|35
   br $~lib/math/pio2_right|inlined.0
  end
  i64.const 52
  i64.shl
  i64.sub
  local.set $shifter
  local.get $u
  local.get $rhi
  i64.xor
  i64.const -9223372036854775808
  i64.and
  local.set $signbit
  local.get $shifter
  local.get $signbit
  i64.or
  f64.reinterpret_i64
  local.set $coeff
  global.get $~lib/math/rempio2_y0
  local.get $coeff
  f64.mul
  global.set $~lib/math/rempio2_y0
  global.get $~lib/math/rempio2_y1
  local.get $coeff
  f64.mul
  global.set $~lib/math/rempio2_y1
  local.get $q
  i32.wrap_i64
  return
 )
 (func $~lib/math/NativeMath.sin (param $x f64) (result f64)
  (local $u i64)
  (local $ux i32)
  (local $sign i32)
  (local $x|4 f64)
  (local $y f64)
  (local $iy i32)
  (local $z f64)
  (local $w f64)
  (local $r f64)
  (local $v f64)
  (local $x|11 f64)
  (local $u|12 i64)
  (local $sign|13 i32)
  (local $ix i32)
  (local $q i32)
  (local $z|16 f64)
  (local $y0 f64)
  (local $y1 f64)
  (local $q|19 f64)
  (local $r|20 f64)
  (local $w|21 f64)
  (local $j i32)
  (local $y0|23 f64)
  (local $hi i32)
  (local $i i32)
  (local $t f64)
  (local $t|27 f64)
  (local $y1|28 f64)
  (local $q|29 i32)
  (local $n i32)
  (local $y0|31 f64)
  (local $y1|32 f64)
  (local $x|33 f64)
  (local $y|34 f64)
  (local $z|35 f64)
  (local $w|36 f64)
  (local $r|37 f64)
  (local $hz f64)
  (local $x|39 f64)
  (local $y|40 f64)
  (local $iy|41 i32)
  (local $z|42 f64)
  (local $w|43 f64)
  (local $r|44 f64)
  (local $v|45 f64)
  local.get $x
  i64.reinterpret_f64
  local.set $u
  local.get $u
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $ux
  local.get $ux
  i32.const 31
  i32.shr_u
  local.set $sign
  local.get $ux
  i32.const 2147483647
  i32.and
  local.set $ux
  local.get $ux
  i32.const 1072243195
  i32.le_u
  if
   local.get $ux
   i32.const 1045430272
   i32.lt_u
   if
    local.get $x
    return
   end
   block $~lib/math/sin_kern|inlined.0 (result f64)
    local.get $x
    local.set $x|4
    f64.const 0
    local.set $y
    i32.const 0
    local.set $iy
    local.get $x|4
    local.get $x|4
    f64.mul
    local.set $z
    local.get $z
    local.get $z
    f64.mul
    local.set $w
    f64.const 0.00833333333332249
    local.get $z
    f64.const -1.984126982985795e-04
    local.get $z
    f64.const 2.7557313707070068e-06
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $z
    local.get $w
    f64.mul
    f64.const -2.5050760253406863e-08
    local.get $z
    f64.const 1.58969099521155e-10
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $r
    local.get $z
    local.get $x|4
    f64.mul
    local.set $v
    local.get $iy
    i32.eqz
    if
     local.get $x|4
     local.get $v
     f64.const -0.16666666666666632
     local.get $z
     local.get $r
     f64.mul
     f64.add
     f64.mul
     f64.add
     br $~lib/math/sin_kern|inlined.0
    else
     local.get $x|4
     local.get $z
     f64.const 0.5
     local.get $y
     f64.mul
     local.get $v
     local.get $r
     f64.mul
     f64.sub
     f64.mul
     local.get $y
     f64.sub
     local.get $v
     f64.const -0.16666666666666632
     f64.mul
     f64.sub
     f64.sub
     br $~lib/math/sin_kern|inlined.0
    end
    unreachable
   end
   return
  end
  local.get $ux
  i32.const 2146435072
  i32.ge_u
  if
   local.get $x
   local.get $x
   f64.sub
   return
  end
  block $~lib/math/rempio2|inlined.0 (result i32)
   local.get $x
   local.set $x|11
   local.get $u
   local.set $u|12
   local.get $sign
   local.set $sign|13
   local.get $u|12
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const 2147483647
   i32.and
   local.set $ix
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   local.get $ix
   i32.const 1073928572
   i32.lt_u
   if
    i32.const 1
    local.set $q
    local.get $sign|13
    i32.eqz
    if
     local.get $x|11
     f64.const 1.5707963267341256
     f64.sub
     local.set $z|16
     local.get $ix
     i32.const 1073291771
     i32.ne
     if
      local.get $z|16
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $y0
      local.get $z|16
      local.get $y0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $y1
     else
      local.get $z|16
      f64.const 6.077100506303966e-11
      f64.sub
      local.set $z|16
      local.get $z|16
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $y0
      local.get $z|16
      local.get $y0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $y1
     end
    else
     local.get $x|11
     f64.const 1.5707963267341256
     f64.add
     local.set $z|16
     local.get $ix
     i32.const 1073291771
     i32.ne
     if
      local.get $z|16
      f64.const 6.077100506506192e-11
      f64.add
      local.set $y0
      local.get $z|16
      local.get $y0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.add
      local.set $y1
     else
      local.get $z|16
      f64.const 6.077100506303966e-11
      f64.add
      local.set $z|16
      local.get $z|16
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $y0
      local.get $z|16
      local.get $y0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $y1
     end
     i32.const -1
     local.set $q
    end
    local.get $y0
    global.set $~lib/math/rempio2_y0
    local.get $y1
    global.set $~lib/math/rempio2_y1
    local.get $q
    br $~lib/math/rempio2|inlined.0
   end
   local.get $ix
   i32.const 1094263291
   i32.lt_u
   if
    local.get $x|11
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.set $q|19
    local.get $x|11
    local.get $q|19
    f64.const 1.5707963267341256
    f64.mul
    f64.sub
    local.set $r|20
    local.get $q|19
    f64.const 6.077100506506192e-11
    f64.mul
    local.set $w|21
    local.get $ix
    i32.const 20
    i32.shr_u
    local.set $j
    local.get $r|20
    local.get $w|21
    f64.sub
    local.set $y0|23
    local.get $y0|23
    i64.reinterpret_f64
    i64.const 32
    i64.shr_u
    i32.wrap_i64
    local.set $hi
    local.get $j
    local.get $hi
    i32.const 20
    i32.shr_u
    i32.const 2047
    i32.and
    i32.sub
    local.set $i
    local.get $i
    i32.const 16
    i32.gt_u
    if
     local.get $r|20
     local.set $t
     local.get $q|19
     f64.const 6.077100506303966e-11
     f64.mul
     local.set $w|21
     local.get $t
     local.get $w|21
     f64.sub
     local.set $r|20
     local.get $q|19
     f64.const 2.0222662487959506e-21
     f64.mul
     local.get $t
     local.get $r|20
     f64.sub
     local.get $w|21
     f64.sub
     f64.sub
     local.set $w|21
     local.get $r|20
     local.get $w|21
     f64.sub
     local.set $y0|23
     local.get $y0|23
     i64.reinterpret_f64
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     local.set $hi
     local.get $j
     local.get $hi
     i32.const 20
     i32.shr_u
     i32.const 2047
     i32.and
     i32.sub
     local.set $i
     local.get $i
     i32.const 49
     i32.gt_u
     if
      local.get $r|20
      local.set $t|27
      local.get $q|19
      f64.const 2.0222662487111665e-21
      f64.mul
      local.set $w|21
      local.get $t|27
      local.get $w|21
      f64.sub
      local.set $r|20
      local.get $q|19
      f64.const 8.4784276603689e-32
      f64.mul
      local.get $t|27
      local.get $r|20
      f64.sub
      local.get $w|21
      f64.sub
      f64.sub
      local.set $w|21
      local.get $r|20
      local.get $w|21
      f64.sub
      local.set $y0|23
     end
    end
    local.get $r|20
    local.get $y0|23
    f64.sub
    local.get $w|21
    f64.sub
    local.set $y1|28
    local.get $y0|23
    global.set $~lib/math/rempio2_y0
    local.get $y1|28
    global.set $~lib/math/rempio2_y1
    local.get $q|19
    i32.trunc_sat_f64_s
    br $~lib/math/rempio2|inlined.0
   end
   local.get $x|11
   local.get $u|12
   call $~lib/math/pio2_large_quot
   local.set $q|29
   i32.const 0
   local.get $q|29
   i32.sub
   local.get $q|29
   local.get $sign|13
   select
   br $~lib/math/rempio2|inlined.0
  end
  local.set $n
  global.get $~lib/math/rempio2_y0
  local.set $y0|31
  global.get $~lib/math/rempio2_y1
  local.set $y1|32
  local.get $n
  i32.const 1
  i32.and
  if (result f64)
   block $~lib/math/cos_kern|inlined.0 (result f64)
    local.get $y0|31
    local.set $x|33
    local.get $y1|32
    local.set $y|34
    local.get $x|33
    local.get $x|33
    f64.mul
    local.set $z|35
    local.get $z|35
    local.get $z|35
    f64.mul
    local.set $w|36
    local.get $z|35
    f64.const 0.0416666666666666
    local.get $z|35
    f64.const -0.001388888888887411
    local.get $z|35
    f64.const 2.480158728947673e-05
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    local.get $w|36
    local.get $w|36
    f64.mul
    f64.const -2.7557314351390663e-07
    local.get $z|35
    f64.const 2.087572321298175e-09
    local.get $z|35
    f64.const -1.1359647557788195e-11
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $r|37
    f64.const 0.5
    local.get $z|35
    f64.mul
    local.set $hz
    f64.const 1
    local.get $hz
    f64.sub
    local.set $w|36
    local.get $w|36
    f64.const 1
    local.get $w|36
    f64.sub
    local.get $hz
    f64.sub
    local.get $z|35
    local.get $r|37
    f64.mul
    local.get $x|33
    local.get $y|34
    f64.mul
    f64.sub
    f64.add
    f64.add
    br $~lib/math/cos_kern|inlined.0
   end
  else
   block $~lib/math/sin_kern|inlined.1 (result f64)
    local.get $y0|31
    local.set $x|39
    local.get $y1|32
    local.set $y|40
    i32.const 1
    local.set $iy|41
    local.get $x|39
    local.get $x|39
    f64.mul
    local.set $z|42
    local.get $z|42
    local.get $z|42
    f64.mul
    local.set $w|43
    f64.const 0.00833333333332249
    local.get $z|42
    f64.const -1.984126982985795e-04
    local.get $z|42
    f64.const 2.7557313707070068e-06
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $z|42
    local.get $w|43
    f64.mul
    f64.const -2.5050760253406863e-08
    local.get $z|42
    f64.const 1.58969099521155e-10
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $r|44
    local.get $z|42
    local.get $x|39
    f64.mul
    local.set $v|45
    local.get $iy|41
    i32.eqz
    if
     local.get $x|39
     local.get $v|45
     f64.const -0.16666666666666632
     local.get $z|42
     local.get $r|44
     f64.mul
     f64.add
     f64.mul
     f64.add
     br $~lib/math/sin_kern|inlined.1
    else
     local.get $x|39
     local.get $z|42
     f64.const 0.5
     local.get $y|40
     f64.mul
     local.get $v|45
     local.get $r|44
     f64.mul
     f64.sub
     f64.mul
     local.get $y|40
     f64.sub
     local.get $v|45
     f64.const -0.16666666666666632
     f64.mul
     f64.sub
     f64.sub
     br $~lib/math/sin_kern|inlined.1
    end
    unreachable
   end
  end
  local.set $x
  local.get $n
  i32.const 2
  i32.and
  if (result f64)
   local.get $x
   f64.neg
  else
   local.get $x
  end
  return
 )
 (func $assembly/util/phaseToRadians (param $phase i32) (result f64)
  local.get $phase
  f64.convert_i32_u
  f64.const 1.462918120317176e-09
  f64.mul
  return
 )
 (func $~lib/staticarray/StaticArray<u32>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  call $~lib/staticarray/StaticArray<u32>#get:length
  i32.ge_u
  if
   i32.const 1051072
   i32.const 1048816
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
  return
 )
 (func $assembly/core/wavetable/Wavetable#fill (param $this i32) (param $table i32) (param $fn i32) (param $phaser i32)
  (local $i i32)
  (local $phase i32)
  i32.const 0
  local.set $i
  i32.const 0
  local.set $phase
  loop $for-loop|0
   local.get $i
   local.get $this
   call $assembly/core/wavetable/Wavetable#get:length
   i32.lt_u
   if
    local.get $this
    call $assembly/core/wavetable/Wavetable#get:phases
    local.get $i
    call $~lib/staticarray/StaticArray<u32>#__get
    local.set $phase
    local.get $table
    local.get $i
    local.get $phase
    i32.const 1
    global.set $~argumentsLength
    local.get $phaser
    i32.load $0
    call_indirect $0 (type $i32_=>_f64)
    i32.const 1
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $f64_=>_f64)
    f32.demote_f64
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/core/wavetable/Wavetable#get:cos (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $~lib/math/NativeMath.cos (param $x f64) (result f64)
  (local $u i64)
  (local $ux i32)
  (local $sign i32)
  (local $x|4 f64)
  (local $y f64)
  (local $z f64)
  (local $w f64)
  (local $r f64)
  (local $hz f64)
  (local $x|10 f64)
  (local $u|11 i64)
  (local $sign|12 i32)
  (local $ix i32)
  (local $q i32)
  (local $z|15 f64)
  (local $y0 f64)
  (local $y1 f64)
  (local $q|18 f64)
  (local $r|19 f64)
  (local $w|20 f64)
  (local $j i32)
  (local $y0|22 f64)
  (local $hi i32)
  (local $i i32)
  (local $t f64)
  (local $t|26 f64)
  (local $y1|27 f64)
  (local $q|28 i32)
  (local $n i32)
  (local $y0|30 f64)
  (local $y1|31 f64)
  (local $x|32 f64)
  (local $y|33 f64)
  (local $iy i32)
  (local $z|35 f64)
  (local $w|36 f64)
  (local $r|37 f64)
  (local $v f64)
  (local $x|39 f64)
  (local $y|40 f64)
  (local $z|41 f64)
  (local $w|42 f64)
  (local $r|43 f64)
  (local $hz|44 f64)
  local.get $x
  i64.reinterpret_f64
  local.set $u
  local.get $u
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $ux
  local.get $ux
  i32.const 31
  i32.shr_u
  local.set $sign
  local.get $ux
  i32.const 2147483647
  i32.and
  local.set $ux
  local.get $ux
  i32.const 1072243195
  i32.le_u
  if
   local.get $ux
   i32.const 1044816030
   i32.lt_u
   if
    f64.const 1
    return
   end
   block $~lib/math/cos_kern|inlined.1 (result f64)
    local.get $x
    local.set $x|4
    f64.const 0
    local.set $y
    local.get $x|4
    local.get $x|4
    f64.mul
    local.set $z
    local.get $z
    local.get $z
    f64.mul
    local.set $w
    local.get $z
    f64.const 0.0416666666666666
    local.get $z
    f64.const -0.001388888888887411
    local.get $z
    f64.const 2.480158728947673e-05
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    local.get $w
    local.get $w
    f64.mul
    f64.const -2.7557314351390663e-07
    local.get $z
    f64.const 2.087572321298175e-09
    local.get $z
    f64.const -1.1359647557788195e-11
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $r
    f64.const 0.5
    local.get $z
    f64.mul
    local.set $hz
    f64.const 1
    local.get $hz
    f64.sub
    local.set $w
    local.get $w
    f64.const 1
    local.get $w
    f64.sub
    local.get $hz
    f64.sub
    local.get $z
    local.get $r
    f64.mul
    local.get $x|4
    local.get $y
    f64.mul
    f64.sub
    f64.add
    f64.add
    br $~lib/math/cos_kern|inlined.1
   end
   return
  end
  local.get $ux
  i32.const 2146435072
  i32.ge_u
  if
   local.get $x
   local.get $x
   f64.sub
   return
  end
  block $~lib/math/rempio2|inlined.1 (result i32)
   local.get $x
   local.set $x|10
   local.get $u
   local.set $u|11
   local.get $sign
   local.set $sign|12
   local.get $u|11
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const 2147483647
   i32.and
   local.set $ix
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   local.get $ix
   i32.const 1073928572
   i32.lt_u
   if
    i32.const 1
    local.set $q
    local.get $sign|12
    i32.eqz
    if
     local.get $x|10
     f64.const 1.5707963267341256
     f64.sub
     local.set $z|15
     local.get $ix
     i32.const 1073291771
     i32.ne
     if
      local.get $z|15
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $y0
      local.get $z|15
      local.get $y0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $y1
     else
      local.get $z|15
      f64.const 6.077100506303966e-11
      f64.sub
      local.set $z|15
      local.get $z|15
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $y0
      local.get $z|15
      local.get $y0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $y1
     end
    else
     local.get $x|10
     f64.const 1.5707963267341256
     f64.add
     local.set $z|15
     local.get $ix
     i32.const 1073291771
     i32.ne
     if
      local.get $z|15
      f64.const 6.077100506506192e-11
      f64.add
      local.set $y0
      local.get $z|15
      local.get $y0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.add
      local.set $y1
     else
      local.get $z|15
      f64.const 6.077100506303966e-11
      f64.add
      local.set $z|15
      local.get $z|15
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $y0
      local.get $z|15
      local.get $y0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $y1
     end
     i32.const -1
     local.set $q
    end
    local.get $y0
    global.set $~lib/math/rempio2_y0
    local.get $y1
    global.set $~lib/math/rempio2_y1
    local.get $q
    br $~lib/math/rempio2|inlined.1
   end
   local.get $ix
   i32.const 1094263291
   i32.lt_u
   if
    local.get $x|10
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.set $q|18
    local.get $x|10
    local.get $q|18
    f64.const 1.5707963267341256
    f64.mul
    f64.sub
    local.set $r|19
    local.get $q|18
    f64.const 6.077100506506192e-11
    f64.mul
    local.set $w|20
    local.get $ix
    i32.const 20
    i32.shr_u
    local.set $j
    local.get $r|19
    local.get $w|20
    f64.sub
    local.set $y0|22
    local.get $y0|22
    i64.reinterpret_f64
    i64.const 32
    i64.shr_u
    i32.wrap_i64
    local.set $hi
    local.get $j
    local.get $hi
    i32.const 20
    i32.shr_u
    i32.const 2047
    i32.and
    i32.sub
    local.set $i
    local.get $i
    i32.const 16
    i32.gt_u
    if
     local.get $r|19
     local.set $t
     local.get $q|18
     f64.const 6.077100506303966e-11
     f64.mul
     local.set $w|20
     local.get $t
     local.get $w|20
     f64.sub
     local.set $r|19
     local.get $q|18
     f64.const 2.0222662487959506e-21
     f64.mul
     local.get $t
     local.get $r|19
     f64.sub
     local.get $w|20
     f64.sub
     f64.sub
     local.set $w|20
     local.get $r|19
     local.get $w|20
     f64.sub
     local.set $y0|22
     local.get $y0|22
     i64.reinterpret_f64
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     local.set $hi
     local.get $j
     local.get $hi
     i32.const 20
     i32.shr_u
     i32.const 2047
     i32.and
     i32.sub
     local.set $i
     local.get $i
     i32.const 49
     i32.gt_u
     if
      local.get $r|19
      local.set $t|26
      local.get $q|18
      f64.const 2.0222662487111665e-21
      f64.mul
      local.set $w|20
      local.get $t|26
      local.get $w|20
      f64.sub
      local.set $r|19
      local.get $q|18
      f64.const 8.4784276603689e-32
      f64.mul
      local.get $t|26
      local.get $r|19
      f64.sub
      local.get $w|20
      f64.sub
      f64.sub
      local.set $w|20
      local.get $r|19
      local.get $w|20
      f64.sub
      local.set $y0|22
     end
    end
    local.get $r|19
    local.get $y0|22
    f64.sub
    local.get $w|20
    f64.sub
    local.set $y1|27
    local.get $y0|22
    global.set $~lib/math/rempio2_y0
    local.get $y1|27
    global.set $~lib/math/rempio2_y1
    local.get $q|18
    i32.trunc_sat_f64_s
    br $~lib/math/rempio2|inlined.1
   end
   local.get $x|10
   local.get $u|11
   call $~lib/math/pio2_large_quot
   local.set $q|28
   i32.const 0
   local.get $q|28
   i32.sub
   local.get $q|28
   local.get $sign|12
   select
   br $~lib/math/rempio2|inlined.1
  end
  local.set $n
  global.get $~lib/math/rempio2_y0
  local.set $y0|30
  global.get $~lib/math/rempio2_y1
  local.set $y1|31
  local.get $n
  i32.const 1
  i32.and
  if (result f64)
   block $~lib/math/sin_kern|inlined.2 (result f64)
    local.get $y0|30
    local.set $x|32
    local.get $y1|31
    local.set $y|33
    i32.const 1
    local.set $iy
    local.get $x|32
    local.get $x|32
    f64.mul
    local.set $z|35
    local.get $z|35
    local.get $z|35
    f64.mul
    local.set $w|36
    f64.const 0.00833333333332249
    local.get $z|35
    f64.const -1.984126982985795e-04
    local.get $z|35
    f64.const 2.7557313707070068e-06
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $z|35
    local.get $w|36
    f64.mul
    f64.const -2.5050760253406863e-08
    local.get $z|35
    f64.const 1.58969099521155e-10
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $r|37
    local.get $z|35
    local.get $x|32
    f64.mul
    local.set $v
    local.get $iy
    i32.eqz
    if
     local.get $x|32
     local.get $v
     f64.const -0.16666666666666632
     local.get $z|35
     local.get $r|37
     f64.mul
     f64.add
     f64.mul
     f64.add
     br $~lib/math/sin_kern|inlined.2
    else
     local.get $x|32
     local.get $z|35
     f64.const 0.5
     local.get $y|33
     f64.mul
     local.get $v
     local.get $r|37
     f64.mul
     f64.sub
     f64.mul
     local.get $y|33
     f64.sub
     local.get $v
     f64.const -0.16666666666666632
     f64.mul
     f64.sub
     f64.sub
     br $~lib/math/sin_kern|inlined.2
    end
    unreachable
   end
  else
   block $~lib/math/cos_kern|inlined.2 (result f64)
    local.get $y0|30
    local.set $x|39
    local.get $y1|31
    local.set $y|40
    local.get $x|39
    local.get $x|39
    f64.mul
    local.set $z|41
    local.get $z|41
    local.get $z|41
    f64.mul
    local.set $w|42
    local.get $z|41
    f64.const 0.0416666666666666
    local.get $z|41
    f64.const -0.001388888888887411
    local.get $z|41
    f64.const 2.480158728947673e-05
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    local.get $w|42
    local.get $w|42
    f64.mul
    f64.const -2.7557314351390663e-07
    local.get $z|41
    f64.const 2.087572321298175e-09
    local.get $z|41
    f64.const -1.1359647557788195e-11
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $r|43
    f64.const 0.5
    local.get $z|41
    f64.mul
    local.set $hz|44
    f64.const 1
    local.get $hz|44
    f64.sub
    local.set $w|42
    local.get $w|42
    f64.const 1
    local.get $w|42
    f64.sub
    local.get $hz|44
    f64.sub
    local.get $z|41
    local.get $r|43
    f64.mul
    local.get $x|39
    local.get $y|40
    f64.mul
    f64.sub
    f64.add
    f64.add
    br $~lib/math/cos_kern|inlined.2
   end
  end
  local.set $x
  local.get $n
  i32.const 1
  i32.add
  i32.const 2
  i32.and
  if (result f64)
   local.get $x
   f64.neg
  else
   local.get $x
  end
  return
 )
 (func $assembly/core/wavetable/Wavetable#get:exp (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $~lib/math/NativeMath.exp (param $x f64) (result f64)
  (local $x|1 f64)
  (local $ux i64)
  (local $abstop i32)
  (local $z f64)
  (local $kd f64)
  (local $ki i64)
  (local $r f64)
  (local $idx i32)
  (local $top i64)
  (local $tail f64)
  (local $sbits i64)
  (local $r2 f64)
  (local $tmp f64)
  (local $tmp|14 f64)
  (local $sbits|15 i64)
  (local $ki|16 i64)
  (local $scale f64)
  (local $y f64)
  (local $one f64)
  (local $lo f64)
  (local $hi f64)
  (local $scale|22 f64)
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  block $~lib/util/math/exp_lut|inlined.0 (result f64)
   local.get $x
   local.set $x|1
   local.get $x|1
   i64.reinterpret_f64
   local.set $ux
   local.get $ux
   i64.const 52
   i64.shr_u
   i32.wrap_i64
   i32.const 2047
   i32.and
   local.set $abstop
   local.get $abstop
   i32.const 969
   i32.sub
   i32.const 63
   i32.ge_u
   if
    local.get $abstop
    i32.const 969
    i32.sub
    i32.const -2147483648
    i32.ge_u
    if
     f64.const 1
     br $~lib/util/math/exp_lut|inlined.0
    end
    local.get $abstop
    i32.const 1033
    i32.ge_u
    if
     local.get $ux
     i64.const -4503599627370496
     i64.eq
     if
      f64.const 0
      br $~lib/util/math/exp_lut|inlined.0
     end
     local.get $abstop
     i32.const 2047
     i32.ge_u
     if
      f64.const 1
      local.get $x|1
      f64.add
      br $~lib/util/math/exp_lut|inlined.0
     else
      f64.const 0
      f64.const inf
      local.get $ux
      i64.const 0
      i64.lt_s
      select
      br $~lib/util/math/exp_lut|inlined.0
     end
     unreachable
    end
    i32.const 0
    local.set $abstop
   end
   f64.const 184.6649652337873
   local.get $x|1
   f64.mul
   local.set $z
   local.get $z
   f64.const 6755399441055744
   f64.add
   local.set $kd
   local.get $kd
   i64.reinterpret_f64
   local.set $ki
   local.get $kd
   f64.const 6755399441055744
   f64.sub
   local.set $kd
   local.get $x|1
   local.get $kd
   f64.const -0.005415212348111709
   f64.mul
   f64.add
   local.get $kd
   f64.const -1.2864023111638346e-14
   f64.mul
   f64.add
   local.set $r
   local.get $ki
   i32.const 127
   i64.extend_i32_s
   i64.and
   i64.const 1
   i64.shl
   i32.wrap_i64
   local.set $idx
   local.get $ki
   i64.const 52
   i32.const 7
   i64.extend_i32_s
   i64.sub
   i64.shl
   local.set $top
   i32.const 1051728
   local.get $idx
   i32.const 3
   i32.shl
   i32.add
   i64.load $0
   f64.reinterpret_i64
   local.set $tail
   i32.const 1051728
   local.get $idx
   i32.const 3
   i32.shl
   i32.add
   i64.load $0 offset=8
   local.get $top
   i64.add
   local.set $sbits
   local.get $r
   local.get $r
   f64.mul
   local.set $r2
   local.get $tail
   local.get $r
   f64.add
   local.get $r2
   f64.const 0.49999999999996786
   local.get $r
   f64.const 0.16666666666665886
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.get $r2
   local.get $r2
   f64.mul
   f64.const 0.0416666808410674
   local.get $r
   f64.const 0.008333335853059549
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.set $tmp
   local.get $abstop
   i32.const 0
   i32.eq
   if
    block $~lib/util/math/specialcase|inlined.0 (result f64)
     local.get $tmp
     local.set $tmp|14
     local.get $sbits
     local.set $sbits|15
     local.get $ki
     local.set $ki|16
     local.get $ki|16
     i64.const 2147483648
     i64.and
     i64.const 0
     i64.ne
     i32.eqz
     if
      local.get $sbits|15
      i64.const 1009
      i64.const 52
      i64.shl
      i64.sub
      local.set $sbits|15
      local.get $sbits|15
      f64.reinterpret_i64
      local.set $scale
      f64.const 5486124068793688683255936e279
      local.get $scale
      local.get $scale
      local.get $tmp|14
      f64.mul
      f64.add
      f64.mul
      br $~lib/util/math/specialcase|inlined.0
     end
     local.get $sbits|15
     i64.const 1022
     i64.const 52
     i64.shl
     i64.add
     local.set $sbits|15
     local.get $sbits|15
     f64.reinterpret_i64
     local.set $scale
     local.get $scale
     local.get $scale
     local.get $tmp|14
     f64.mul
     f64.add
     local.set $y
     local.get $y
     f64.abs
     f64.const 1
     f64.lt
     if
      f64.const 1
      local.get $y
      f64.copysign
      local.set $one
      local.get $scale
      local.get $y
      f64.sub
      local.get $scale
      local.get $tmp|14
      f64.mul
      f64.add
      local.set $lo
      local.get $one
      local.get $y
      f64.add
      local.set $hi
      local.get $one
      local.get $hi
      f64.sub
      local.get $y
      f64.add
      local.get $lo
      f64.add
      local.set $lo
      local.get $hi
      local.get $lo
      f64.add
      local.get $one
      f64.sub
      local.set $y
      local.get $y
      f64.const 0
      f64.eq
      if
       local.get $sbits|15
       i64.const -9223372036854775808
       i64.and
       f64.reinterpret_i64
       local.set $y
      end
     end
     local.get $y
     f64.const 2.2250738585072014e-308
     f64.mul
     br $~lib/util/math/specialcase|inlined.0
    end
    br $~lib/util/math/exp_lut|inlined.0
   end
   local.get $sbits
   f64.reinterpret_i64
   local.set $scale|22
   local.get $scale|22
   local.get $scale|22
   local.get $tmp
   f64.mul
   f64.add
   br $~lib/util/math/exp_lut|inlined.0
  end
  return
 )
 (func $assembly/core/wavetable/exp (param $phase f64) (result f64)
  local.get $phase
  f64.neg
  call $~lib/math/NativeMath.exp
  return
 )
 (func $assembly/core/wavetable/Wavetable#get:noise (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/core/wave/rnd (param $amt f64) (result f64)
  (local $t i32)
  global.get $assembly/core/wave/seed
  i32.const 1831565813
  i32.add
  global.set $assembly/core/wave/seed
  global.get $assembly/core/wave/seed
  local.set $t
  local.get $t
  local.get $t
  i32.const 15
  i32.shr_u
  i32.xor
  local.get $t
  i32.const 1
  i32.or
  i32.mul
  local.set $t
  local.get $t
  local.get $t
  local.get $t
  local.get $t
  i32.const 7
  i32.shr_u
  i32.xor
  local.get $t
  i32.const 61
  i32.or
  i32.mul
  i32.add
  i32.xor
  local.set $t
  local.get $t
  local.get $t
  i32.const 14
  i32.shr_u
  i32.xor
  i32.const 0
  i32.shr_u
  f64.convert_i32_u
  f64.const 4294967296
  f64.div
  local.get $amt
  f64.mul
  return
 )
 (func $assembly/core/wave/Wave.noise (param $phase f64) (result f64)
  f64.const 1
  call $assembly/core/wave/rnd
  f64.const 2
  f64.mul
  f64.const 1
  f64.sub
  return
 )
 (func $assembly/core/wavetable/Wavetable#set:audioRate (param $this i32) (param $audioRate i32)
  local.get $this
  local.get $audioRate
  i32.store $0 offset=32
 )
 (func $assembly/core/wavetable/Wavetable#set:size (param $this i32) (param $size i32)
  local.get $this
  local.get $size
  i32.store $0 offset=36
 )
 (func $assembly/core/wavetable/Wavetable#constructor (param $this i32) (param $audioRate i32) (param $size i32) (result i32)
  (local $length i32)
  (local $rate i32)
  (local $step i32)
  (local $i i32)
  (local $phase i32)
  local.get $this
  i32.eqz
  if
   i32.const 40
   i32.const 10
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $audioRate
  call $assembly/core/wavetable/Wavetable#set:audioRate
  local.get $this
  local.get $size
  call $assembly/core/wavetable/Wavetable#set:size
  local.get $this
  i32.const 0
  call $assembly/core/wavetable/Wavetable#set:length
  local.get $this
  i32.const 0
  call $assembly/core/wavetable/Wavetable#set:mask
  local.get $this
  i32.const 0
  call $assembly/core/wavetable/Wavetable#set:phases
  local.get $this
  i32.const 0
  call $assembly/core/wavetable/Wavetable#set:sine
  local.get $this
  i32.const 0
  call $assembly/core/wavetable/Wavetable#set:cos
  local.get $this
  i32.const 0
  call $assembly/core/wavetable/Wavetable#set:exp
  local.get $this
  i32.const 0
  call $assembly/core/wavetable/Wavetable#set:noise
  local.get $this
  i32.const 0
  call $assembly/core/wavetable/Wavetable#set:antialias
  local.get $size
  i32.const 1
  i32.add
  local.set $length
  local.get $this
  local.get $length
  call $assembly/core/wavetable/Wavetable#set:length
  local.get $this
  local.get $size
  i32.const 1
  i32.sub
  i32.const 2
  i32.shl
  call $assembly/core/wavetable/Wavetable#set:mask
  local.get $this
  i32.const 0
  local.get $length
  call $~lib/staticarray/StaticArray<u32>#constructor
  call $assembly/core/wavetable/Wavetable#set:phases
  local.get $this
  i32.const 0
  local.get $length
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/core/wavetable/Wavetable#set:sine
  local.get $this
  i32.const 0
  local.get $length
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/core/wavetable/Wavetable#set:cos
  local.get $this
  i32.const 0
  local.get $length
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/core/wavetable/Wavetable#set:exp
  local.get $this
  i32.const 0
  local.get $length
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/core/wavetable/Wavetable#set:noise
  local.get $this
  i32.const 0
  local.get $audioRate
  call $assembly/core/antialias-wavetable/AntialiasWavetable#constructor
  call $assembly/core/wavetable/Wavetable#set:antialias
  block $assembly/util/rateToPhaseStep|inlined.0 (result i32)
   local.get $this
   call $assembly/core/wavetable/Wavetable#get:size
   local.set $rate
   i32.const -1
   local.get $rate
   i32.div_u
   br $assembly/util/rateToPhaseStep|inlined.0
  end
  local.set $step
  i32.const 0
  local.set $i
  i32.const 0
  local.set $phase
  loop $for-loop|0
   local.get $i
   local.get $this
   call $assembly/core/wavetable/Wavetable#get:length
   i32.lt_u
   if
    local.get $this
    call $assembly/core/wavetable/Wavetable#get:phases
    local.get $i
    local.get $phase
    call $~lib/staticarray/StaticArray<u32>#__set
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.get $this
  call $assembly/core/wavetable/Wavetable#get:sine
  i32.const 1051648
  i32.const 1051680
  call $assembly/core/wavetable/Wavetable#fill
  local.get $this
  local.get $this
  call $assembly/core/wavetable/Wavetable#get:cos
  i32.const 1051712
  i32.const 1051680
  call $assembly/core/wavetable/Wavetable#fill
  local.get $this
  local.get $this
  call $assembly/core/wavetable/Wavetable#get:exp
  i32.const 1053808
  i32.const 1051680
  call $assembly/core/wavetable/Wavetable#fill
  local.get $this
  local.get $this
  call $assembly/core/wavetable/Wavetable#get:noise
  i32.const 1053840
  i32.const 1051680
  call $assembly/core/wavetable/Wavetable#fill
  local.get $this
 )
 (func $assembly/core/engine/Core#set:wavetable (param $this i32) (param $wavetable i32)
  local.get $this
  local.get $wavetable
  i32.store $0
  local.get $this
  local.get $wavetable
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/engine/Core#set:audioRate (param $this i32) (param $audioRate i32)
  local.get $this
  local.get $audioRate
  i32.store $0 offset=4
 )
 (func $assembly/core/engine/Core#constructor (param $this i32) (param $audioRate i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 8
   i32.const 18
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $audioRate
  call $assembly/core/engine/Core#set:audioRate
  local.get $this
  i32.const 0
  call $assembly/core/engine/Core#set:wavetable
  local.get $this
  i32.const 0
  local.get $audioRate
  global.get $assembly/core/constants/WAVETABLE_SIZE
  call $assembly/core/wavetable/Wavetable#constructor
  call $assembly/core/engine/Core#set:wavetable
  local.get $this
 )
 (func $assembly/core/clock/Clock#set:time (param $this i32) (param $time f64)
  local.get $this
  local.get $time
  f64.store $0
 )
 (func $assembly/core/clock/Clock#set:timeStep (param $this i32) (param $timeStep f64)
  local.get $this
  local.get $timeStep
  f64.store $0 offset=8
 )
 (func $assembly/core/clock/Clock#set:prevTime (param $this i32) (param $prevTime f64)
  local.get $this
  local.get $prevTime
  f64.store $0 offset=16
 )
 (func $assembly/core/clock/Clock#set:endTime (param $this i32) (param $endTime f64)
  local.get $this
  local.get $endTime
  f64.store $0 offset=24
 )
 (func $assembly/core/clock/Clock#set:internalTime (param $this i32) (param $internalTime f64)
  local.get $this
  local.get $internalTime
  f64.store $0 offset=32
 )
 (func $assembly/core/clock/Clock#set:bpm (param $this i32) (param $bpm f64)
  local.get $this
  local.get $bpm
  f64.store $0 offset=40
 )
 (func $assembly/core/clock/Clock#set:coeff (param $this i32) (param $coeff f64)
  local.get $this
  local.get $coeff
  f64.store $0 offset=48
 )
 (func $assembly/core/clock/Clock#set:barTime (param $this i32) (param $barTime f64)
  local.get $this
  local.get $barTime
  f64.store $0 offset=56
 )
 (func $assembly/core/clock/Clock#set:barTimeStep (param $this i32) (param $barTimeStep f64)
  local.get $this
  local.get $barTimeStep
  f64.store $0 offset=64
 )
 (func $assembly/core/clock/Clock#set:nextBarTime (param $this i32) (param $nextBarTime f64)
  local.get $this
  local.get $nextBarTime
  f64.store $0 offset=72
 )
 (func $assembly/core/clock/Clock#set:loopStart (param $this i32) (param $loopStart f64)
  local.get $this
  local.get $loopStart
  f64.store $0 offset=80
 )
 (func $assembly/core/clock/Clock#set:loopEnd (param $this i32) (param $loopEnd f64)
  local.get $this
  local.get $loopEnd
  f64.store $0 offset=88
 )
 (func $assembly/core/clock/Clock#set:sampleRate (param $this i32) (param $sampleRate i32)
  local.get $this
  local.get $sampleRate
  i32.store $0 offset=96
 )
 (func $assembly/core/clock/Clock#set:jumpBar (param $this i32) (param $jumpBar i32)
  local.get $this
  local.get $jumpBar
  i32.store $0 offset=100
 )
 (func $assembly/core/clock/Clock#set:ringPos (param $this i32) (param $ringPos i32)
  local.get $this
  local.get $ringPos
  i32.store $0 offset=104
 )
 (func $assembly/core/clock/Clock#constructor (param $this i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 108
   call $~lib/rt/stub/__alloc
   local.set $this
  end
  local.get $this
  f64.const 0
  call $assembly/core/clock/Clock#set:time
  local.get $this
  f64.const 0
  call $assembly/core/clock/Clock#set:timeStep
  local.get $this
  f64.const -1
  call $assembly/core/clock/Clock#set:prevTime
  local.get $this
  f64.const 1
  call $assembly/core/clock/Clock#set:endTime
  local.get $this
  f64.const 0
  call $assembly/core/clock/Clock#set:internalTime
  local.get $this
  f64.const 60
  call $assembly/core/clock/Clock#set:bpm
  local.get $this
  f64.const 0
  call $assembly/core/clock/Clock#set:coeff
  local.get $this
  f64.const 0
  call $assembly/core/clock/Clock#set:barTime
  local.get $this
  f64.const 0
  call $assembly/core/clock/Clock#set:barTimeStep
  local.get $this
  f64.const 0
  call $assembly/core/clock/Clock#set:nextBarTime
  local.get $this
  f64.const inf
  f64.neg
  call $assembly/core/clock/Clock#set:loopStart
  local.get $this
  f64.const inf
  call $assembly/core/clock/Clock#set:loopEnd
  local.get $this
  i32.const 44100
  call $assembly/core/clock/Clock#set:sampleRate
  local.get $this
  i32.const -1
  call $assembly/core/clock/Clock#set:jumpBar
  local.get $this
  i32.const 0
  call $assembly/core/clock/Clock#set:ringPos
  local.get $this
 )
 (func $assembly/core/runner/Bar#set:size (param $this i32) (param $size i32)
  local.get $this
  local.get $size
  i32.store $0
 )
 (func $assembly/core/runner/Bar#set:main (param $this i32) (param $main i32)
  local.get $this
  local.get $main
  i32.store $0 offset=4
 )
 (func $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 1048768
   i32.const 1048816
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 2
  i32.shl
  local.set $outSize
  local.get $outSize
  i32.const 15
  call $~lib/rt/stub/__new
  local.set $out
  i32.const 0
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  i32.const 0
  local.get $outSize
  memory.fill $0
  local.get $out
  return
 )
 (func $assembly/core/runner/Bar#set:tracks (param $this i32) (param $tracks i32)
  local.get $this
  local.get $tracks
  i32.store $0 offset=8
 )
 (func $assembly/core/runner/Bar#constructor (param $this i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   call $~lib/rt/stub/__alloc
   local.set $this
  end
  local.get $this
  i32.const 0
  call $assembly/core/runner/Bar#set:size
  local.get $this
  i32.const 0
  call $assembly/core/runner/Bar#set:main
  local.get $this
  i32.const 0
  i32.const 16
  call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#constructor
  call $assembly/core/runner/Bar#set:tracks
  local.get $this
 )
 (func $assembly/core/runner/Runner#get:barInstances (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/staticarray/StaticArray<assembly/core/runner/Bar>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $~lib/staticarray/StaticArray<assembly/core/runner/Bar>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 0
  drop
 )
 (func $~lib/staticarray/StaticArray<assembly/core/runner/Bar>#__set (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  call $~lib/staticarray/StaticArray<assembly/core/runner/Bar>#get:length
  i32.ge_u
  if
   i32.const 1051072
   i32.const 1048816
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  local.get $value
  call $~lib/staticarray/StaticArray<assembly/core/runner/Bar>#__uset
 )
 (func $assembly/core/runner/Ctrl#set:tableIndex (param $this i32) (param $tableIndex i32)
  local.get $this
  local.get $tableIndex
  i32.store $0
 )
 (func $assembly/core/runner/Ctrl#set:id (param $this i32) (param $id i32)
  local.get $this
  local.get $id
  i32.store $0 offset=4
 )
 (func $assembly/core/runner/Signal#set:L (param $this i32) (param $L i32)
  local.get $this
  local.get $L
  i32.store $0
 )
 (func $assembly/core/runner/Signal#set:R (param $this i32) (param $R i32)
  local.get $this
  local.get $R
  i32.store $0 offset=4
 )
 (func $assembly/core/runner/Signal#set:LR (param $this i32) (param $LR i32)
  local.get $this
  local.get $LR
  i32.store $0 offset=8
 )
 (func $assembly/core/runner/Signal#constructor (param $this i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   call $~lib/rt/stub/__alloc
   local.set $this
  end
  local.get $this
  i32.const 0
  call $assembly/core/runner/Signal#set:L
  local.get $this
  i32.const 0
  call $assembly/core/runner/Signal#set:R
  local.get $this
  i32.const 0
  call $assembly/core/runner/Signal#set:LR
  local.get $this
 )
 (func $assembly/core/runner/Ctrl#set:signal (param $this i32) (param $signal i32)
  local.get $this
  local.get $signal
  i32.store $0 offset=8
 )
 (func $assembly/core/runner/Ctrl#set:literalsCount (param $this i32) (param $literalsCount i32)
  local.get $this
  local.get $literalsCount
  i32.store $0 offset=12
 )
 (func $assembly/core/runner/Ctrl#set:liveLiterals (param $this i32) (param $liveLiterals i32)
  local.get $this
  local.get $liveLiterals
  i32.store $0 offset=16
 )
 (func $assembly/core/runner/Ctrl#set:ownLiterals (param $this i32) (param $ownLiterals i32)
  local.get $this
  local.get $ownLiterals
  i32.store $0 offset=20
 )
 (func $assembly/core/runner/Ctrl#constructor (param $this i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 24
   call $~lib/rt/stub/__alloc
   local.set $this
  end
  local.get $this
  i32.const 0
  call $assembly/core/runner/Ctrl#set:tableIndex
  local.get $this
  i32.const 0
  call $assembly/core/runner/Ctrl#set:id
  local.get $this
  i32.const 0
  call $assembly/core/runner/Signal#constructor
  call $assembly/core/runner/Ctrl#set:signal
  local.get $this
  i32.const 0
  call $assembly/core/runner/Ctrl#set:literalsCount
  local.get $this
  i32.const 0
  call $assembly/core/runner/Ctrl#set:liveLiterals
  local.get $this
  i32.const 0
  call $assembly/core/runner/Ctrl#set:ownLiterals
  local.get $this
 )
 (func $assembly/core/runner/Runner#get:ctrlInstances (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 0
  drop
 )
 (func $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__set (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#get:length
  i32.ge_u
  if
   i32.const 1051072
   i32.const 1048816
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  local.get $value
  call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__uset
 )
 (func $assembly/core/runner/Runner#set:clock (param $this i32) (param $clock i32)
  local.get $this
  local.get $clock
  i32.store $0 offset=28
 )
 (func $~lib/staticarray/StaticArray<assembly/core/runner/Bar>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 1048768
   i32.const 1048816
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 2
  i32.shl
  local.set $outSize
  local.get $outSize
  i32.const 16
  call $~lib/rt/stub/__new
  local.set $out
  i32.const 0
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  i32.const 0
  local.get $outSize
  memory.fill $0
  local.get $out
  return
 )
 (func $assembly/core/runner/Runner#set:barInstances (param $this i32) (param $barInstances i32)
  local.get $this
  local.get $barInstances
  i32.store $0
  local.get $this
  local.get $barInstances
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/staticarray/StaticArray<assembly/core/runner/Bar|null>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 1048768
   i32.const 1048816
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 2
  i32.shl
  local.set $outSize
  local.get $outSize
  i32.const 17
  call $~lib/rt/stub/__new
  local.set $out
  i32.const 0
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  i32.const 0
  local.get $outSize
  memory.fill $0
  local.get $out
  return
 )
 (func $assembly/core/runner/Runner#set:bars (param $this i32) (param $bars i32)
  local.get $this
  local.get $bars
  i32.store $0 offset=4
  local.get $this
  local.get $bars
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/runner/Runner#set:ctrlInstances (param $this i32) (param $ctrlInstances i32)
  local.get $this
  local.get $ctrlInstances
  i32.store $0 offset=8
  local.get $this
  local.get $ctrlInstances
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/runner/Runner#set:ctrls (param $this i32) (param $ctrls i32)
  local.get $this
  local.get $ctrls
  i32.store $0 offset=12
  local.get $this
  local.get $ctrls
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/runner/Runner#set:lastMain (param $this i32) (param $lastMain i32)
  local.get $this
  local.get $lastMain
  i32.store $0 offset=16
 )
 (func $assembly/core/runner/Runner#set:last (param $this i32) (param $last i32)
  local.get $this
  local.get $last
  i32.store $0 offset=20
 )
 (func $assembly/core/runner/Runner#set:tableIndex (param $this i32) (param $tableIndex i32)
  local.get $this
  local.get $tableIndex
  i32.store $0 offset=24
 )
 (func $assembly/core/runner/Runner#constructor (param $this i32) (param $clock i32) (result i32)
  (local $i i32)
  (local $i|3 i32)
  local.get $this
  i32.eqz
  if
   i32.const 32
   i32.const 14
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $clock
  call $assembly/core/runner/Runner#set:clock
  local.get $this
  i32.const 0
  global.get $assembly/core/runner/MAX_BAR_INSTANCES
  call $~lib/staticarray/StaticArray<assembly/core/runner/Bar>#constructor
  call $assembly/core/runner/Runner#set:barInstances
  local.get $this
  i32.const 0
  global.get $assembly/core/runner/MAX_BARS
  call $~lib/staticarray/StaticArray<assembly/core/runner/Bar|null>#constructor
  call $assembly/core/runner/Runner#set:bars
  local.get $this
  i32.const 0
  global.get $assembly/core/runner/MAX_CTRL_INSTANCES
  call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#constructor
  call $assembly/core/runner/Runner#set:ctrlInstances
  local.get $this
  i32.const 0
  global.get $assembly/core/runner/MAX_CTRLS
  call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#constructor
  call $assembly/core/runner/Runner#set:ctrls
  local.get $this
  i32.const 0
  call $assembly/core/runner/Runner#set:lastMain
  local.get $this
  i32.const 0
  call $assembly/core/runner/Runner#set:last
  local.get $this
  i32.const 0
  call $assembly/core/runner/Runner#set:tableIndex
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   global.get $assembly/core/runner/MAX_BAR_INSTANCES
   i32.lt_s
   if
    local.get $this
    call $assembly/core/runner/Runner#get:barInstances
    local.get $i
    i32.const 0
    call $assembly/core/runner/Bar#constructor
    call $~lib/staticarray/StaticArray<assembly/core/runner/Bar>#__set
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $i|3
  loop $for-loop|1
   local.get $i|3
   global.get $assembly/core/runner/MAX_CTRL_INSTANCES
   i32.lt_s
   if
    local.get $this
    call $assembly/core/runner/Runner#get:ctrlInstances
    local.get $i|3
    i32.const 0
    call $assembly/core/runner/Ctrl#constructor
    call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__set
    local.get $i|3
    i32.const 1
    i32.add
    local.set $i|3
    br $for-loop|1
   end
  end
  local.get $this
 )
 (func $assembly/core/engine/Engine#set:runner (param $this i32) (param $runner i32)
  local.get $this
  local.get $runner
  i32.store $0 offset=16
  local.get $this
  local.get $runner
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/engine/Core#get:wavetable (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/core/engine/Engine#set:wavetable (param $this i32) (param $wavetable i32)
  local.get $this
  local.get $wavetable
  i32.store $0 offset=8
  local.get $this
  local.get $wavetable
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/engine/Engine#set:rateSamples (param $this i32) (param $rateSamples i32)
  local.get $this
  local.get $rateSamples
  i32.store $0
 )
 (func $assembly/core/engine/Engine#set:rateStep (param $this i32) (param $rateStep i32)
  local.get $this
  local.get $rateStep
  i32.store $0 offset=4
 )
 (func $assembly/core/engine/Engine#set:clock (param $this i32) (param $clock i32)
  local.get $this
  local.get $clock
  i32.store $0 offset=12
 )
 (func $assembly/core/engine/Engine#get:clock (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/core/engine/Engine#set:audioRate (param $this i32) (param $audioRate i32)
  local.get $this
  local.get $audioRate
  i32.store $0 offset=24
 )
 (func $assembly/core/engine/Engine#set:core (param $this i32) (param $core i32)
  local.get $this
  local.get $core
  i32.store $0 offset=28
  local.get $this
  local.get $core
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/core/engine/Engine#set:signal (param $this i32) (param $signal i32)
  local.get $this
  local.get $signal
  i32.store $0 offset=20
 )
 (func $assembly/core/engine/Engine#constructor (param $this i32) (param $audioRate i32) (param $core i32) (result i32)
  (local $clock i32)
  (local $rate i32)
  local.get $this
  i32.eqz
  if
   i32.const 32
   i32.const 9
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $audioRate
  call $assembly/core/engine/Engine#set:audioRate
  local.get $this
  local.get $core
  call $assembly/core/engine/Engine#set:core
  local.get $this
  i32.const 0
  call $assembly/core/engine/Engine#set:rateSamples
  local.get $this
  i32.const 0
  call $assembly/core/engine/Engine#set:rateStep
  local.get $this
  i32.const 0
  call $assembly/core/engine/Engine#set:wavetable
  local.get $this
  i32.const 0
  call $assembly/core/engine/Engine#set:clock
  local.get $this
  i32.const 0
  call $assembly/core/engine/Engine#set:runner
  local.get $this
  i32.const 0
  call $assembly/core/runner/Signal#constructor
  call $assembly/core/engine/Engine#set:signal
  i32.const 0
  call $assembly/core/clock/Clock#constructor
  local.set $clock
  local.get $this
  i32.const 0
  local.get $clock
  call $assembly/core/runner/Runner#constructor
  call $assembly/core/engine/Engine#set:runner
  local.get $this
  local.get $core
  call $assembly/core/engine/Core#get:wavetable
  call $assembly/core/engine/Engine#set:wavetable
  local.get $this
  local.get $audioRate
  call $assembly/core/engine/Engine#set:rateSamples
  local.get $this
  block $assembly/util/rateToPhaseStep|inlined.1 (result i32)
   local.get $audioRate
   local.set $rate
   i32.const -1
   local.get $rate
   i32.div_u
   br $assembly/util/rateToPhaseStep|inlined.1
  end
  call $assembly/core/engine/Engine#set:rateStep
  local.get $this
  local.get $clock
  call $assembly/core/engine/Engine#set:clock
  local.get $this
  call $assembly/core/engine/Engine#get:clock
  local.get $audioRate
  call $assembly/core/clock/Clock#set:sampleRate
  local.get $this
 )
 (func $assembly/core/engine/Engine#get:signal (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/core/engine/Engine#get:rateSamples (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/array/Array<~lib/staticarray/StaticArray<f32>>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:byteLength (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/rt/common/BLOCK#get:mmInfo (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $~lib/rt/stub/__realloc (param $ptr i32) (param $size i32) (result i32)
  (local $block i32)
  (local $actualSize i32)
  (local $isLast i32)
  (local $size|5 i32)
  (local $payloadSize i32)
  (local $7 i32)
  (local $8 i32)
  (local $newPtr i32)
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 1048944
   i32.const 45
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $actualSize
  local.get $ptr
  local.get $actualSize
  i32.add
  global.get $~lib/rt/stub/offset
  i32.eq
  local.set $isLast
  block $~lib/rt/stub/computeSize|inlined.1 (result i32)
   local.get $size
   local.set $size|5
   local.get $size|5
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
   br $~lib/rt/stub/computeSize|inlined.1
  end
  local.set $payloadSize
  local.get $size
  local.get $actualSize
  i32.gt_u
  if
   local.get $isLast
   if
    local.get $size
    i32.const 1073741820
    i32.gt_u
    if
     i32.const 1048880
     i32.const 1048944
     i32.const 52
     i32.const 33
     call $~lib/builtins/abort
     unreachable
    end
    local.get $ptr
    local.get $payloadSize
    i32.add
    call $~lib/rt/stub/maybeGrowMemory
    local.get $block
    local.get $payloadSize
    call $~lib/rt/common/BLOCK#set:mmInfo
   else
    local.get $payloadSize
    local.tee $7
    local.get $actualSize
    i32.const 1
    i32.shl
    local.tee $8
    local.get $7
    local.get $8
    i32.gt_u
    select
    call $~lib/rt/stub/__alloc
    local.set $newPtr
    local.get $newPtr
    local.get $ptr
    local.get $actualSize
    memory.copy $0 $0
    local.get $newPtr
    local.tee $ptr
    i32.const 4
    i32.sub
    local.set $block
   end
  else
   local.get $isLast
   if
    local.get $ptr
    local.get $payloadSize
    i32.add
    global.set $~lib/rt/stub/offset
    local.get $block
    local.get $payloadSize
    call $~lib/rt/common/BLOCK#set:mmInfo
   end
  end
  local.get $ptr
  return
 )
 (func $~lib/rt/stub/__renew (param $oldPtr i32) (param $size i32) (result i32)
  (local $newPtr i32)
  local.get $size
  i32.const 1073741804
  i32.gt_u
  if
   i32.const 1048880
   i32.const 1048944
   i32.const 99
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  local.get $oldPtr
  i32.const 16
  i32.sub
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/stub/__realloc
  local.set $newPtr
  local.get $newPtr
  i32.const 4
  i32.sub
  local.get $size
  call $~lib/rt/common/OBJECT#set:rtSize
  local.get $newPtr
  i32.const 16
  i32.add
  return
 )
 (func $~lib/array/ensureCapacity (param $array i32) (param $newSize i32) (param $alignLog2 i32) (param $canGrow i32)
  (local $oldCapacity i32)
  (local $oldData i32)
  (local $6 i32)
  (local $7 i32)
  (local $newCapacity i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $newData i32)
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  local.set $oldCapacity
  local.get $newSize
  local.get $oldCapacity
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   local.get $newSize
   i32.const 1073741820
   local.get $alignLog2
   i32.shr_u
   i32.gt_u
   if
    i32.const 1048768
    i32.const 1053872
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $array
   call $~lib/arraybuffer/ArrayBufferView#get:buffer
   local.set $oldData
   local.get $newSize
   local.tee $6
   i32.const 8
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_u
   select
   local.get $alignLog2
   i32.shl
   local.set $newCapacity
   local.get $canGrow
   if
    local.get $oldCapacity
    i32.const 1
    i32.shl
    local.tee $9
    i32.const 1073741820
    local.tee $10
    local.get $9
    local.get $10
    i32.lt_u
    select
    local.tee $11
    local.get $newCapacity
    local.tee $12
    local.get $11
    local.get $12
    i32.gt_u
    select
    local.set $newCapacity
   end
   local.get $oldData
   local.get $newCapacity
   call $~lib/rt/stub/__renew
   local.set $newData
   i32.const 0
   global.get $~lib/shared/runtime/Runtime.Incremental
   i32.ne
   drop
   local.get $newData
   local.get $oldCapacity
   i32.add
   i32.const 0
   local.get $newCapacity
   local.get $oldCapacity
   i32.sub
   memory.fill $0
   local.get $newData
   local.get $oldData
   i32.ne
   if
    local.get $array
    local.get $newData
    i32.store $0
    local.get $array
    local.get $newData
    i32.store $0 offset=4
    local.get $array
    local.get $newData
    i32.const 0
    call $~lib/rt/stub/__link
   end
   local.get $array
   local.get $newCapacity
   i32.store $0 offset=8
  end
 )
 (func $~lib/array/Array<~lib/staticarray/StaticArray<f32>>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<~lib/staticarray/StaticArray<f32>>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<~lib/staticarray/StaticArray<f32>>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  local.get $this
  call $~lib/array/Array<~lib/staticarray/StaticArray<f32>>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  call $~lib/array/Array<~lib/staticarray/StaticArray<f32>>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/stub/__link
  local.get $this
  local.get $len
  call $~lib/array/Array<~lib/staticarray/StaticArray<f32>>#set:length_
  local.get $len
  return
 )
 (func $assembly/util/allocF32 (param $blockSize i32) (result i32)
  (local $block i32)
  i32.const 0
  local.get $blockSize
  call $~lib/staticarray/StaticArray<f32>#constructor
  local.set $block
  global.get $assembly/util/f32s
  local.get $block
  call $~lib/array/Array<~lib/staticarray/StaticArray<f32>>#push
  drop
  local.get $block
  return
 )
 (func $assembly/core/engine/Engine#createBlock (param $this i32) (param $blockSize i32) (result i32)
  local.get $blockSize
  call $assembly/util/allocF32
  return
 )
 (func $assembly/core/engine/Engine#get:runner (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/core/runner/Runner#clearLastBar (param $this i32)
  local.get $this
  i32.const 0
  call $assembly/core/runner/Runner#set:last
 )
 (func $assembly/core/runner/Runner#get:ctrls (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#get:length
  i32.ge_u
  if
   i32.const 1051072
   i32.const 1048816
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 1051168
   i32.const 1048816
   i32.const 82
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  return
 )
 (func $assembly/core/runner/Ctrl#get:signal (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/core/runner/Runner#get:bars (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/staticarray/StaticArray<assembly/core/runner/Bar|null>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $~lib/staticarray/StaticArray<assembly/core/runner/Bar|null>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  call $~lib/staticarray/StaticArray<assembly/core/runner/Bar|null>#get:length
  i32.ge_u
  if
   i32.const 1051072
   i32.const 1048816
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 1
  drop
  i32.const 1
  i32.eqz
  drop
  local.get $value
  return
 )
 (func $assembly/core/runner/Runner#get:clock (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=28
 )
 (func $assembly/core/clock/Clock#get:time (param $this i32) (result f64)
  local.get $this
  f64.load $0
 )
 (func $assembly/core/clock/Clock#get:barTime (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=56
 )
 (func $assembly/core/runner/Bar#get:size (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/core/runner/Bar#get:tracks (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/core/runner/Runner#get:tableIndex (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/core/runner/Ctrl#get:id (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/core/runner/Ctrl#get:ownLiterals (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/core/runner/Ctrl#get:liveLiterals (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/core/runner/Ctrl#get:literalsCount (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/graph/copy/copyMem (param $inp i32) (param $out i32) (param $size i32)
  local.get $out
  local.get $inp
  local.get $size
  memory.copy $0 $0
 )
 (func $assembly/core/runner/Ctrl#get:tableIndex (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/core/runner/Ctrl#get:run (param $this i32) (result i32)
  local.get $this
  call $assembly/core/runner/Ctrl#get:tableIndex
  return
 )
 (func $assembly/core/runner/Signal#get:L (param $this i32) (result i32)
  local.get $this
  i32.load $0
 )
 (func $assembly/core/runner/Vol#get:L (param $this i32) (result f32)
  local.get $this
  f32.load $0
 )
 (func $assembly/math/addmul_audio_audio_scalar (param $in0 i32) (param $in1 i32) (param $scalar f32) (param $begin i32) (param $end i32) (param $out i32)
  (local $scalarv v128)
  (local $in0v v128)
  (local $in1v v128)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  local.get $scalar
  f32x4.splat
  local.set $scalarv
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $in1
  local.get $offset
  i32.add
  local.set $in1
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $resv
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/core/runner/Signal#get:R (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/core/runner/Vol#get:R (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=4
 )
 (func $assembly/core/runner/Signal#get:LR (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/core/runner/Vol#get:LR (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/core/runner/Bar#get:main (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/math/mul_audio_scalar (param $in0 i32) (param $scalar f32) (param $begin i32) (param $end i32) (param $out i32)
  (local $scalarv v128)
  (local $in0v v128)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  local.get $scalar
  f32x4.splat
  local.set $scalarv
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/core/runner/Runner#fill (param $this i32) (param $barIndex i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $curr i32)
  (local $actualTime f64)
  (local $barTime f64)
  (local $ctrl i32)
  (local $x i32)
  (local $this|10 i32)
  (local $time f64)
  (local $barTime|12 f64)
  (local $this|13 i32)
  (local $ctrl|14 i32)
  (local $tableIndex i32)
  (local $ctrl|16 i32)
  (local $ctrl|17 i32)
  (local $begin|18 i32)
  (local $end|19 i32)
  (local $sOut i32)
  (local $sIn i32)
  (local $vol i32)
  (local $main i32)
  (local $this|24 i32)
  (local $time|25 f64)
  (local $barTime|26 f64)
  (local $this|27 i32)
  (local $ctrl|28 i32)
  (local $tableIndex|29 i32)
  (local $ctrl|30 i32)
  (local $ctrl|31 i32)
  (local $begin|32 i32)
  (local $end|33 i32)
  (local $sOut|34 i32)
  (local $sIn|35 i32)
  (local $vol|36 i32)
  local.get $this
  call $assembly/core/runner/Runner#get:bars
  local.get $barIndex
  call $~lib/staticarray/StaticArray<assembly/core/runner/Bar|null>#__get
  local.set $curr
  local.get $curr
  i32.eqz
  if
   return
  end
  local.get $this
  call $assembly/core/runner/Runner#get:clock
  call $assembly/core/clock/Clock#get:time
  local.set $actualTime
  local.get $this
  call $assembly/core/runner/Runner#get:clock
  call $assembly/core/clock/Clock#get:barTime
  local.set $barTime
  i32.const 0
  local.set $x
  loop $for-loop|0
   local.get $x
   local.get $curr
   call $assembly/core/runner/Bar#get:size
   i32.lt_u
   if
    local.get $this
    local.set $this|10
    local.get $actualTime
    local.set $time
    local.get $barTime
    local.set $barTime|12
    local.get $this|10
    call $assembly/core/runner/Runner#get:clock
    local.get $time
    call $assembly/core/clock/Clock#set:time
    local.get $this|10
    call $assembly/core/runner/Runner#get:clock
    local.get $barTime|12
    call $assembly/core/clock/Clock#set:barTime
    local.get $curr
    call $assembly/core/runner/Bar#get:tracks
    local.get $x
    call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get
    local.set $ctrl
    local.get $this
    local.set $this|13
    local.get $ctrl
    local.set $ctrl|14
    local.get $this|13
    call $assembly/core/runner/Runner#get:tableIndex
    local.set $tableIndex
    local.get $ctrl|14
    call $assembly/core/runner/Ctrl#get:id
    local.get $tableIndex
    call $assembly/env/setCtrlInstanceAt
    drop
    local.get $ctrl|14
    local.get $tableIndex
    call $assembly/core/runner/Ctrl#set:tableIndex
    local.get $tableIndex
    i32.const 2
    i32.add
    local.set $tableIndex
    local.get $tableIndex
    i32.const 128
    i32.eq
    if
     i32.const 0
     local.set $tableIndex
    end
    local.get $this|13
    local.get $tableIndex
    call $assembly/core/runner/Runner#set:tableIndex
    local.get $ctrl
    local.set $ctrl|16
    local.get $ctrl|16
    call $assembly/core/runner/Ctrl#get:ownLiterals
    local.get $ctrl|16
    call $assembly/core/runner/Ctrl#get:liveLiterals
    local.get $ctrl|16
    call $assembly/core/runner/Ctrl#get:literalsCount
    i32.const 2
    i32.shl
    call $assembly/graph/copy/copyMem
    local.get $begin
    local.get $end
    local.get $ctrl
    call $assembly/core/runner/Ctrl#get:run
    call_indirect $0 (type $i32_i32_=>_none)
    local.get $ctrl
    local.set $ctrl|17
    local.get $begin
    local.set $begin|18
    local.get $end
    local.set $end|19
    local.get $out
    local.set $sOut
    local.get $ctrl|17
    call $assembly/core/runner/Ctrl#get:signal
    local.set $sIn
    local.get $ctrl|17
    call $assembly/core/runner/Ctrl#get:liveLiterals
    local.set $vol
    local.get $sIn
    call $assembly/core/runner/Signal#get:L
    if
     local.get $sIn
     call $assembly/core/runner/Signal#get:L
     local.get $sOut
     call $assembly/core/runner/Signal#get:L
     local.get $vol
     call $assembly/core/runner/Vol#get:L
     local.get $begin|18
     local.get $end|19
     local.get $sOut
     call $assembly/core/runner/Signal#get:L
     call $assembly/math/addmul_audio_audio_scalar
    end
    local.get $sIn
    call $assembly/core/runner/Signal#get:R
    if
     local.get $sIn
     call $assembly/core/runner/Signal#get:R
     local.get $sOut
     call $assembly/core/runner/Signal#get:R
     local.get $vol
     call $assembly/core/runner/Vol#get:R
     local.get $begin|18
     local.get $end|19
     local.get $sOut
     call $assembly/core/runner/Signal#get:R
     call $assembly/math/addmul_audio_audio_scalar
    end
    local.get $sIn
    call $assembly/core/runner/Signal#get:LR
    if
     local.get $sIn
     call $assembly/core/runner/Signal#get:LR
     local.get $sOut
     call $assembly/core/runner/Signal#get:LR
     local.get $vol
     call $assembly/core/runner/Vol#get:LR
     local.get $begin|18
     local.get $end|19
     local.get $sOut
     call $assembly/core/runner/Signal#get:LR
     call $assembly/math/addmul_audio_audio_scalar
    end
    local.get $x
    i32.const 1
    i32.add
    local.set $x
    br $for-loop|0
   end
  end
  local.get $curr
  call $assembly/core/runner/Bar#get:main
  local.set $main
  local.get $main
  if
   local.get $this
   local.set $this|24
   local.get $actualTime
   local.set $time|25
   local.get $barTime
   local.set $barTime|26
   local.get $this|24
   call $assembly/core/runner/Runner#get:clock
   local.get $time|25
   call $assembly/core/clock/Clock#set:time
   local.get $this|24
   call $assembly/core/runner/Runner#get:clock
   local.get $barTime|26
   call $assembly/core/clock/Clock#set:barTime
   local.get $this
   local.set $this|27
   local.get $main
   local.set $ctrl|28
   local.get $this|27
   call $assembly/core/runner/Runner#get:tableIndex
   local.set $tableIndex|29
   local.get $ctrl|28
   call $assembly/core/runner/Ctrl#get:id
   local.get $tableIndex|29
   call $assembly/env/setCtrlInstanceAt
   drop
   local.get $ctrl|28
   local.get $tableIndex|29
   call $assembly/core/runner/Ctrl#set:tableIndex
   local.get $tableIndex|29
   i32.const 2
   i32.add
   local.set $tableIndex|29
   local.get $tableIndex|29
   i32.const 128
   i32.eq
   if
    i32.const 0
    local.set $tableIndex|29
   end
   local.get $this|27
   local.get $tableIndex|29
   call $assembly/core/runner/Runner#set:tableIndex
   local.get $main
   local.set $ctrl|30
   local.get $ctrl|30
   call $assembly/core/runner/Ctrl#get:ownLiterals
   local.get $ctrl|30
   call $assembly/core/runner/Ctrl#get:liveLiterals
   local.get $ctrl|30
   call $assembly/core/runner/Ctrl#get:literalsCount
   i32.const 2
   i32.shl
   call $assembly/graph/copy/copyMem
   local.get $begin
   local.get $end
   local.get $main
   call $assembly/core/runner/Ctrl#get:run
   call_indirect $0 (type $i32_i32_=>_none)
   local.get $main
   local.set $ctrl|31
   local.get $begin
   local.set $begin|32
   local.get $end
   local.set $end|33
   local.get $out
   local.set $sOut|34
   local.get $ctrl|31
   call $assembly/core/runner/Ctrl#get:signal
   local.set $sIn|35
   local.get $ctrl|31
   call $assembly/core/runner/Ctrl#get:liveLiterals
   local.set $vol|36
   local.get $sIn|35
   call $assembly/core/runner/Signal#get:L
   local.get $vol|36
   call $assembly/core/runner/Vol#get:L
   local.get $begin|32
   local.get $end|33
   local.get $sOut|34
   call $assembly/core/runner/Signal#get:L
   call $assembly/math/mul_audio_scalar
   local.get $sIn|35
   call $assembly/core/runner/Signal#get:R
   local.get $vol|36
   call $assembly/core/runner/Vol#get:L
   local.get $begin|32
   local.get $end|33
   local.get $sOut|34
   call $assembly/core/runner/Signal#get:R
   call $assembly/math/mul_audio_scalar
  end
 )
 (func $assembly/core/clock/Clock#get:nextBarTime (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=72
 )
 (func $assembly/core/clock/Clock#get:timeStep (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=8
 )
 (func $assembly/core/runner/Runner#get:last (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/graph/fade/fadeOut (param $total i32) (param $begin i32) (param $end i32) (param $block i32)
  (local $gainv v128)
  (local $frame i32)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  (local $value1 f32)
  (local $value2 f32)
  (local $value1|11 f32)
  (local $value2|12 f32)
  (local $value1|13 f32)
  (local $value2|14 f32)
  (local $value1|15 f32)
  (local $value2|16 f32)
  (local $value1|17 f32)
  (local $value2|18 f32)
  (local $value1|19 f32)
  (local $value2|20 f32)
  (local $value1|21 f32)
  (local $value2|22 f32)
  (local $value1|23 f32)
  (local $value2|24 f32)
  (local $value1|25 f32)
  (local $value2|26 f32)
  (local $value1|27 f32)
  (local $value2|28 f32)
  (local $value1|29 f32)
  (local $value2|30 f32)
  (local $value1|31 f32)
  (local $value2|32 f32)
  (local $value1|33 f32)
  (local $value2|34 f32)
  (local $value1|35 f32)
  (local $value2|36 f32)
  (local $value1|37 f32)
  (local $value2|38 f32)
  (local $value1|39 f32)
  (local $value2|40 f32)
  f32.const 0
  f32x4.splat
  local.set $gainv
  i32.const 0
  local.set $frame
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $block
  local.get $offset
  i32.add
  local.set $block
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    block $~lib/math/NativeMathf.max|inlined.0 (result f32)
     f32.const 0
     local.set $value1
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2
     local.get $value1
     local.get $value2
     f32.max
     br $~lib/math/NativeMathf.max|inlined.0
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.1 (result f32)
     f32.const 0
     local.set $value1|11
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|12
     local.get $value1|11
     local.get $value2|12
     f32.max
     br $~lib/math/NativeMathf.max|inlined.1
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.2 (result f32)
     f32.const 0
     local.set $value1|13
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|14
     local.get $value1|13
     local.get $value2|14
     f32.max
     br $~lib/math/NativeMathf.max|inlined.2
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.3 (result f32)
     f32.const 0
     local.set $value1|15
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|16
     local.get $value1|15
     local.get $value2|16
     f32.max
     br $~lib/math/NativeMathf.max|inlined.3
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.4 (result f32)
     f32.const 0
     local.set $value1|17
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|18
     local.get $value1|17
     local.get $value2|18
     f32.max
     br $~lib/math/NativeMathf.max|inlined.4
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.5 (result f32)
     f32.const 0
     local.set $value1|19
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|20
     local.get $value1|19
     local.get $value2|20
     f32.max
     br $~lib/math/NativeMathf.max|inlined.5
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.6 (result f32)
     f32.const 0
     local.set $value1|21
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|22
     local.get $value1|21
     local.get $value2|22
     f32.max
     br $~lib/math/NativeMathf.max|inlined.6
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.7 (result f32)
     f32.const 0
     local.set $value1|23
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|24
     local.get $value1|23
     local.get $value2|24
     f32.max
     br $~lib/math/NativeMathf.max|inlined.7
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.8 (result f32)
     f32.const 0
     local.set $value1|25
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|26
     local.get $value1|25
     local.get $value2|26
     f32.max
     br $~lib/math/NativeMathf.max|inlined.8
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.9 (result f32)
     f32.const 0
     local.set $value1|27
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|28
     local.get $value1|27
     local.get $value2|28
     f32.max
     br $~lib/math/NativeMathf.max|inlined.9
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.10 (result f32)
     f32.const 0
     local.set $value1|29
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|30
     local.get $value1|29
     local.get $value2|30
     f32.max
     br $~lib/math/NativeMathf.max|inlined.10
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.11 (result f32)
     f32.const 0
     local.set $value1|31
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|32
     local.get $value1|31
     local.get $value2|32
     f32.max
     br $~lib/math/NativeMathf.max|inlined.11
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.12 (result f32)
     f32.const 0
     local.set $value1|33
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|34
     local.get $value1|33
     local.get $value2|34
     f32.max
     br $~lib/math/NativeMathf.max|inlined.12
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.13 (result f32)
     f32.const 0
     local.set $value1|35
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|36
     local.get $value1|35
     local.get $value2|36
     f32.max
     br $~lib/math/NativeMathf.max|inlined.13
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.14 (result f32)
     f32.const 0
     local.set $value1|37
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|38
     local.get $value1|37
     local.get $value2|38
     f32.max
     br $~lib/math/NativeMathf.max|inlined.14
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.max|inlined.15 (result f32)
     f32.const 0
     local.set $value1|39
     f32.const 1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     f32.sub
     local.set $value2|40
     local.get $value1|39
     local.get $value2|40
     f32.max
     br $~lib/math/NativeMathf.max|inlined.15
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/graph/fade/fadeIn (param $total i32) (param $begin i32) (param $end i32) (param $block i32)
  (local $gainv v128)
  (local $frame i32)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  (local $value1 f32)
  (local $value2 f32)
  (local $value1|11 f32)
  (local $value2|12 f32)
  (local $value1|13 f32)
  (local $value2|14 f32)
  (local $value1|15 f32)
  (local $value2|16 f32)
  (local $value1|17 f32)
  (local $value2|18 f32)
  (local $value1|19 f32)
  (local $value2|20 f32)
  (local $value1|21 f32)
  (local $value2|22 f32)
  (local $value1|23 f32)
  (local $value2|24 f32)
  (local $value1|25 f32)
  (local $value2|26 f32)
  (local $value1|27 f32)
  (local $value2|28 f32)
  (local $value1|29 f32)
  (local $value2|30 f32)
  (local $value1|31 f32)
  (local $value2|32 f32)
  (local $value1|33 f32)
  (local $value2|34 f32)
  (local $value1|35 f32)
  (local $value2|36 f32)
  (local $value1|37 f32)
  (local $value2|38 f32)
  (local $value1|39 f32)
  (local $value2|40 f32)
  f32.const 0
  f32x4.splat
  local.set $gainv
  i32.const 0
  local.set $frame
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $block
  local.get $offset
  i32.add
  local.set $block
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    block $~lib/math/NativeMathf.min|inlined.0 (result f32)
     f32.const 1
     local.set $value1
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2
     local.get $value1
     local.get $value2
     f32.min
     br $~lib/math/NativeMathf.min|inlined.0
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.1 (result f32)
     f32.const 1
     local.set $value1|11
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|12
     local.get $value1|11
     local.get $value2|12
     f32.min
     br $~lib/math/NativeMathf.min|inlined.1
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.2 (result f32)
     f32.const 1
     local.set $value1|13
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|14
     local.get $value1|13
     local.get $value2|14
     f32.min
     br $~lib/math/NativeMathf.min|inlined.2
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.3 (result f32)
     f32.const 1
     local.set $value1|15
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|16
     local.get $value1|15
     local.get $value2|16
     f32.min
     br $~lib/math/NativeMathf.min|inlined.3
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.4 (result f32)
     f32.const 1
     local.set $value1|17
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|18
     local.get $value1|17
     local.get $value2|18
     f32.min
     br $~lib/math/NativeMathf.min|inlined.4
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.5 (result f32)
     f32.const 1
     local.set $value1|19
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|20
     local.get $value1|19
     local.get $value2|20
     f32.min
     br $~lib/math/NativeMathf.min|inlined.5
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.6 (result f32)
     f32.const 1
     local.set $value1|21
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|22
     local.get $value1|21
     local.get $value2|22
     f32.min
     br $~lib/math/NativeMathf.min|inlined.6
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.7 (result f32)
     f32.const 1
     local.set $value1|23
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|24
     local.get $value1|23
     local.get $value2|24
     f32.min
     br $~lib/math/NativeMathf.min|inlined.7
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.8 (result f32)
     f32.const 1
     local.set $value1|25
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|26
     local.get $value1|25
     local.get $value2|26
     f32.min
     br $~lib/math/NativeMathf.min|inlined.8
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.9 (result f32)
     f32.const 1
     local.set $value1|27
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|28
     local.get $value1|27
     local.get $value2|28
     f32.min
     br $~lib/math/NativeMathf.min|inlined.9
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.10 (result f32)
     f32.const 1
     local.set $value1|29
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|30
     local.get $value1|29
     local.get $value2|30
     f32.min
     br $~lib/math/NativeMathf.min|inlined.10
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.11 (result f32)
     f32.const 1
     local.set $value1|31
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|32
     local.get $value1|31
     local.get $value2|32
     f32.min
     br $~lib/math/NativeMathf.min|inlined.11
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.12 (result f32)
     f32.const 1
     local.set $value1|33
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|34
     local.get $value1|33
     local.get $value2|34
     f32.min
     br $~lib/math/NativeMathf.min|inlined.12
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.13 (result f32)
     f32.const 1
     local.set $value1|35
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|36
     local.get $value1|35
     local.get $value2|36
     f32.min
     br $~lib/math/NativeMathf.min|inlined.13
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.14 (result f32)
     f32.const 1
     local.set $value1|37
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|38
     local.get $value1|37
     local.get $value2|38
     f32.min
     br $~lib/math/NativeMathf.min|inlined.14
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    block $~lib/math/NativeMathf.min|inlined.15 (result f32)
     f32.const 1
     local.set $value1|39
     local.get $frame
     f32.convert_i32_u
     local.get $total
     f32.convert_i32_u
     f32.div
     local.set $value2|40
     local.get $value1|39
     local.get $value2|40
     f32.min
     br $~lib/math/NativeMathf.min|inlined.15
    end
    f32x4.splat
    local.set $gainv
    local.get $block
    v128.load $0
    local.set $resv
    local.get $resv
    local.get $gainv
    f32x4.mul
    local.set $resv
    local.get $block
    local.get $resv
    v128.store $0
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $frame
    i32.const 4
    i32.add
    local.set $frame
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/core/runner/Runner#get:lastMain (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/core/runner/Runner#process (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $actualTime f64)
  (local $barTime f64)
  (local $currBarIndex i32)
  (local $nextBarIndex i32)
  (local $curr i32)
  (local $main i32)
  (local $next i32)
  (local $last i32)
  (local $ctrl i32)
  (local $x i32)
  (local $this|14 i32)
  (local $time f64)
  (local $barTime|16 f64)
  (local $ctrl|17 i32)
  (local $ctrl|18 i32)
  (local $begin|19 i32)
  (local $end|20 i32)
  (local $sOut i32)
  (local $sIn i32)
  (local $vol i32)
  (local $x|24 i32)
  (local $this|25 i32)
  (local $time|26 f64)
  (local $barTime|27 f64)
  (local $ctrl|28 i32)
  (local $ctrl|29 i32)
  (local $bar i32)
  (local $found i32)
  (local $other i32)
  (local $y i32)
  (local $total i32)
  (local $begin|35 i32)
  (local $end|36 i32)
  (local $s i32)
  (local $ctrl|38 i32)
  (local $begin|39 i32)
  (local $end|40 i32)
  (local $sOut|41 i32)
  (local $sIn|42 i32)
  (local $vol|43 i32)
  (local $x|44 i32)
  (local $this|45 i32)
  (local $time|46 f64)
  (local $barTime|47 f64)
  (local $this|48 i32)
  (local $ctrl|49 i32)
  (local $tableIndex i32)
  (local $last|51 i32)
  (local $ctrl|52 i32)
  (local $begin|53 i32)
  (local $end|54 i32)
  (local $ctrl|55 i32)
  (local $bar|56 i32)
  (local $found|57 i32)
  (local $other|58 i32)
  (local $y|59 i32)
  (local $existed i32)
  (local $ctrl|61 i32)
  (local $total|62 i32)
  (local $begin|63 i32)
  (local $end|64 i32)
  (local $s|65 i32)
  (local $ctrl|66 i32)
  (local $begin|67 i32)
  (local $end|68 i32)
  (local $sOut|69 i32)
  (local $sIn|70 i32)
  (local $vol|71 i32)
  (local $x|72 i32)
  (local $this|73 i32)
  (local $time|74 f64)
  (local $barTime|75 f64)
  (local $this|76 i32)
  (local $ctrl|77 i32)
  (local $tableIndex|78 i32)
  (local $last|79 i32)
  (local $ctrl|80 i32)
  (local $begin|81 i32)
  (local $end|82 i32)
  (local $ctrl|83 i32)
  (local $bar|84 i32)
  (local $found|85 i32)
  (local $other|86 i32)
  (local $y|87 i32)
  (local $existed|88 i32)
  (local $ctrl|89 i32)
  (local $total|90 i32)
  (local $begin|91 i32)
  (local $end|92 i32)
  (local $s|93 i32)
  (local $ctrl|94 i32)
  (local $bar|95 i32)
  (local $found|96 i32)
  (local $other|97 i32)
  (local $y|98 i32)
  (local $total|99 i32)
  (local $begin|100 i32)
  (local $end|101 i32)
  (local $s|102 i32)
  (local $ctrl|103 i32)
  (local $begin|104 i32)
  (local $end|105 i32)
  (local $sOut|106 i32)
  (local $sIn|107 i32)
  (local $vol|108 i32)
  (local $x|109 i32)
  (local $this|110 i32)
  (local $time|111 f64)
  (local $barTime|112 f64)
  (local $this|113 i32)
  (local $ctrl|114 i32)
  (local $tableIndex|115 i32)
  (local $ctrl|116 i32)
  (local $total|117 i32)
  (local $begin|118 i32)
  (local $end|119 i32)
  (local $s|120 i32)
  (local $ctrl|121 i32)
  (local $begin|122 i32)
  (local $end|123 i32)
  (local $sOut|124 i32)
  (local $sIn|125 i32)
  (local $vol|126 i32)
  (local $x|127 i32)
  (local $this|128 i32)
  (local $time|129 f64)
  (local $barTime|130 f64)
  (local $this|131 i32)
  (local $ctrl|132 i32)
  (local $tableIndex|133 i32)
  (local $ctrl|134 i32)
  (local $total|135 i32)
  (local $begin|136 i32)
  (local $end|137 i32)
  (local $s|138 i32)
  (local $ctrl|139 i32)
  (local $bar|140 i32)
  (local $found|141 i32)
  (local $other|142 i32)
  (local $y|143 i32)
  (local $total|144 i32)
  (local $begin|145 i32)
  (local $end|146 i32)
  (local $s|147 i32)
  (local $ctrl|148 i32)
  (local $begin|149 i32)
  (local $end|150 i32)
  (local $sOut|151 i32)
  (local $sIn|152 i32)
  (local $vol|153 i32)
  (local $this|154 i32)
  (local $ctrl|155 i32)
  (local $tableIndex|156 i32)
  (local $this|157 i32)
  (local $time|158 f64)
  (local $barTime|159 f64)
  (local $ctrl|160 i32)
  (local $ctrl|161 i32)
  (local $begin|162 i32)
  (local $end|163 i32)
  (local $sOut|164 i32)
  (local $sIn|165 i32)
  (local $vol|166 i32)
  local.get $this
  call $assembly/core/runner/Runner#get:clock
  call $assembly/core/clock/Clock#get:time
  local.set $actualTime
  local.get $this
  call $assembly/core/runner/Runner#get:clock
  call $assembly/core/clock/Clock#get:barTime
  local.set $barTime
  local.get $barTime
  i32.trunc_sat_f64_u
  local.set $currBarIndex
  local.get $this
  call $assembly/core/runner/Runner#get:clock
  call $assembly/core/clock/Clock#get:nextBarTime
  i32.trunc_sat_f64_s
  local.set $nextBarIndex
  local.get $this
  call $assembly/core/runner/Runner#get:bars
  local.get $currBarIndex
  call $~lib/staticarray/StaticArray<assembly/core/runner/Bar|null>#__get
  local.set $curr
  local.get $curr
  i32.eqz
  if (result i32)
   i32.const 1
  else
   local.get $curr
   call $assembly/core/runner/Bar#get:size
   i32.eqz
  end
  if
   local.get $this
   call $assembly/core/runner/Runner#get:clock
   local.get $actualTime
   f64.const 128
   local.get $this
   call $assembly/core/runner/Runner#get:clock
   call $assembly/core/clock/Clock#get:timeStep
   f64.mul
   f64.add
   call $assembly/core/clock/Clock#set:time
   return
  end
  local.get $curr
  call $assembly/core/runner/Bar#get:main
  local.set $main
  local.get $nextBarIndex
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 0
  else
   local.get $this
   call $assembly/core/runner/Runner#get:bars
   local.get $nextBarIndex
   call $~lib/staticarray/StaticArray<assembly/core/runner/Bar|null>#__get
  end
  local.set $next
  local.get $this
  call $assembly/core/runner/Runner#get:last
  local.set $last
  local.get $last
  if
   local.get $last
   local.get $curr
   i32.eq
   if
    local.get $curr
    local.get $next
    i32.eq
    if
     i32.const 0
     local.set $x
     loop $for-loop|0
      local.get $x
      local.get $curr
      call $assembly/core/runner/Bar#get:size
      i32.lt_u
      if
       local.get $x
       i32.const 0
       i32.gt_u
       if
        local.get $this
        local.set $this|14
        local.get $actualTime
        local.set $time
        local.get $barTime
        local.set $barTime|16
        local.get $this|14
        call $assembly/core/runner/Runner#get:clock
        local.get $time
        call $assembly/core/clock/Clock#set:time
        local.get $this|14
        call $assembly/core/runner/Runner#get:clock
        local.get $barTime|16
        call $assembly/core/clock/Clock#set:barTime
       end
       local.get $curr
       call $assembly/core/runner/Bar#get:tracks
       local.get $x
       call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get
       local.set $ctrl
       local.get $ctrl
       local.set $ctrl|17
       local.get $ctrl|17
       call $assembly/core/runner/Ctrl#get:ownLiterals
       local.get $ctrl|17
       call $assembly/core/runner/Ctrl#get:liveLiterals
       local.get $ctrl|17
       call $assembly/core/runner/Ctrl#get:literalsCount
       i32.const 2
       i32.shl
       call $assembly/graph/copy/copyMem
       local.get $begin
       local.get $end
       local.get $ctrl
       call $assembly/core/runner/Ctrl#get:run
       call_indirect $0 (type $i32_i32_=>_none)
       local.get $ctrl
       local.set $ctrl|18
       local.get $begin
       local.set $begin|19
       local.get $end
       local.set $end|20
       local.get $out
       local.set $sOut
       local.get $ctrl|18
       call $assembly/core/runner/Ctrl#get:signal
       local.set $sIn
       local.get $ctrl|18
       call $assembly/core/runner/Ctrl#get:liveLiterals
       local.set $vol
       local.get $sIn
       call $assembly/core/runner/Signal#get:L
       if
        local.get $sIn
        call $assembly/core/runner/Signal#get:L
        local.get $sOut
        call $assembly/core/runner/Signal#get:L
        local.get $vol
        call $assembly/core/runner/Vol#get:L
        local.get $begin|19
        local.get $end|20
        local.get $sOut
        call $assembly/core/runner/Signal#get:L
        call $assembly/math/addmul_audio_audio_scalar
       end
       local.get $sIn
       call $assembly/core/runner/Signal#get:R
       if
        local.get $sIn
        call $assembly/core/runner/Signal#get:R
        local.get $sOut
        call $assembly/core/runner/Signal#get:R
        local.get $vol
        call $assembly/core/runner/Vol#get:R
        local.get $begin|19
        local.get $end|20
        local.get $sOut
        call $assembly/core/runner/Signal#get:R
        call $assembly/math/addmul_audio_audio_scalar
       end
       local.get $sIn
       call $assembly/core/runner/Signal#get:LR
       if
        local.get $sIn
        call $assembly/core/runner/Signal#get:LR
        local.get $sOut
        call $assembly/core/runner/Signal#get:LR
        local.get $vol
        call $assembly/core/runner/Vol#get:LR
        local.get $begin|19
        local.get $end|20
        local.get $sOut
        call $assembly/core/runner/Signal#get:LR
        call $assembly/math/addmul_audio_audio_scalar
       end
       local.get $x
       i32.const 1
       i32.add
       local.set $x
       br $for-loop|0
      end
     end
    else
     i32.const 0
     local.set $x|24
     loop $for-loop|1
      local.get $x|24
      local.get $curr
      call $assembly/core/runner/Bar#get:size
      i32.lt_u
      if
       local.get $x|24
       i32.const 0
       i32.gt_u
       if
        local.get $this
        local.set $this|25
        local.get $actualTime
        local.set $time|26
        local.get $barTime
        local.set $barTime|27
        local.get $this|25
        call $assembly/core/runner/Runner#get:clock
        local.get $time|26
        call $assembly/core/clock/Clock#set:time
        local.get $this|25
        call $assembly/core/runner/Runner#get:clock
        local.get $barTime|27
        call $assembly/core/clock/Clock#set:barTime
       end
       local.get $curr
       call $assembly/core/runner/Bar#get:tracks
       local.get $x|24
       call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get
       local.set $ctrl
       local.get $ctrl
       local.set $ctrl|28
       local.get $ctrl|28
       call $assembly/core/runner/Ctrl#get:ownLiterals
       local.get $ctrl|28
       call $assembly/core/runner/Ctrl#get:liveLiterals
       local.get $ctrl|28
       call $assembly/core/runner/Ctrl#get:literalsCount
       i32.const 2
       i32.shl
       call $assembly/graph/copy/copyMem
       local.get $begin
       local.get $end
       local.get $ctrl
       call $assembly/core/runner/Ctrl#get:run
       call_indirect $0 (type $i32_i32_=>_none)
       local.get $next
       i32.eqz
       if (result i32)
        i32.const 1
       else
        block $assembly/core/runner/exists|inlined.0 (result i32)
         local.get $ctrl
         local.set $ctrl|29
         local.get $next
         local.set $bar
         i32.const 0
         local.set $found
         i32.const 0
         local.set $y
         block $for-break2
          loop $for-loop|2
           local.get $y
           local.get $bar
           call $assembly/core/runner/Bar#get:size
           i32.lt_u
           if
            local.get $bar
            call $assembly/core/runner/Bar#get:tracks
            local.get $y
            call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get
            local.set $other
            local.get $ctrl|29
            call $assembly/core/runner/Ctrl#get:id
            local.get $other
            call $assembly/core/runner/Ctrl#get:id
            i32.eq
            if
             i32.const 1
             local.set $found
             br $for-break2
            end
            local.get $y
            i32.const 1
            i32.add
            local.set $y
            br $for-loop|2
           end
          end
         end
         local.get $found
         br $assembly/core/runner/exists|inlined.0
        end
        i32.eqz
       end
       if
        i32.const 128
        local.set $total
        local.get $begin
        local.set $begin|35
        local.get $end
        local.set $end|36
        local.get $ctrl
        call $assembly/core/runner/Ctrl#get:signal
        local.set $s
        local.get $s
        call $assembly/core/runner/Signal#get:L
        if
         local.get $total
         local.get $begin|35
         local.get $end|36
         local.get $s
         call $assembly/core/runner/Signal#get:L
         call $assembly/graph/fade/fadeOut
        end
        local.get $s
        call $assembly/core/runner/Signal#get:R
        if
         local.get $total
         local.get $begin|35
         local.get $end|36
         local.get $s
         call $assembly/core/runner/Signal#get:R
         call $assembly/graph/fade/fadeOut
        end
        local.get $s
        call $assembly/core/runner/Signal#get:LR
        if
         local.get $total
         local.get $begin|35
         local.get $end|36
         local.get $s
         call $assembly/core/runner/Signal#get:LR
         call $assembly/graph/fade/fadeOut
        end
       end
       local.get $ctrl
       local.set $ctrl|38
       local.get $begin
       local.set $begin|39
       local.get $end
       local.set $end|40
       local.get $out
       local.set $sOut|41
       local.get $ctrl|38
       call $assembly/core/runner/Ctrl#get:signal
       local.set $sIn|42
       local.get $ctrl|38
       call $assembly/core/runner/Ctrl#get:liveLiterals
       local.set $vol|43
       local.get $sIn|42
       call $assembly/core/runner/Signal#get:L
       if
        local.get $sIn|42
        call $assembly/core/runner/Signal#get:L
        local.get $sOut|41
        call $assembly/core/runner/Signal#get:L
        local.get $vol|43
        call $assembly/core/runner/Vol#get:L
        local.get $begin|39
        local.get $end|40
        local.get $sOut|41
        call $assembly/core/runner/Signal#get:L
        call $assembly/math/addmul_audio_audio_scalar
       end
       local.get $sIn|42
       call $assembly/core/runner/Signal#get:R
       if
        local.get $sIn|42
        call $assembly/core/runner/Signal#get:R
        local.get $sOut|41
        call $assembly/core/runner/Signal#get:R
        local.get $vol|43
        call $assembly/core/runner/Vol#get:R
        local.get $begin|39
        local.get $end|40
        local.get $sOut|41
        call $assembly/core/runner/Signal#get:R
        call $assembly/math/addmul_audio_audio_scalar
       end
       local.get $sIn|42
       call $assembly/core/runner/Signal#get:LR
       if
        local.get $sIn|42
        call $assembly/core/runner/Signal#get:LR
        local.get $sOut|41
        call $assembly/core/runner/Signal#get:LR
        local.get $vol|43
        call $assembly/core/runner/Vol#get:LR
        local.get $begin|39
        local.get $end|40
        local.get $sOut|41
        call $assembly/core/runner/Signal#get:LR
        call $assembly/math/addmul_audio_audio_scalar
       end
       local.get $x|24
       i32.const 1
       i32.add
       local.set $x|24
       br $for-loop|1
      end
     end
    end
   else
    local.get $curr
    local.get $next
    i32.eq
    if
     i32.const 0
     local.set $x|44
     loop $for-loop|3
      local.get $x|44
      local.get $curr
      call $assembly/core/runner/Bar#get:size
      i32.lt_u
      if
       local.get $x|44
       i32.const 0
       i32.gt_u
       if
        local.get $this
        local.set $this|45
        local.get $actualTime
        local.set $time|46
        local.get $barTime
        local.set $barTime|47
        local.get $this|45
        call $assembly/core/runner/Runner#get:clock
        local.get $time|46
        call $assembly/core/clock/Clock#set:time
        local.get $this|45
        call $assembly/core/runner/Runner#get:clock
        local.get $barTime|47
        call $assembly/core/clock/Clock#set:barTime
       end
       local.get $curr
       call $assembly/core/runner/Bar#get:tracks
       local.get $x|44
       call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get
       local.set $ctrl
       local.get $this
       local.set $this|48
       local.get $ctrl
       local.set $ctrl|49
       local.get $this|48
       call $assembly/core/runner/Runner#get:tableIndex
       local.set $tableIndex
       local.get $ctrl|49
       call $assembly/core/runner/Ctrl#get:id
       local.get $tableIndex
       call $assembly/env/setCtrlInstanceAt
       drop
       local.get $ctrl|49
       local.get $tableIndex
       call $assembly/core/runner/Ctrl#set:tableIndex
       local.get $tableIndex
       i32.const 2
       i32.add
       local.set $tableIndex
       local.get $tableIndex
       i32.const 128
       i32.eq
       if
        i32.const 0
        local.set $tableIndex
       end
       local.get $this|48
       local.get $tableIndex
       call $assembly/core/runner/Runner#set:tableIndex
       local.get $last
       local.set $last|51
       local.get $ctrl
       local.set $ctrl|52
       local.get $begin
       local.set $begin|53
       local.get $end
       local.set $end|54
       block $assembly/core/runner/exists|inlined.1 (result i32)
        local.get $ctrl|52
        local.set $ctrl|55
        local.get $last|51
        local.set $bar|56
        i32.const 0
        local.set $found|57
        i32.const 0
        local.set $y|59
        block $for-break4
         loop $for-loop|4
          local.get $y|59
          local.get $bar|56
          call $assembly/core/runner/Bar#get:size
          i32.lt_u
          if
           local.get $bar|56
           call $assembly/core/runner/Bar#get:tracks
           local.get $y|59
           call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get
           local.set $other|58
           local.get $ctrl|55
           call $assembly/core/runner/Ctrl#get:id
           local.get $other|58
           call $assembly/core/runner/Ctrl#get:id
           i32.eq
           if
            i32.const 1
            local.set $found|57
            br $for-break4
           end
           local.get $y|59
           i32.const 1
           i32.add
           local.set $y|59
           br $for-loop|4
          end
         end
        end
        local.get $found|57
        br $assembly/core/runner/exists|inlined.1
       end
       local.set $existed
       local.get $existed
       i32.eqz
       if
        local.get $ctrl|52
        call $assembly/core/runner/Ctrl#get:id
        call $assembly/env/resetCtrlInstance
        drop
       end
       local.get $ctrl|52
       local.set $ctrl|61
       local.get $ctrl|61
       call $assembly/core/runner/Ctrl#get:ownLiterals
       local.get $ctrl|61
       call $assembly/core/runner/Ctrl#get:liveLiterals
       local.get $ctrl|61
       call $assembly/core/runner/Ctrl#get:literalsCount
       i32.const 2
       i32.shl
       call $assembly/graph/copy/copyMem
       local.get $begin|53
       local.get $end|54
       local.get $ctrl|52
       call $assembly/core/runner/Ctrl#get:run
       call_indirect $0 (type $i32_i32_=>_none)
       local.get $existed
       i32.eqz
       if
        i32.const 8
        local.set $total|62
        local.get $begin|53
        local.set $begin|63
        local.get $end|54
        local.set $end|64
        local.get $ctrl|52
        call $assembly/core/runner/Ctrl#get:signal
        local.set $s|65
        local.get $s|65
        call $assembly/core/runner/Signal#get:L
        if
         local.get $total|62
         local.get $begin|63
         local.get $end|64
         local.get $s|65
         call $assembly/core/runner/Signal#get:L
         call $assembly/graph/fade/fadeIn
        end
        local.get $s|65
        call $assembly/core/runner/Signal#get:R
        if
         local.get $total|62
         local.get $begin|63
         local.get $end|64
         local.get $s|65
         call $assembly/core/runner/Signal#get:R
         call $assembly/graph/fade/fadeIn
        end
        local.get $s|65
        call $assembly/core/runner/Signal#get:LR
        if
         local.get $total|62
         local.get $begin|63
         local.get $end|64
         local.get $s|65
         call $assembly/core/runner/Signal#get:LR
         call $assembly/graph/fade/fadeIn
        end
       end
       local.get $ctrl
       local.set $ctrl|66
       local.get $begin
       local.set $begin|67
       local.get $end
       local.set $end|68
       local.get $out
       local.set $sOut|69
       local.get $ctrl|66
       call $assembly/core/runner/Ctrl#get:signal
       local.set $sIn|70
       local.get $ctrl|66
       call $assembly/core/runner/Ctrl#get:liveLiterals
       local.set $vol|71
       local.get $sIn|70
       call $assembly/core/runner/Signal#get:L
       if
        local.get $sIn|70
        call $assembly/core/runner/Signal#get:L
        local.get $sOut|69
        call $assembly/core/runner/Signal#get:L
        local.get $vol|71
        call $assembly/core/runner/Vol#get:L
        local.get $begin|67
        local.get $end|68
        local.get $sOut|69
        call $assembly/core/runner/Signal#get:L
        call $assembly/math/addmul_audio_audio_scalar
       end
       local.get $sIn|70
       call $assembly/core/runner/Signal#get:R
       if
        local.get $sIn|70
        call $assembly/core/runner/Signal#get:R
        local.get $sOut|69
        call $assembly/core/runner/Signal#get:R
        local.get $vol|71
        call $assembly/core/runner/Vol#get:R
        local.get $begin|67
        local.get $end|68
        local.get $sOut|69
        call $assembly/core/runner/Signal#get:R
        call $assembly/math/addmul_audio_audio_scalar
       end
       local.get $sIn|70
       call $assembly/core/runner/Signal#get:LR
       if
        local.get $sIn|70
        call $assembly/core/runner/Signal#get:LR
        local.get $sOut|69
        call $assembly/core/runner/Signal#get:LR
        local.get $vol|71
        call $assembly/core/runner/Vol#get:LR
        local.get $begin|67
        local.get $end|68
        local.get $sOut|69
        call $assembly/core/runner/Signal#get:LR
        call $assembly/math/addmul_audio_audio_scalar
       end
       local.get $x|44
       i32.const 1
       i32.add
       local.set $x|44
       br $for-loop|3
      end
     end
     local.get $this
     i32.const 0
     call $assembly/core/runner/Runner#set:lastMain
    else
     i32.const 0
     local.set $x|72
     loop $for-loop|5
      local.get $x|72
      local.get $curr
      call $assembly/core/runner/Bar#get:size
      i32.lt_u
      if
       local.get $x|72
       i32.const 0
       i32.gt_u
       if
        local.get $this
        local.set $this|73
        local.get $actualTime
        local.set $time|74
        local.get $barTime
        local.set $barTime|75
        local.get $this|73
        call $assembly/core/runner/Runner#get:clock
        local.get $time|74
        call $assembly/core/clock/Clock#set:time
        local.get $this|73
        call $assembly/core/runner/Runner#get:clock
        local.get $barTime|75
        call $assembly/core/clock/Clock#set:barTime
       end
       local.get $curr
       call $assembly/core/runner/Bar#get:tracks
       local.get $x|72
       call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get
       local.set $ctrl
       local.get $this
       local.set $this|76
       local.get $ctrl
       local.set $ctrl|77
       local.get $this|76
       call $assembly/core/runner/Runner#get:tableIndex
       local.set $tableIndex|78
       local.get $ctrl|77
       call $assembly/core/runner/Ctrl#get:id
       local.get $tableIndex|78
       call $assembly/env/setCtrlInstanceAt
       drop
       local.get $ctrl|77
       local.get $tableIndex|78
       call $assembly/core/runner/Ctrl#set:tableIndex
       local.get $tableIndex|78
       i32.const 2
       i32.add
       local.set $tableIndex|78
       local.get $tableIndex|78
       i32.const 128
       i32.eq
       if
        i32.const 0
        local.set $tableIndex|78
       end
       local.get $this|76
       local.get $tableIndex|78
       call $assembly/core/runner/Runner#set:tableIndex
       local.get $last
       local.set $last|79
       local.get $ctrl
       local.set $ctrl|80
       local.get $begin
       local.set $begin|81
       local.get $end
       local.set $end|82
       block $assembly/core/runner/exists|inlined.2 (result i32)
        local.get $ctrl|80
        local.set $ctrl|83
        local.get $last|79
        local.set $bar|84
        i32.const 0
        local.set $found|85
        i32.const 0
        local.set $y|87
        block $for-break6
         loop $for-loop|6
          local.get $y|87
          local.get $bar|84
          call $assembly/core/runner/Bar#get:size
          i32.lt_u
          if
           local.get $bar|84
           call $assembly/core/runner/Bar#get:tracks
           local.get $y|87
           call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get
           local.set $other|86
           local.get $ctrl|83
           call $assembly/core/runner/Ctrl#get:id
           local.get $other|86
           call $assembly/core/runner/Ctrl#get:id
           i32.eq
           if
            i32.const 1
            local.set $found|85
            br $for-break6
           end
           local.get $y|87
           i32.const 1
           i32.add
           local.set $y|87
           br $for-loop|6
          end
         end
        end
        local.get $found|85
        br $assembly/core/runner/exists|inlined.2
       end
       local.set $existed|88
       local.get $existed|88
       i32.eqz
       if
        local.get $ctrl|80
        call $assembly/core/runner/Ctrl#get:id
        call $assembly/env/resetCtrlInstance
        drop
       end
       local.get $ctrl|80
       local.set $ctrl|89
       local.get $ctrl|89
       call $assembly/core/runner/Ctrl#get:ownLiterals
       local.get $ctrl|89
       call $assembly/core/runner/Ctrl#get:liveLiterals
       local.get $ctrl|89
       call $assembly/core/runner/Ctrl#get:literalsCount
       i32.const 2
       i32.shl
       call $assembly/graph/copy/copyMem
       local.get $begin|81
       local.get $end|82
       local.get $ctrl|80
       call $assembly/core/runner/Ctrl#get:run
       call_indirect $0 (type $i32_i32_=>_none)
       local.get $existed|88
       i32.eqz
       if
        i32.const 8
        local.set $total|90
        local.get $begin|81
        local.set $begin|91
        local.get $end|82
        local.set $end|92
        local.get $ctrl|80
        call $assembly/core/runner/Ctrl#get:signal
        local.set $s|93
        local.get $s|93
        call $assembly/core/runner/Signal#get:L
        if
         local.get $total|90
         local.get $begin|91
         local.get $end|92
         local.get $s|93
         call $assembly/core/runner/Signal#get:L
         call $assembly/graph/fade/fadeIn
        end
        local.get $s|93
        call $assembly/core/runner/Signal#get:R
        if
         local.get $total|90
         local.get $begin|91
         local.get $end|92
         local.get $s|93
         call $assembly/core/runner/Signal#get:R
         call $assembly/graph/fade/fadeIn
        end
        local.get $s|93
        call $assembly/core/runner/Signal#get:LR
        if
         local.get $total|90
         local.get $begin|91
         local.get $end|92
         local.get $s|93
         call $assembly/core/runner/Signal#get:LR
         call $assembly/graph/fade/fadeIn
        end
       end
       local.get $next
       i32.eqz
       if (result i32)
        i32.const 1
       else
        block $assembly/core/runner/exists|inlined.3 (result i32)
         local.get $ctrl
         local.set $ctrl|94
         local.get $next
         local.set $bar|95
         i32.const 0
         local.set $found|96
         i32.const 0
         local.set $y|98
         block $for-break7
          loop $for-loop|7
           local.get $y|98
           local.get $bar|95
           call $assembly/core/runner/Bar#get:size
           i32.lt_u
           if
            local.get $bar|95
            call $assembly/core/runner/Bar#get:tracks
            local.get $y|98
            call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get
            local.set $other|97
            local.get $ctrl|94
            call $assembly/core/runner/Ctrl#get:id
            local.get $other|97
            call $assembly/core/runner/Ctrl#get:id
            i32.eq
            if
             i32.const 1
             local.set $found|96
             br $for-break7
            end
            local.get $y|98
            i32.const 1
            i32.add
            local.set $y|98
            br $for-loop|7
           end
          end
         end
         local.get $found|96
         br $assembly/core/runner/exists|inlined.3
        end
        i32.eqz
       end
       if
        i32.const 128
        local.set $total|99
        local.get $begin
        local.set $begin|100
        local.get $end
        local.set $end|101
        local.get $ctrl
        call $assembly/core/runner/Ctrl#get:signal
        local.set $s|102
        local.get $s|102
        call $assembly/core/runner/Signal#get:L
        if
         local.get $total|99
         local.get $begin|100
         local.get $end|101
         local.get $s|102
         call $assembly/core/runner/Signal#get:L
         call $assembly/graph/fade/fadeOut
        end
        local.get $s|102
        call $assembly/core/runner/Signal#get:R
        if
         local.get $total|99
         local.get $begin|100
         local.get $end|101
         local.get $s|102
         call $assembly/core/runner/Signal#get:R
         call $assembly/graph/fade/fadeOut
        end
        local.get $s|102
        call $assembly/core/runner/Signal#get:LR
        if
         local.get $total|99
         local.get $begin|100
         local.get $end|101
         local.get $s|102
         call $assembly/core/runner/Signal#get:LR
         call $assembly/graph/fade/fadeOut
        end
       end
       local.get $ctrl
       local.set $ctrl|103
       local.get $begin
       local.set $begin|104
       local.get $end
       local.set $end|105
       local.get $out
       local.set $sOut|106
       local.get $ctrl|103
       call $assembly/core/runner/Ctrl#get:signal
       local.set $sIn|107
       local.get $ctrl|103
       call $assembly/core/runner/Ctrl#get:liveLiterals
       local.set $vol|108
       local.get $sIn|107
       call $assembly/core/runner/Signal#get:L
       if
        local.get $sIn|107
        call $assembly/core/runner/Signal#get:L
        local.get $sOut|106
        call $assembly/core/runner/Signal#get:L
        local.get $vol|108
        call $assembly/core/runner/Vol#get:L
        local.get $begin|104
        local.get $end|105
        local.get $sOut|106
        call $assembly/core/runner/Signal#get:L
        call $assembly/math/addmul_audio_audio_scalar
       end
       local.get $sIn|107
       call $assembly/core/runner/Signal#get:R
       if
        local.get $sIn|107
        call $assembly/core/runner/Signal#get:R
        local.get $sOut|106
        call $assembly/core/runner/Signal#get:R
        local.get $vol|108
        call $assembly/core/runner/Vol#get:R
        local.get $begin|104
        local.get $end|105
        local.get $sOut|106
        call $assembly/core/runner/Signal#get:R
        call $assembly/math/addmul_audio_audio_scalar
       end
       local.get $sIn|107
       call $assembly/core/runner/Signal#get:LR
       if
        local.get $sIn|107
        call $assembly/core/runner/Signal#get:LR
        local.get $sOut|106
        call $assembly/core/runner/Signal#get:LR
        local.get $vol|108
        call $assembly/core/runner/Vol#get:LR
        local.get $begin|104
        local.get $end|105
        local.get $sOut|106
        call $assembly/core/runner/Signal#get:LR
        call $assembly/math/addmul_audio_audio_scalar
       end
       local.get $x|72
       i32.const 1
       i32.add
       local.set $x|72
       br $for-loop|5
      end
     end
     local.get $this
     i32.const 0
     call $assembly/core/runner/Runner#set:lastMain
    end
   end
  else
   local.get $curr
   local.get $next
   i32.eq
   if
    i32.const 0
    local.set $x|109
    loop $for-loop|8
     local.get $x|109
     local.get $curr
     call $assembly/core/runner/Bar#get:size
     i32.lt_u
     if
      local.get $x|109
      i32.const 0
      i32.gt_u
      if
       local.get $this
       local.set $this|110
       local.get $actualTime
       local.set $time|111
       local.get $barTime
       local.set $barTime|112
       local.get $this|110
       call $assembly/core/runner/Runner#get:clock
       local.get $time|111
       call $assembly/core/clock/Clock#set:time
       local.get $this|110
       call $assembly/core/runner/Runner#get:clock
       local.get $barTime|112
       call $assembly/core/clock/Clock#set:barTime
      end
      local.get $curr
      call $assembly/core/runner/Bar#get:tracks
      local.get $x|109
      call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get
      local.set $ctrl
      local.get $this
      local.set $this|113
      local.get $ctrl
      local.set $ctrl|114
      local.get $this|113
      call $assembly/core/runner/Runner#get:tableIndex
      local.set $tableIndex|115
      local.get $ctrl|114
      call $assembly/core/runner/Ctrl#get:id
      local.get $tableIndex|115
      call $assembly/env/setCtrlInstanceAt
      drop
      local.get $ctrl|114
      local.get $tableIndex|115
      call $assembly/core/runner/Ctrl#set:tableIndex
      local.get $tableIndex|115
      i32.const 2
      i32.add
      local.set $tableIndex|115
      local.get $tableIndex|115
      i32.const 128
      i32.eq
      if
       i32.const 0
       local.set $tableIndex|115
      end
      local.get $this|113
      local.get $tableIndex|115
      call $assembly/core/runner/Runner#set:tableIndex
      local.get $ctrl
      call $assembly/core/runner/Ctrl#get:id
      call $assembly/env/resetCtrlInstance
      drop
      local.get $ctrl
      local.set $ctrl|116
      local.get $ctrl|116
      call $assembly/core/runner/Ctrl#get:ownLiterals
      local.get $ctrl|116
      call $assembly/core/runner/Ctrl#get:liveLiterals
      local.get $ctrl|116
      call $assembly/core/runner/Ctrl#get:literalsCount
      i32.const 2
      i32.shl
      call $assembly/graph/copy/copyMem
      local.get $begin
      local.get $end
      local.get $ctrl
      call $assembly/core/runner/Ctrl#get:run
      call_indirect $0 (type $i32_i32_=>_none)
      i32.const 32
      local.set $total|117
      local.get $begin
      local.set $begin|118
      local.get $end
      local.set $end|119
      local.get $ctrl
      call $assembly/core/runner/Ctrl#get:signal
      local.set $s|120
      local.get $s|120
      call $assembly/core/runner/Signal#get:L
      if
       local.get $total|117
       local.get $begin|118
       local.get $end|119
       local.get $s|120
       call $assembly/core/runner/Signal#get:L
       call $assembly/graph/fade/fadeIn
      end
      local.get $s|120
      call $assembly/core/runner/Signal#get:R
      if
       local.get $total|117
       local.get $begin|118
       local.get $end|119
       local.get $s|120
       call $assembly/core/runner/Signal#get:R
       call $assembly/graph/fade/fadeIn
      end
      local.get $s|120
      call $assembly/core/runner/Signal#get:LR
      if
       local.get $total|117
       local.get $begin|118
       local.get $end|119
       local.get $s|120
       call $assembly/core/runner/Signal#get:LR
       call $assembly/graph/fade/fadeIn
      end
      local.get $ctrl
      local.set $ctrl|121
      local.get $begin
      local.set $begin|122
      local.get $end
      local.set $end|123
      local.get $out
      local.set $sOut|124
      local.get $ctrl|121
      call $assembly/core/runner/Ctrl#get:signal
      local.set $sIn|125
      local.get $ctrl|121
      call $assembly/core/runner/Ctrl#get:liveLiterals
      local.set $vol|126
      local.get $sIn|125
      call $assembly/core/runner/Signal#get:L
      if
       local.get $sIn|125
       call $assembly/core/runner/Signal#get:L
       local.get $sOut|124
       call $assembly/core/runner/Signal#get:L
       local.get $vol|126
       call $assembly/core/runner/Vol#get:L
       local.get $begin|122
       local.get $end|123
       local.get $sOut|124
       call $assembly/core/runner/Signal#get:L
       call $assembly/math/addmul_audio_audio_scalar
      end
      local.get $sIn|125
      call $assembly/core/runner/Signal#get:R
      if
       local.get $sIn|125
       call $assembly/core/runner/Signal#get:R
       local.get $sOut|124
       call $assembly/core/runner/Signal#get:R
       local.get $vol|126
       call $assembly/core/runner/Vol#get:R
       local.get $begin|122
       local.get $end|123
       local.get $sOut|124
       call $assembly/core/runner/Signal#get:R
       call $assembly/math/addmul_audio_audio_scalar
      end
      local.get $sIn|125
      call $assembly/core/runner/Signal#get:LR
      if
       local.get $sIn|125
       call $assembly/core/runner/Signal#get:LR
       local.get $sOut|124
       call $assembly/core/runner/Signal#get:LR
       local.get $vol|126
       call $assembly/core/runner/Vol#get:LR
       local.get $begin|122
       local.get $end|123
       local.get $sOut|124
       call $assembly/core/runner/Signal#get:LR
       call $assembly/math/addmul_audio_audio_scalar
      end
      local.get $x|109
      i32.const 1
      i32.add
      local.set $x|109
      br $for-loop|8
     end
    end
    local.get $this
    i32.const 0
    call $assembly/core/runner/Runner#set:lastMain
   else
    i32.const 0
    local.set $x|127
    loop $for-loop|9
     local.get $x|127
     local.get $curr
     call $assembly/core/runner/Bar#get:size
     i32.lt_u
     if
      local.get $x|127
      i32.const 0
      i32.gt_u
      if
       local.get $this
       local.set $this|128
       local.get $actualTime
       local.set $time|129
       local.get $barTime
       local.set $barTime|130
       local.get $this|128
       call $assembly/core/runner/Runner#get:clock
       local.get $time|129
       call $assembly/core/clock/Clock#set:time
       local.get $this|128
       call $assembly/core/runner/Runner#get:clock
       local.get $barTime|130
       call $assembly/core/clock/Clock#set:barTime
      end
      local.get $curr
      call $assembly/core/runner/Bar#get:tracks
      local.get $x|127
      call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get
      local.set $ctrl
      local.get $this
      local.set $this|131
      local.get $ctrl
      local.set $ctrl|132
      local.get $this|131
      call $assembly/core/runner/Runner#get:tableIndex
      local.set $tableIndex|133
      local.get $ctrl|132
      call $assembly/core/runner/Ctrl#get:id
      local.get $tableIndex|133
      call $assembly/env/setCtrlInstanceAt
      drop
      local.get $ctrl|132
      local.get $tableIndex|133
      call $assembly/core/runner/Ctrl#set:tableIndex
      local.get $tableIndex|133
      i32.const 2
      i32.add
      local.set $tableIndex|133
      local.get $tableIndex|133
      i32.const 128
      i32.eq
      if
       i32.const 0
       local.set $tableIndex|133
      end
      local.get $this|131
      local.get $tableIndex|133
      call $assembly/core/runner/Runner#set:tableIndex
      local.get $ctrl
      call $assembly/core/runner/Ctrl#get:id
      call $assembly/env/resetCtrlInstance
      drop
      local.get $ctrl
      local.set $ctrl|134
      local.get $ctrl|134
      call $assembly/core/runner/Ctrl#get:ownLiterals
      local.get $ctrl|134
      call $assembly/core/runner/Ctrl#get:liveLiterals
      local.get $ctrl|134
      call $assembly/core/runner/Ctrl#get:literalsCount
      i32.const 2
      i32.shl
      call $assembly/graph/copy/copyMem
      local.get $begin
      local.get $end
      local.get $ctrl
      call $assembly/core/runner/Ctrl#get:run
      call_indirect $0 (type $i32_i32_=>_none)
      i32.const 32
      local.set $total|135
      local.get $begin
      local.set $begin|136
      local.get $end
      local.set $end|137
      local.get $ctrl
      call $assembly/core/runner/Ctrl#get:signal
      local.set $s|138
      local.get $s|138
      call $assembly/core/runner/Signal#get:L
      if
       local.get $total|135
       local.get $begin|136
       local.get $end|137
       local.get $s|138
       call $assembly/core/runner/Signal#get:L
       call $assembly/graph/fade/fadeIn
      end
      local.get $s|138
      call $assembly/core/runner/Signal#get:R
      if
       local.get $total|135
       local.get $begin|136
       local.get $end|137
       local.get $s|138
       call $assembly/core/runner/Signal#get:R
       call $assembly/graph/fade/fadeIn
      end
      local.get $s|138
      call $assembly/core/runner/Signal#get:LR
      if
       local.get $total|135
       local.get $begin|136
       local.get $end|137
       local.get $s|138
       call $assembly/core/runner/Signal#get:LR
       call $assembly/graph/fade/fadeIn
      end
      local.get $next
      i32.eqz
      if (result i32)
       i32.const 1
      else
       block $assembly/core/runner/exists|inlined.4 (result i32)
        local.get $ctrl
        local.set $ctrl|139
        local.get $next
        local.set $bar|140
        i32.const 0
        local.set $found|141
        i32.const 0
        local.set $y|143
        block $for-break10
         loop $for-loop|10
          local.get $y|143
          local.get $bar|140
          call $assembly/core/runner/Bar#get:size
          i32.lt_u
          if
           local.get $bar|140
           call $assembly/core/runner/Bar#get:tracks
           local.get $y|143
           call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get
           local.set $other|142
           local.get $ctrl|139
           call $assembly/core/runner/Ctrl#get:id
           local.get $other|142
           call $assembly/core/runner/Ctrl#get:id
           i32.eq
           if
            i32.const 1
            local.set $found|141
            br $for-break10
           end
           local.get $y|143
           i32.const 1
           i32.add
           local.set $y|143
           br $for-loop|10
          end
         end
        end
        local.get $found|141
        br $assembly/core/runner/exists|inlined.4
       end
       i32.eqz
      end
      if
       i32.const 128
       local.set $total|144
       local.get $begin
       local.set $begin|145
       local.get $end
       local.set $end|146
       local.get $ctrl
       call $assembly/core/runner/Ctrl#get:signal
       local.set $s|147
       local.get $s|147
       call $assembly/core/runner/Signal#get:L
       if
        local.get $total|144
        local.get $begin|145
        local.get $end|146
        local.get $s|147
        call $assembly/core/runner/Signal#get:L
        call $assembly/graph/fade/fadeOut
       end
       local.get $s|147
       call $assembly/core/runner/Signal#get:R
       if
        local.get $total|144
        local.get $begin|145
        local.get $end|146
        local.get $s|147
        call $assembly/core/runner/Signal#get:R
        call $assembly/graph/fade/fadeOut
       end
       local.get $s|147
       call $assembly/core/runner/Signal#get:LR
       if
        local.get $total|144
        local.get $begin|145
        local.get $end|146
        local.get $s|147
        call $assembly/core/runner/Signal#get:LR
        call $assembly/graph/fade/fadeOut
       end
      end
      local.get $ctrl
      local.set $ctrl|148
      local.get $begin
      local.set $begin|149
      local.get $end
      local.set $end|150
      local.get $out
      local.set $sOut|151
      local.get $ctrl|148
      call $assembly/core/runner/Ctrl#get:signal
      local.set $sIn|152
      local.get $ctrl|148
      call $assembly/core/runner/Ctrl#get:liveLiterals
      local.set $vol|153
      local.get $sIn|152
      call $assembly/core/runner/Signal#get:L
      if
       local.get $sIn|152
       call $assembly/core/runner/Signal#get:L
       local.get $sOut|151
       call $assembly/core/runner/Signal#get:L
       local.get $vol|153
       call $assembly/core/runner/Vol#get:L
       local.get $begin|149
       local.get $end|150
       local.get $sOut|151
       call $assembly/core/runner/Signal#get:L
       call $assembly/math/addmul_audio_audio_scalar
      end
      local.get $sIn|152
      call $assembly/core/runner/Signal#get:R
      if
       local.get $sIn|152
       call $assembly/core/runner/Signal#get:R
       local.get $sOut|151
       call $assembly/core/runner/Signal#get:R
       local.get $vol|153
       call $assembly/core/runner/Vol#get:R
       local.get $begin|149
       local.get $end|150
       local.get $sOut|151
       call $assembly/core/runner/Signal#get:R
       call $assembly/math/addmul_audio_audio_scalar
      end
      local.get $sIn|152
      call $assembly/core/runner/Signal#get:LR
      if
       local.get $sIn|152
       call $assembly/core/runner/Signal#get:LR
       local.get $sOut|151
       call $assembly/core/runner/Signal#get:LR
       local.get $vol|153
       call $assembly/core/runner/Vol#get:LR
       local.get $begin|149
       local.get $end|150
       local.get $sOut|151
       call $assembly/core/runner/Signal#get:LR
       call $assembly/math/addmul_audio_audio_scalar
      end
      local.get $x|127
      i32.const 1
      i32.add
      local.set $x|127
      br $for-loop|9
     end
    end
    local.get $this
    i32.const 0
    call $assembly/core/runner/Runner#set:lastMain
   end
  end
  local.get $main
  local.get $this
  call $assembly/core/runner/Runner#get:lastMain
  i32.ne
  if
   local.get $this
   local.get $main
   call $assembly/core/runner/Runner#set:lastMain
   local.get $main
   if
    local.get $this
    local.set $this|154
    local.get $main
    local.set $ctrl|155
    local.get $this|154
    call $assembly/core/runner/Runner#get:tableIndex
    local.set $tableIndex|156
    local.get $ctrl|155
    call $assembly/core/runner/Ctrl#get:id
    local.get $tableIndex|156
    call $assembly/env/setCtrlInstanceAt
    drop
    local.get $ctrl|155
    local.get $tableIndex|156
    call $assembly/core/runner/Ctrl#set:tableIndex
    local.get $tableIndex|156
    i32.const 2
    i32.add
    local.set $tableIndex|156
    local.get $tableIndex|156
    i32.const 128
    i32.eq
    if
     i32.const 0
     local.set $tableIndex|156
    end
    local.get $this|154
    local.get $tableIndex|156
    call $assembly/core/runner/Runner#set:tableIndex
   end
  end
  local.get $this
  local.set $this|157
  local.get $actualTime
  local.set $time|158
  local.get $barTime
  local.set $barTime|159
  local.get $this|157
  call $assembly/core/runner/Runner#get:clock
  local.get $time|158
  call $assembly/core/clock/Clock#set:time
  local.get $this|157
  call $assembly/core/runner/Runner#get:clock
  local.get $barTime|159
  call $assembly/core/clock/Clock#set:barTime
  local.get $main
  local.set $ctrl|160
  local.get $ctrl|160
  call $assembly/core/runner/Ctrl#get:ownLiterals
  local.get $ctrl|160
  call $assembly/core/runner/Ctrl#get:liveLiterals
  local.get $ctrl|160
  call $assembly/core/runner/Ctrl#get:literalsCount
  i32.const 2
  i32.shl
  call $assembly/graph/copy/copyMem
  local.get $begin
  local.get $end
  local.get $main
  call $assembly/core/runner/Ctrl#get:run
  call_indirect $0 (type $i32_i32_=>_none)
  local.get $main
  local.set $ctrl|161
  local.get $begin
  local.set $begin|162
  local.get $end
  local.set $end|163
  local.get $out
  local.set $sOut|164
  local.get $ctrl|161
  call $assembly/core/runner/Ctrl#get:signal
  local.set $sIn|165
  local.get $ctrl|161
  call $assembly/core/runner/Ctrl#get:liveLiterals
  local.set $vol|166
  local.get $sIn|165
  call $assembly/core/runner/Signal#get:L
  local.get $vol|166
  call $assembly/core/runner/Vol#get:L
  local.get $begin|162
  local.get $end|163
  local.get $sOut|164
  call $assembly/core/runner/Signal#get:L
  call $assembly/math/mul_audio_scalar
  local.get $sIn|165
  call $assembly/core/runner/Signal#get:R
  local.get $vol|166
  call $assembly/core/runner/Vol#get:L
  local.get $begin|162
  local.get $end|163
  local.get $sOut|164
  call $assembly/core/runner/Signal#get:R
  call $assembly/math/mul_audio_scalar
  local.get $this
  local.get $curr
  call $assembly/core/runner/Runner#set:last
 )
 (func $assembly/gen/gen/Gen#set:_engine (param $this i32) (param $_engine i32)
  local.get $this
  local.get $_engine
  i32.store $0 offset=4
  local.get $this
  local.get $_engine
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/gen/Gen#set:gain (param $this i32) (param $gain f32)
  local.get $this
  local.get $gain
  f32.store $0
 )
 (func $assembly/gen/gen/Gen#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 8
   i32.const 8
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#set:_engine
  local.get $this
  f32.const 1
  call $assembly/gen/gen/Gen#set:gain
  local.get $this
 )
 (func $assembly/gen/zero/Zero#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 8
   i32.const 22
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/zero/Zero> (result i32)
  i32.const 8
  return
 )
 (func $~lib/staticarray/StaticArray<i32>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 1048768
   i32.const 1048816
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 2
  i32.shl
  local.set $outSize
  local.get $outSize
  i32.const 6
  call $~lib/rt/stub/__new
  local.set $out
  i32.const 0
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  i32.const 0
  local.get $outSize
  memory.fill $0
  local.get $out
  return
 )
 (func $~lib/array/Array<~lib/staticarray/StaticArray<i32>>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<~lib/staticarray/StaticArray<i32>>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<~lib/staticarray/StaticArray<i32>>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<~lib/staticarray/StaticArray<i32>>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  local.get $this
  call $~lib/array/Array<~lib/staticarray/StaticArray<i32>>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  call $~lib/array/Array<~lib/staticarray/StaticArray<i32>>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/stub/__link
  local.get $this
  local.get $len
  call $~lib/array/Array<~lib/staticarray/StaticArray<i32>>#set:length_
  local.get $len
  return
 )
 (func $assembly/util/cloneI32 (param $src i32) (param $size i32) (result i32)
  (local $mem i32)
  i32.const 0
  local.get $size
  call $~lib/staticarray/StaticArray<i32>#constructor
  local.set $mem
  local.get $mem
  local.get $src
  local.get $size
  memory.copy $0 $0
  global.get $assembly/util/mems
  local.get $mem
  call $~lib/array/Array<~lib/staticarray/StaticArray<i32>>#push
  drop
  local.get $mem
  return
 )
 (func $assembly/gen/osc/Osc#set:hz (param $this i32) (param $hz f32)
  local.get $this
  local.get $hz
  f32.store $0 offset=8
 )
 (func $assembly/gen/osc/Osc#set:trig (param $this i32) (param $trig f32)
  local.get $this
  local.get $trig
  f32.store $0 offset=12
 )
 (func $assembly/gen/osc/Osc#set:offset (param $this i32) (param $offset f32)
  local.get $this
  local.get $offset
  f32.store $0 offset=16
 )
 (func $assembly/gen/osc/Osc#set:_phase (param $this i32) (param $_phase i32)
  local.get $this
  local.get $_phase
  i32.store $0 offset=20
 )
 (func $assembly/gen/osc/Osc#set:_step (param $this i32) (param $_step i32)
  local.get $this
  local.get $_step
  i32.store $0 offset=24
 )
 (func $assembly/gen/osc/Osc#set:_sample (param $this i32) (param $_sample f32)
  local.get $this
  local.get $_sample
  f32.store $0 offset=28
 )
 (func $assembly/gen/osc/Osc#set:_lastTrig (param $this i32) (param $_lastTrig i32)
  local.get $this
  local.get $_lastTrig
  i32.store $0 offset=32
 )
 (func $assembly/gen/osc/Osc#set:_offsetU32 (param $this i32) (param $_offsetU32 i32)
  local.get $this
  local.get $_offsetU32
  i32.store $0 offset=36
 )
 (func $assembly/gen/osc/Osc#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 40
   i32.const 24
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const 440
  call $assembly/gen/osc/Osc#set:hz
  local.get $this
  f32.const 0
  call $assembly/gen/osc/Osc#set:trig
  local.get $this
  f32.const 0
  call $assembly/gen/osc/Osc#set:offset
  local.get $this
  i32.const 0
  call $assembly/gen/osc/Osc#set:_phase
  local.get $this
  i32.const 0
  call $assembly/gen/osc/Osc#set:_step
  local.get $this
  f32.const 0
  call $assembly/gen/osc/Osc#set:_sample
  local.get $this
  i32.const -1
  call $assembly/gen/osc/Osc#set:_lastTrig
  local.get $this
  i32.const 0
  call $assembly/gen/osc/Osc#set:_offsetU32
  local.get $this
 )
 (func $assembly/gen/sin/Sin#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 40
   i32.const 23
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/osc/Osc#constructor
  local.set $this
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/sin/Sin> (result i32)
  i32.const 40
  return
 )
 (func $assembly/gen/exp/Exp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 40
   i32.const 25
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/osc/Osc#constructor
  local.set $this
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/exp/Exp> (result i32)
  i32.const 40
  return
 )
 (func $assembly/gen/aosc/AOsc#set:_tableIndex (param $this i32) (param $_tableIndex i32)
  local.get $this
  local.get $_tableIndex
  i32.store $0 offset=40
 )
 (func $assembly/gen/aosc/AOsc#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 44
   i32.const 27
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/osc/Osc#constructor
  local.set $this
  local.get $this
  i32.const 0
  call $assembly/gen/aosc/AOsc#set:_tableIndex
  local.get $this
 )
 (func $assembly/gen/saw/Saw#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 44
   i32.const 26
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/aosc/AOsc#constructor
  local.set $this
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/saw/Saw> (result i32)
  i32.const 44
  return
 )
 (func $assembly/gen/ramp/Ramp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 44
   i32.const 28
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/aosc/AOsc#constructor
  local.set $this
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/ramp/Ramp> (result i32)
  i32.const 44
  return
 )
 (func $assembly/gen/sqr/Sqr#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 44
   i32.const 29
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/aosc/AOsc#constructor
  local.set $this
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/sqr/Sqr> (result i32)
  i32.const 44
  return
 )
 (func $assembly/gen/tri/Tri#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 44
   i32.const 30
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/aosc/AOsc#constructor
  local.set $this
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/tri/Tri> (result i32)
  i32.const 44
  return
 )
 (func $assembly/gen/noise/Noise#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 40
   i32.const 31
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/osc/Osc#constructor
  local.set $this
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/noise/Noise> (result i32)
  i32.const 40
  return
 )
 (func $assembly/gen/dc/Dc#set:ceil (param $this i32) (param $ceil f32)
  local.get $this
  local.get $ceil
  f32.store $0 offset=8
 )
 (func $assembly/gen/dc/Dc#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=12
 )
 (func $assembly/gen/dc/Dc#set:sample (param $this i32) (param $sample f32)
  local.get $this
  local.get $sample
  f32.store $0 offset=16
 )
 (func $assembly/gen/dc/Dc#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 20
   i32.const 32
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const 0.20000000298023224
  call $assembly/gen/dc/Dc#set:ceil
  local.get $this
  i32.const 0
  call $assembly/gen/dc/Dc#set:in
  local.get $this
  f32.const 0
  call $assembly/gen/dc/Dc#set:sample
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/dc/Dc> (result i32)
  i32.const 20
  return
 )
 (func $assembly/gen/delay/Delay#set:ms (param $this i32) (param $ms f32)
  local.get $this
  local.get $ms
  f32.store $0 offset=8
 )
 (func $assembly/gen/delay/Delay#set:fb (param $this i32) (param $fb f32)
  local.get $this
  local.get $fb
  f32.store $0 offset=12
 )
 (func $assembly/gen/delay/Delay#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=16
 )
 (func $assembly/gen/delay/Delay#set:_floats (param $this i32) (param $_floats i32)
  local.get $this
  local.get $_floats
  i32.store $0 offset=20
  local.get $this
  local.get $_floats
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/delay/Delay#set:_mask (param $this i32) (param $_mask i32)
  local.get $this
  local.get $_mask
  i32.store $0 offset=24
 )
 (func $assembly/gen/delay/Delay#set:_index (param $this i32) (param $_index i32)
  local.get $this
  local.get $_index
  i32.store $0 offset=28
 )
 (func $assembly/gen/delay/Delay#set:_stepf (param $this i32) (param $_stepf f32)
  local.get $this
  local.get $_stepf
  f32.store $0 offset=32
 )
 (func $assembly/gen/delay/Delay#set:_targetf (param $this i32) (param $_targetf f32)
  local.get $this
  local.get $_targetf
  f32.store $0 offset=36
 )
 (func $assembly/gen/delay/Delay#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 40
   i32.const 33
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const 200
  call $assembly/gen/delay/Delay#set:ms
  local.get $this
  f32.const 0.5
  call $assembly/gen/delay/Delay#set:fb
  local.get $this
  i32.const 0
  call $assembly/gen/delay/Delay#set:in
  local.get $this
  i32.const 0
  global.get $assembly/core/constants/DELAY_MAX_SIZE
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/delay/Delay#set:_floats
  local.get $this
  global.get $assembly/core/constants/DELAY_MAX_SIZE
  i32.const 1
  i32.sub
  call $assembly/gen/delay/Delay#set:_mask
  local.get $this
  i32.const 0
  call $assembly/gen/delay/Delay#set:_index
  local.get $this
  f32.const 0
  call $assembly/gen/delay/Delay#set:_stepf
  local.get $this
  f32.const 0
  call $assembly/gen/delay/Delay#set:_targetf
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/delay/Delay> (result i32)
  i32.const 40
  return
 )
 (func $assembly/gen/tap/Tap#set:ms (param $this i32) (param $ms f32)
  local.get $this
  local.get $ms
  f32.store $0 offset=8
 )
 (func $assembly/gen/tap/Tap#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=12
 )
 (func $assembly/gen/tap/Tap#set:_floats (param $this i32) (param $_floats i32)
  local.get $this
  local.get $_floats
  i32.store $0 offset=16
  local.get $this
  local.get $_floats
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/tap/Tap#set:_mask (param $this i32) (param $_mask i32)
  local.get $this
  local.get $_mask
  i32.store $0 offset=20
 )
 (func $assembly/gen/tap/Tap#set:_index (param $this i32) (param $_index i32)
  local.get $this
  local.get $_index
  i32.store $0 offset=24
 )
 (func $assembly/gen/tap/Tap#set:_stepf (param $this i32) (param $_stepf f32)
  local.get $this
  local.get $_stepf
  f32.store $0 offset=28
 )
 (func $assembly/gen/tap/Tap#set:_targetf (param $this i32) (param $_targetf f32)
  local.get $this
  local.get $_targetf
  f32.store $0 offset=32
 )
 (func $assembly/gen/tap/Tap#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 36
   i32.const 34
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const 200
  call $assembly/gen/tap/Tap#set:ms
  local.get $this
  i32.const 0
  call $assembly/gen/tap/Tap#set:in
  local.get $this
  i32.const 0
  global.get $assembly/core/constants/DELAY_MAX_SIZE
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/tap/Tap#set:_floats
  local.get $this
  global.get $assembly/core/constants/DELAY_MAX_SIZE
  i32.const 1
  i32.sub
  call $assembly/gen/tap/Tap#set:_mask
  local.get $this
  i32.const 0
  call $assembly/gen/tap/Tap#set:_index
  local.get $this
  f32.const 0
  call $assembly/gen/tap/Tap#set:_stepf
  local.get $this
  f32.const 0
  call $assembly/gen/tap/Tap#set:_targetf
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/tap/Tap> (result i32)
  i32.const 36
  return
 )
 (func $assembly/gen/lp/Lp#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=8
 )
 (func $assembly/gen/lp/Lp#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=12
 )
 (func $assembly/gen/lp/Lp#set:_alpha (param $this i32) (param $_alpha f32)
  local.get $this
  local.get $_alpha
  f32.store $0 offset=16
 )
 (func $assembly/gen/lp/Lp#set:_sample (param $this i32) (param $_sample f32)
  local.get $this
  local.get $_sample
  f32.store $0 offset=20
 )
 (func $assembly/gen/lp/Lp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 24
   i32.const 35
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/lp/Lp#set:cut
  local.get $this
  i32.const 0
  call $assembly/gen/lp/Lp#set:in
  local.get $this
  f32.const 0
  call $assembly/gen/lp/Lp#set:_alpha
  local.get $this
  f32.const 0
  call $assembly/gen/lp/Lp#set:_sample
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/lp/Lp> (result i32)
  i32.const 24
  return
 )
 (func $assembly/core/engine/Engine#get:audioRate (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/gen/rate/Rate#set:samples (param $this i32) (param $samples f32)
  local.get $this
  local.get $samples
  f32.store $0 offset=8
 )
 (func $assembly/gen/rate/Rate#set:_engine (param $this i32) (param $_engine i32)
  local.get $this
  local.get $_engine
  i32.store $0 offset=4
  local.get $this
  local.get $_engine
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/rate/Rate#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 36
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/rate/Rate#set:_engine
  local.get $this
  f32.const 0
  call $assembly/gen/rate/Rate#set:samples
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  local.get $_engine
  call $assembly/core/engine/Engine#get:audioRate
  f32.convert_i32_u
  call $assembly/gen/rate/Rate#set:samples
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/rate/Rate> (result i32)
  i32.const 12
  return
 )
 (func $assembly/gen/biquad/Biquad#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=8
 )
 (func $assembly/gen/biquad/Biquad#set:_x1 (param $this i32) (param $_x1 f64)
  local.get $this
  local.get $_x1
  f64.store $0 offset=16
 )
 (func $assembly/gen/biquad/Biquad#set:_x2 (param $this i32) (param $_x2 f64)
  local.get $this
  local.get $_x2
  f64.store $0 offset=24
 )
 (func $assembly/gen/biquad/Biquad#set:_y1 (param $this i32) (param $_y1 f64)
  local.get $this
  local.get $_y1
  f64.store $0 offset=32
 )
 (func $assembly/gen/biquad/Biquad#set:_y2 (param $this i32) (param $_y2 f64)
  local.get $this
  local.get $_y2
  f64.store $0 offset=40
 )
 (func $assembly/gen/biquad/Biquad#set:_a0 (param $this i32) (param $_a0 f64)
  local.get $this
  local.get $_a0
  f64.store $0 offset=48
 )
 (func $assembly/gen/biquad/Biquad#set:_a1 (param $this i32) (param $_a1 f64)
  local.get $this
  local.get $_a1
  f64.store $0 offset=56
 )
 (func $assembly/gen/biquad/Biquad#set:_a2 (param $this i32) (param $_a2 f64)
  local.get $this
  local.get $_a2
  f64.store $0 offset=64
 )
 (func $assembly/gen/biquad/Biquad#set:_b0 (param $this i32) (param $_b0 f64)
  local.get $this
  local.get $_b0
  f64.store $0 offset=72
 )
 (func $assembly/gen/biquad/Biquad#set:_b1 (param $this i32) (param $_b1 f64)
  local.get $this
  local.get $_b1
  f64.store $0 offset=80
 )
 (func $assembly/gen/biquad/Biquad#set:_b2 (param $this i32) (param $_b2 f64)
  local.get $this
  local.get $_b2
  f64.store $0 offset=88
 )
 (func $~lib/rt/__newBuffer (param $size i32) (param $id i32) (param $data i32) (result i32)
  (local $buffer i32)
  local.get $size
  local.get $id
  call $~lib/rt/stub/__new
  local.set $buffer
  local.get $data
  if
   local.get $buffer
   local.get $data
   local.get $size
   memory.copy $0 $0
  end
  local.get $buffer
  return
 )
 (func $~lib/rt/__newArray (param $length i32) (param $alignLog2 i32) (param $id i32) (param $data i32) (result i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $array i32)
  local.get $length
  local.get $alignLog2
  i32.shl
  local.set $bufferSize
  local.get $bufferSize
  i32.const 1
  local.get $data
  call $~lib/rt/__newBuffer
  local.set $buffer
  i32.const 16
  local.get $id
  call $~lib/rt/stub/__new
  local.set $array
  local.get $array
  local.get $buffer
  i32.store $0
  local.get $array
  local.get $buffer
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $array
  local.get $buffer
  i32.store $0 offset=4
  local.get $array
  local.get $bufferSize
  i32.store $0 offset=8
  local.get $array
  local.get $length
  i32.store $0 offset=12
  local.get $array
  return
 )
 (func $assembly/gen/biquad/Biquad#set:_params_freq (param $this i32) (param $_params_freq i32)
  local.get $this
  local.get $_params_freq
  i32.store $0 offset=96
  local.get $this
  local.get $_params_freq
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/biquad/Biquad#set:_params_Q (param $this i32) (param $_params_Q i32)
  local.get $this
  local.get $_params_Q
  i32.store $0 offset=100
  local.get $this
  local.get $_params_Q
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/biquad/Biquad#set:_params_gain (param $this i32) (param $_params_gain i32)
  local.get $this
  local.get $_params_gain
  i32.store $0 offset=104
  local.get $this
  local.get $_params_gain
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/biquad/Biquad#constructor (param $this i32) (param $_engine i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $this
  i32.eqz
  if
   i32.const 108
   i32.const 38
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  i32.const 0
  call $assembly/gen/biquad/Biquad#set:in
  local.get $this
  f64.const 0
  call $assembly/gen/biquad/Biquad#set:_x1
  local.get $this
  f64.const 0
  call $assembly/gen/biquad/Biquad#set:_x2
  local.get $this
  f64.const 0
  call $assembly/gen/biquad/Biquad#set:_y1
  local.get $this
  f64.const 0
  call $assembly/gen/biquad/Biquad#set:_y2
  local.get $this
  f64.const 1
  call $assembly/gen/biquad/Biquad#set:_a0
  local.get $this
  f64.const 0
  call $assembly/gen/biquad/Biquad#set:_a1
  local.get $this
  f64.const 0
  call $assembly/gen/biquad/Biquad#set:_a2
  local.get $this
  f64.const 0
  call $assembly/gen/biquad/Biquad#set:_b0
  local.get $this
  f64.const 0
  call $assembly/gen/biquad/Biquad#set:_b1
  local.get $this
  f64.const 0
  call $assembly/gen/biquad/Biquad#set:_b2
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1053920
  call $~lib/rt/__newArray
  call $assembly/gen/biquad/Biquad#set:_params_freq
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1053952
  call $~lib/rt/__newArray
  call $assembly/gen/biquad/Biquad#set:_params_Q
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1053984
  call $~lib/rt/__newArray
  call $assembly/gen/biquad/Biquad#set:_params_gain
  local.get $this
 )
 (func $assembly/gen/blp/Blp#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=108
 )
 (func $assembly/gen/blp/Blp#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=112
 )
 (func $assembly/gen/blp/Blp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 116
   i32.const 37
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/biquad/Biquad#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/blp/Blp#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/blp/Blp#set:q
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/blp/Blp> (result i32)
  i32.const 116
  return
 )
 (func $assembly/gen/bhp/Bhp#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=108
 )
 (func $assembly/gen/bhp/Bhp#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=112
 )
 (func $assembly/gen/bhp/Bhp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 116
   i32.const 41
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/biquad/Biquad#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/bhp/Bhp#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/bhp/Bhp#set:q
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/bhp/Bhp> (result i32)
  i32.const 116
  return
 )
 (func $assembly/gen/bbp/Bbp#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=108
 )
 (func $assembly/gen/bbp/Bbp#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=112
 )
 (func $assembly/gen/bbp/Bbp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 116
   i32.const 42
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/biquad/Biquad#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/bbp/Bbp#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/bbp/Bbp#set:q
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/bbp/Bbp> (result i32)
  i32.const 116
  return
 )
 (func $assembly/gen/bno/Bno#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=108
 )
 (func $assembly/gen/bno/Bno#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=112
 )
 (func $assembly/gen/bno/Bno#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 116
   i32.const 43
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/biquad/Biquad#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/bno/Bno#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/bno/Bno#set:q
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/bno/Bno> (result i32)
  i32.const 116
  return
 )
 (func $assembly/gen/bpk/Bpk#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=108
 )
 (func $assembly/gen/bpk/Bpk#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=112
 )
 (func $assembly/gen/bpk/Bpk#set:amt (param $this i32) (param $amt f32)
  local.get $this
  local.get $amt
  f32.store $0 offset=116
 )
 (func $assembly/gen/bpk/Bpk#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 120
   i32.const 44
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/biquad/Biquad#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/bpk/Bpk#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/bpk/Bpk#set:q
  local.get $this
  f32.const 1
  call $assembly/gen/bpk/Bpk#set:amt
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/bpk/Bpk> (result i32)
  i32.const 120
  return
 )
 (func $assembly/gen/bap/Bap#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=108
 )
 (func $assembly/gen/bap/Bap#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=112
 )
 (func $assembly/gen/bap/Bap#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 116
   i32.const 45
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/biquad/Biquad#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/bap/Bap#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/bap/Bap#set:q
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/bap/Bap> (result i32)
  i32.const 116
  return
 )
 (func $assembly/gen/bls/Bls#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=108
 )
 (func $assembly/gen/bls/Bls#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=112
 )
 (func $assembly/gen/bls/Bls#set:amt (param $this i32) (param $amt f32)
  local.get $this
  local.get $amt
  f32.store $0 offset=116
 )
 (func $assembly/gen/bls/Bls#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 120
   i32.const 46
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/biquad/Biquad#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/bls/Bls#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/bls/Bls#set:q
  local.get $this
  f32.const 1
  call $assembly/gen/bls/Bls#set:amt
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/bls/Bls> (result i32)
  i32.const 120
  return
 )
 (func $assembly/gen/bhs/Bhs#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=108
 )
 (func $assembly/gen/bhs/Bhs#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=112
 )
 (func $assembly/gen/bhs/Bhs#set:amt (param $this i32) (param $amt f32)
  local.get $this
  local.get $amt
  f32.store $0 offset=116
 )
 (func $assembly/gen/bhs/Bhs#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 120
   i32.const 47
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/biquad/Biquad#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/bhs/Bhs#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/bhs/Bhs#set:q
  local.get $this
  f32.const 1
  call $assembly/gen/bhs/Bhs#set:amt
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/bhs/Bhs> (result i32)
  i32.const 120
  return
 )
 (func $assembly/gen/svf/Svf#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=8
 )
 (func $assembly/gen/svf/Svf#set:_c1 (param $this i32) (param $_c1 f64)
  local.get $this
  local.get $_c1
  f64.store $0 offset=16
 )
 (func $assembly/gen/svf/Svf#set:_c2 (param $this i32) (param $_c2 f64)
  local.get $this
  local.get $_c2
  f64.store $0 offset=24
 )
 (func $assembly/gen/svf/Svf#set:_a1 (param $this i32) (param $_a1 f64)
  local.get $this
  local.get $_a1
  f64.store $0 offset=32
 )
 (func $assembly/gen/svf/Svf#set:_a2 (param $this i32) (param $_a2 f64)
  local.get $this
  local.get $_a2
  f64.store $0 offset=40
 )
 (func $assembly/gen/svf/Svf#set:_a3 (param $this i32) (param $_a3 f64)
  local.get $this
  local.get $_a3
  f64.store $0 offset=48
 )
 (func $assembly/gen/svf/Svf#set:_v0 (param $this i32) (param $_v0 f64)
  local.get $this
  local.get $_v0
  f64.store $0 offset=56
 )
 (func $assembly/gen/svf/Svf#set:_v1 (param $this i32) (param $_v1 f64)
  local.get $this
  local.get $_v1
  f64.store $0 offset=64
 )
 (func $assembly/gen/svf/Svf#set:_v2 (param $this i32) (param $_v2 f64)
  local.get $this
  local.get $_v2
  f64.store $0 offset=72
 )
 (func $assembly/gen/svf/Svf#set:_v3 (param $this i32) (param $_v3 f64)
  local.get $this
  local.get $_v3
  f64.store $0 offset=80
 )
 (func $assembly/gen/svf/Svf#set:_k (param $this i32) (param $_k f64)
  local.get $this
  local.get $_k
  f64.store $0 offset=88
 )
 (func $assembly/gen/svf/Svf#set:_params_freq (param $this i32) (param $_params_freq i32)
  local.get $this
  local.get $_params_freq
  i32.store $0 offset=96
  local.get $this
  local.get $_params_freq
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/svf/Svf#set:_params_Q (param $this i32) (param $_params_Q i32)
  local.get $this
  local.get $_params_Q
  i32.store $0 offset=100
  local.get $this
  local.get $_params_Q
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/svf/Svf#constructor (param $this i32) (param $_engine i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $this
  i32.eqz
  if
   i32.const 104
   i32.const 49
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  i32.const 0
  call $assembly/gen/svf/Svf#set:in
  local.get $this
  f64.const 0
  call $assembly/gen/svf/Svf#set:_c1
  local.get $this
  f64.const 0
  call $assembly/gen/svf/Svf#set:_c2
  local.get $this
  f64.const 1
  call $assembly/gen/svf/Svf#set:_a1
  local.get $this
  f64.const 0
  call $assembly/gen/svf/Svf#set:_a2
  local.get $this
  f64.const 0
  call $assembly/gen/svf/Svf#set:_a3
  local.get $this
  f64.const 0
  call $assembly/gen/svf/Svf#set:_v0
  local.get $this
  f64.const 0
  call $assembly/gen/svf/Svf#set:_v1
  local.get $this
  f64.const 0
  call $assembly/gen/svf/Svf#set:_v2
  local.get $this
  f64.const 0
  call $assembly/gen/svf/Svf#set:_v3
  local.get $this
  f64.const 0
  call $assembly/gen/svf/Svf#set:_k
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054016
  call $~lib/rt/__newArray
  call $assembly/gen/svf/Svf#set:_params_freq
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054048
  call $~lib/rt/__newArray
  call $assembly/gen/svf/Svf#set:_params_Q
  local.get $this
 )
 (func $assembly/gen/slp/Slp#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=104
 )
 (func $assembly/gen/slp/Slp#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=108
 )
 (func $assembly/gen/slp/Slp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 112
   i32.const 48
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/svf/Svf#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/slp/Slp#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/slp/Slp#set:q
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/slp/Slp> (result i32)
  i32.const 112
  return
 )
 (func $assembly/gen/shp/Shp#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=104
 )
 (func $assembly/gen/shp/Shp#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=108
 )
 (func $assembly/gen/shp/Shp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 112
   i32.const 50
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/svf/Svf#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/shp/Shp#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/shp/Shp#set:q
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/shp/Shp> (result i32)
  i32.const 112
  return
 )
 (func $assembly/gen/sbp/Sbp#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=104
 )
 (func $assembly/gen/sbp/Sbp#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=108
 )
 (func $assembly/gen/sbp/Sbp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 112
   i32.const 51
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/svf/Svf#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/sbp/Sbp#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/sbp/Sbp#set:q
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/sbp/Sbp> (result i32)
  i32.const 112
  return
 )
 (func $assembly/gen/sap/Sap#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=104
 )
 (func $assembly/gen/sap/Sap#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=108
 )
 (func $assembly/gen/sap/Sap#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 112
   i32.const 52
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/svf/Svf#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/sap/Sap#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/sap/Sap#set:q
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/sap/Sap> (result i32)
  i32.const 112
  return
 )
 (func $assembly/gen/sno/Sno#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=104
 )
 (func $assembly/gen/sno/Sno#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=108
 )
 (func $assembly/gen/sno/Sno#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 112
   i32.const 53
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/svf/Svf#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/sno/Sno#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/sno/Sno#set:q
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/sno/Sno> (result i32)
  i32.const 112
  return
 )
 (func $assembly/gen/spk/Spk#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=104
 )
 (func $assembly/gen/spk/Spk#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=108
 )
 (func $assembly/gen/spk/Spk#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 112
   i32.const 54
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/svf/Svf#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/spk/Spk#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/spk/Spk#set:q
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/spk/Spk> (result i32)
  i32.const 112
  return
 )
 (func $assembly/gen/moog/Moog#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=8
 )
 (func $assembly/gen/moog/Moog#set:_m_azt1 (param $this i32) (param $_m_azt1 f32)
  local.get $this
  local.get $_m_azt1
  f32.store $0 offset=12
 )
 (func $assembly/gen/moog/Moog#set:_m_azt2 (param $this i32) (param $_m_azt2 f32)
  local.get $this
  local.get $_m_azt2
  f32.store $0 offset=16
 )
 (func $assembly/gen/moog/Moog#set:_m_azt3 (param $this i32) (param $_m_azt3 f32)
  local.get $this
  local.get $_m_azt3
  f32.store $0 offset=20
 )
 (func $assembly/gen/moog/Moog#set:_m_azt4 (param $this i32) (param $_m_azt4 f32)
  local.get $this
  local.get $_m_azt4
  f32.store $0 offset=24
 )
 (func $assembly/gen/moog/Moog#set:_m_az5 (param $this i32) (param $_m_az5 f32)
  local.get $this
  local.get $_m_az5
  f32.store $0 offset=28
 )
 (func $assembly/gen/moog/Moog#set:_m_amf (param $this i32) (param $_m_amf f32)
  local.get $this
  local.get $_m_amf
  f32.store $0 offset=32
 )
 (func $assembly/gen/moog/Moog#set:_v2 (param $this i32) (param $_v2 f32)
  local.get $this
  local.get $_v2
  f32.store $0 offset=36
 )
 (func $assembly/gen/moog/Moog#set:_x1 (param $this i32) (param $_x1 f32)
  local.get $this
  local.get $_x1
  f32.store $0 offset=40
 )
 (func $assembly/gen/moog/Moog#set:_az3 (param $this i32) (param $_az3 f32)
  local.get $this
  local.get $_az3
  f32.store $0 offset=44
 )
 (func $assembly/gen/moog/Moog#set:_az4 (param $this i32) (param $_az4 f32)
  local.get $this
  local.get $_az4
  f32.store $0 offset=48
 )
 (func $assembly/gen/moog/Moog#set:_amf (param $this i32) (param $_amf f32)
  local.get $this
  local.get $_amf
  f32.store $0 offset=52
 )
 (func $assembly/gen/moog/Moog#set:_kVt (param $this i32) (param $_kVt f32)
  local.get $this
  local.get $_kVt
  f32.store $0 offset=56
 )
 (func $assembly/gen/moog/Moog#set:_m_kacr (param $this i32) (param $_m_kacr f32)
  local.get $this
  local.get $_m_kacr
  f32.store $0 offset=60
 )
 (func $assembly/gen/moog/Moog#set:_m_k2vg (param $this i32) (param $_m_k2vg f32)
  local.get $this
  local.get $_m_k2vg
  f32.store $0 offset=64
 )
 (func $assembly/gen/moog/Moog#set:_m_postGain (param $this i32) (param $_m_postGain f32)
  local.get $this
  local.get $_m_postGain
  f32.store $0 offset=68
 )
 (func $assembly/gen/moog/Moog#set:_params_freq (param $this i32) (param $_params_freq i32)
  local.get $this
  local.get $_params_freq
  i32.store $0 offset=72
  local.get $this
  local.get $_params_freq
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/moog/Moog#set:_params_Q (param $this i32) (param $_params_Q i32)
  local.get $this
  local.get $_params_Q
  i32.store $0 offset=76
  local.get $this
  local.get $_params_Q
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/moog/Moog#constructor (param $this i32) (param $_engine i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $this
  i32.eqz
  if
   i32.const 80
   i32.const 56
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  i32.const 0
  call $assembly/gen/moog/Moog#set:in
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_m_azt1
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_m_azt2
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_m_azt3
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_m_azt4
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_m_az5
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_m_amf
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_v2
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_x1
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_az3
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_az4
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_amf
  local.get $this
  f32.const 1.2000000476837158
  call $assembly/gen/moog/Moog#set:_kVt
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_m_kacr
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_m_k2vg
  local.get $this
  f32.const 0
  call $assembly/gen/moog/Moog#set:_m_postGain
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054080
  call $~lib/rt/__newArray
  call $assembly/gen/moog/Moog#set:_params_freq
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054112
  call $~lib/rt/__newArray
  call $assembly/gen/moog/Moog#set:_params_Q
  local.get $this
 )
 (func $assembly/gen/mlp/Mlp#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=80
 )
 (func $assembly/gen/mlp/Mlp#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=84
 )
 (func $assembly/gen/mlp/Mlp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 88
   i32.const 55
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/moog/Moog#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/mlp/Mlp#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/mlp/Mlp#set:q
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/mlp/Mlp> (result i32)
  i32.const 88
  return
 )
 (func $assembly/gen/mhp/Mhp#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=80
 )
 (func $assembly/gen/mhp/Mhp#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=84
 )
 (func $assembly/gen/mhp/Mhp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 88
   i32.const 57
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/moog/Moog#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/mhp/Mhp#set:cut
  local.get $this
  f32.const 0.5
  call $assembly/gen/mhp/Mhp#set:q
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/mhp/Mhp> (result i32)
  i32.const 88
  return
 )
 (func $assembly/gen/daverb/Daverb#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=8
 )
 (func $assembly/gen/daverb/Daverb#set:pd (param $this i32) (param $pd f32)
  local.get $this
  local.get $pd
  f32.store $0 offset=12
 )
 (func $assembly/gen/daverb/Daverb#set:bw (param $this i32) (param $bw f32)
  local.get $this
  local.get $bw
  f32.store $0 offset=16
 )
 (func $assembly/gen/daverb/Daverb#set:fi (param $this i32) (param $fi f32)
  local.get $this
  local.get $fi
  f32.store $0 offset=20
 )
 (func $assembly/gen/daverb/Daverb#set:si (param $this i32) (param $si f32)
  local.get $this
  local.get $si
  f32.store $0 offset=24
 )
 (func $assembly/gen/daverb/Daverb#set:dc (param $this i32) (param $dc f32)
  local.get $this
  local.get $dc
  f32.store $0 offset=28
 )
 (func $assembly/gen/daverb/Daverb#set:ft (param $this i32) (param $ft f32)
  local.get $this
  local.get $ft
  f32.store $0 offset=32
 )
 (func $assembly/gen/daverb/Daverb#set:st (param $this i32) (param $st f32)
  local.get $this
  local.get $st
  f32.store $0 offset=36
 )
 (func $assembly/gen/daverb/Daverb#set:dp (param $this i32) (param $dp f32)
  local.get $this
  local.get $dp
  f32.store $0 offset=40
 )
 (func $assembly/gen/daverb/Daverb#set:ex (param $this i32) (param $ex f32)
  local.get $this
  local.get $ex
  f32.store $0 offset=44
 )
 (func $assembly/gen/daverb/Daverb#set:ed (param $this i32) (param $ed f32)
  local.get $this
  local.get $ed
  f32.store $0 offset=48
 )
 (func $assembly/gen/daverb/Daverb#set:_params_pd (param $this i32) (param $_params_pd i32)
  local.get $this
  local.get $_params_pd
  i32.store $0 offset=52
  local.get $this
  local.get $_params_pd
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_params_bw (param $this i32) (param $_params_bw i32)
  local.get $this
  local.get $_params_bw
  i32.store $0 offset=56
  local.get $this
  local.get $_params_bw
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_params_fi (param $this i32) (param $_params_fi i32)
  local.get $this
  local.get $_params_fi
  i32.store $0 offset=60
  local.get $this
  local.get $_params_fi
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_params_si (param $this i32) (param $_params_si i32)
  local.get $this
  local.get $_params_si
  i32.store $0 offset=64
  local.get $this
  local.get $_params_si
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_params_dc (param $this i32) (param $_params_dc i32)
  local.get $this
  local.get $_params_dc
  i32.store $0 offset=68
  local.get $this
  local.get $_params_dc
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_params_ft (param $this i32) (param $_params_ft i32)
  local.get $this
  local.get $_params_ft
  i32.store $0 offset=72
  local.get $this
  local.get $_params_ft
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_params_st (param $this i32) (param $_params_st i32)
  local.get $this
  local.get $_params_st
  i32.store $0 offset=76
  local.get $this
  local.get $_params_st
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_params_dp (param $this i32) (param $_params_dp i32)
  local.get $this
  local.get $_params_dp
  i32.store $0 offset=80
  local.get $this
  local.get $_params_dp
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_params_ex (param $this i32) (param $_params_ex i32)
  local.get $this
  local.get $_params_ex
  i32.store $0 offset=84
  local.get $this
  local.get $_params_ex
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_params_ed (param $this i32) (param $_params_ed i32)
  local.get $this
  local.get $_params_ed
  i32.store $0 offset=88
  local.get $this
  local.get $_params_ed
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_dpn (param $this i32) (param $_dpn f32)
  local.get $this
  local.get $_dpn
  f32.store $0 offset=92
 )
 (func $assembly/gen/daverb/Daverb#set:_exn (param $this i32) (param $_exn f32)
  local.get $this
  local.get $_exn
  f32.store $0 offset=96
 )
 (func $assembly/gen/daverb/Daverb#set:_edn (param $this i32) (param $_edn f32)
  local.get $this
  local.get $_edn
  f32.store $0 offset=100
 )
 (func $assembly/gen/daverb/Daverb#set:_pdn (param $this i32) (param $_pdn f32)
  local.get $this
  local.get $_pdn
  f32.store $0 offset=104
 )
 (func $assembly/gen/daverb/Daverb#set:_predelay (param $this i32) (param $_predelay i32)
  local.get $this
  local.get $_predelay
  i32.store $0 offset=108
  local.get $this
  local.get $_predelay
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_d0 (param $this i32) (param $_d0 i32)
  local.get $this
  local.get $_d0
  i32.store $0 offset=112
  local.get $this
  local.get $_d0
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_d1 (param $this i32) (param $_d1 i32)
  local.get $this
  local.get $_d1
  i32.store $0 offset=116
  local.get $this
  local.get $_d1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_d2 (param $this i32) (param $_d2 i32)
  local.get $this
  local.get $_d2
  i32.store $0 offset=120
  local.get $this
  local.get $_d2
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_d3 (param $this i32) (param $_d3 i32)
  local.get $this
  local.get $_d3
  i32.store $0 offset=124
  local.get $this
  local.get $_d3
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_d4 (param $this i32) (param $_d4 i32)
  local.get $this
  local.get $_d4
  i32.store $0 offset=128
  local.get $this
  local.get $_d4
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_d5 (param $this i32) (param $_d5 i32)
  local.get $this
  local.get $_d5
  i32.store $0 offset=132
  local.get $this
  local.get $_d5
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_d6 (param $this i32) (param $_d6 i32)
  local.get $this
  local.get $_d6
  i32.store $0 offset=136
  local.get $this
  local.get $_d6
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_d7 (param $this i32) (param $_d7 i32)
  local.get $this
  local.get $_d7
  i32.store $0 offset=140
  local.get $this
  local.get $_d7
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_d8 (param $this i32) (param $_d8 i32)
  local.get $this
  local.get $_d8
  i32.store $0 offset=144
  local.get $this
  local.get $_d8
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_d9 (param $this i32) (param $_d9 i32)
  local.get $this
  local.get $_d9
  i32.store $0 offset=148
  local.get $this
  local.get $_d9
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_d10 (param $this i32) (param $_d10 i32)
  local.get $this
  local.get $_d10
  i32.store $0 offset=152
  local.get $this
  local.get $_d10
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_d11 (param $this i32) (param $_d11 i32)
  local.get $this
  local.get $_d11
  i32.store $0 offset=156
  local.get $this
  local.get $_d11
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/daverb/Daverb#set:_index (param $this i32) (param $_index i32)
  local.get $this
  local.get $_index
  i32.store $0 offset=160
 )
 (func $assembly/gen/daverb/Daverb#set:_mask (param $this i32) (param $_mask i32)
  local.get $this
  local.get $_mask
  i32.store $0 offset=164
 )
 (func $assembly/gen/daverb/Daverb#set:_lp1 (param $this i32) (param $_lp1 f32)
  local.get $this
  local.get $_lp1
  f32.store $0 offset=168
 )
 (func $assembly/gen/daverb/Daverb#set:_lp2 (param $this i32) (param $_lp2 f32)
  local.get $this
  local.get $_lp2
  f32.store $0 offset=172
 )
 (func $assembly/gen/daverb/Daverb#set:_lp3 (param $this i32) (param $_lp3 f32)
  local.get $this
  local.get $_lp3
  f32.store $0 offset=176
 )
 (func $assembly/gen/daverb/Daverb#set:_excPhase (param $this i32) (param $_excPhase i32)
  local.get $this
  local.get $_excPhase
  i32.store $0 offset=180
 )
 (func $assembly/gen/daverb/Daverb#constructor (param $this i32) (param $_engine i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  local.get $this
  i32.eqz
  if
   i32.const 184
   i32.const 58
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  i32.const 0
  call $assembly/gen/daverb/Daverb#set:in
  local.get $this
  f32.const 0.029999999329447746
  call $assembly/gen/daverb/Daverb#set:pd
  local.get $this
  f32.const 0.10000000149011612
  call $assembly/gen/daverb/Daverb#set:bw
  local.get $this
  f32.const 0.5
  call $assembly/gen/daverb/Daverb#set:fi
  local.get $this
  f32.const 0.5
  call $assembly/gen/daverb/Daverb#set:si
  local.get $this
  f32.const 0.5
  call $assembly/gen/daverb/Daverb#set:dc
  local.get $this
  f32.const 0.5
  call $assembly/gen/daverb/Daverb#set:ft
  local.get $this
  f32.const 0.5
  call $assembly/gen/daverb/Daverb#set:st
  local.get $this
  f32.const 0.5
  call $assembly/gen/daverb/Daverb#set:dp
  local.get $this
  f32.const 0.5
  call $assembly/gen/daverb/Daverb#set:ex
  local.get $this
  f32.const 0.5
  call $assembly/gen/daverb/Daverb#set:ed
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054144
  call $~lib/rt/__newArray
  call $assembly/gen/daverb/Daverb#set:_params_pd
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054176
  call $~lib/rt/__newArray
  call $assembly/gen/daverb/Daverb#set:_params_bw
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054208
  call $~lib/rt/__newArray
  call $assembly/gen/daverb/Daverb#set:_params_fi
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054240
  call $~lib/rt/__newArray
  call $assembly/gen/daverb/Daverb#set:_params_si
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054272
  call $~lib/rt/__newArray
  call $assembly/gen/daverb/Daverb#set:_params_dc
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054304
  call $~lib/rt/__newArray
  call $assembly/gen/daverb/Daverb#set:_params_ft
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054336
  call $~lib/rt/__newArray
  call $assembly/gen/daverb/Daverb#set:_params_st
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054368
  call $~lib/rt/__newArray
  call $assembly/gen/daverb/Daverb#set:_params_dp
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054400
  call $~lib/rt/__newArray
  call $assembly/gen/daverb/Daverb#set:_params_ex
  local.get $this
  i32.const 3
  i32.const 2
  i32.const 39
  i32.const 1054432
  call $~lib/rt/__newArray
  call $assembly/gen/daverb/Daverb#set:_params_ed
  local.get $this
  f32.const 0
  call $assembly/gen/daverb/Daverb#set:_dpn
  local.get $this
  f32.const 0
  call $assembly/gen/daverb/Daverb#set:_exn
  local.get $this
  f32.const 0
  call $assembly/gen/daverb/Daverb#set:_edn
  local.get $this
  f32.const 0
  call $assembly/gen/daverb/Daverb#set:_pdn
  local.get $this
  i32.const 0
  global.get $assembly/core/constants/DELAY_MAX_SIZE
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/daverb/Daverb#set:_predelay
  local.get $this
  i32.const 0
  global.get $assembly/gen/daverb/ld0
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/daverb/Daverb#set:_d0
  local.get $this
  i32.const 0
  global.get $assembly/gen/daverb/ld1
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/daverb/Daverb#set:_d1
  local.get $this
  i32.const 0
  global.get $assembly/gen/daverb/ld2
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/daverb/Daverb#set:_d2
  local.get $this
  i32.const 0
  global.get $assembly/gen/daverb/ld3
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/daverb/Daverb#set:_d3
  local.get $this
  i32.const 0
  global.get $assembly/gen/daverb/ld4
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/daverb/Daverb#set:_d4
  local.get $this
  i32.const 0
  global.get $assembly/gen/daverb/ld5
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/daverb/Daverb#set:_d5
  local.get $this
  i32.const 0
  global.get $assembly/gen/daverb/ld6
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/daverb/Daverb#set:_d6
  local.get $this
  i32.const 0
  global.get $assembly/gen/daverb/ld7
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/daverb/Daverb#set:_d7
  local.get $this
  i32.const 0
  global.get $assembly/gen/daverb/ld8
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/daverb/Daverb#set:_d8
  local.get $this
  i32.const 0
  global.get $assembly/gen/daverb/ld9
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/daverb/Daverb#set:_d9
  local.get $this
  i32.const 0
  global.get $assembly/gen/daverb/ld10
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/daverb/Daverb#set:_d10
  local.get $this
  i32.const 0
  global.get $assembly/gen/daverb/ld11
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/daverb/Daverb#set:_d11
  local.get $this
  i32.const 0
  call $assembly/gen/daverb/Daverb#set:_index
  local.get $this
  global.get $assembly/core/constants/DELAY_MAX_SIZE
  i32.const 1
  i32.sub
  call $assembly/gen/daverb/Daverb#set:_mask
  local.get $this
  f32.const 0
  call $assembly/gen/daverb/Daverb#set:_lp1
  local.get $this
  f32.const 0
  call $assembly/gen/daverb/Daverb#set:_lp2
  local.get $this
  f32.const 0
  call $assembly/gen/daverb/Daverb#set:_lp3
  local.get $this
  i32.const 0
  call $assembly/gen/daverb/Daverb#set:_excPhase
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/daverb/Daverb> (result i32)
  i32.const 184
  return
 )
 (func $assembly/gen/tanh/Tanh#set:gain (param $this i32) (param $gain f32)
  local.get $this
  local.get $gain
  f32.store $0
 )
 (func $assembly/gen/tanh/Tanh#set:_gainv (param $this i32) (param $_gainv v128)
  local.get $this
  local.get $_gainv
  v128.store $0 offset=16
 )
 (func $assembly/gen/tanh/Tanh#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=32
 )
 (func $assembly/gen/tanh/Tanh#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 36
   i32.const 59
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const 1
  call $assembly/gen/tanh/Tanh#set:gain
  local.get $this
  f32.const 1
  f32x4.splat
  call $assembly/gen/tanh/Tanh#set:_gainv
  local.get $this
  i32.const 0
  call $assembly/gen/tanh/Tanh#set:in
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/tanh/Tanh> (result i32)
  i32.const 36
  return
 )
 (func $assembly/gen/diode/Diode#set:cut (param $this i32) (param $cut f32)
  local.get $this
  local.get $cut
  f32.store $0 offset=8
 )
 (func $assembly/gen/diode/Diode#set:hpf (param $this i32) (param $hpf f32)
  local.get $this
  local.get $hpf
  f32.store $0 offset=12
 )
 (func $assembly/gen/diode/Diode#set:sat (param $this i32) (param $sat f32)
  local.get $this
  local.get $sat
  f32.store $0 offset=16
 )
 (func $assembly/gen/diode/Diode#set:q (param $this i32) (param $q f32)
  local.get $this
  local.get $q
  f32.store $0 offset=20
 )
 (func $assembly/gen/diode/Diode#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=24
 )
 (func $assembly/gen/diode/Diode#set:_z0 (param $this i32) (param $_z0 f32)
  local.get $this
  local.get $_z0
  f32.store $0 offset=28
 )
 (func $assembly/gen/diode/Diode#set:_z1 (param $this i32) (param $_z1 f32)
  local.get $this
  local.get $_z1
  f32.store $0 offset=32
 )
 (func $assembly/gen/diode/Diode#set:_z2 (param $this i32) (param $_z2 f32)
  local.get $this
  local.get $_z2
  f32.store $0 offset=36
 )
 (func $assembly/gen/diode/Diode#set:_z3 (param $this i32) (param $_z3 f32)
  local.get $this
  local.get $_z3
  f32.store $0 offset=40
 )
 (func $assembly/gen/diode/Diode#set:_z4 (param $this i32) (param $_z4 f32)
  local.get $this
  local.get $_z4
  f32.store $0 offset=44
 )
 (func $assembly/gen/diode/Diode#set:_A (param $this i32) (param $_A f32)
  local.get $this
  local.get $_A
  f32.store $0 offset=48
 )
 (func $assembly/gen/diode/Diode#set:_a (param $this i32) (param $_a f32)
  local.get $this
  local.get $_a
  f32.store $0 offset=52
 )
 (func $assembly/gen/diode/Diode#set:_a2 (param $this i32) (param $_a2 f32)
  local.get $this
  local.get $_a2
  f32.store $0 offset=56
 )
 (func $assembly/gen/diode/Diode#set:_b (param $this i32) (param $_b f32)
  local.get $this
  local.get $_b
  f32.store $0 offset=60
 )
 (func $assembly/gen/diode/Diode#set:_b2 (param $this i32) (param $_b2 f32)
  local.get $this
  local.get $_b2
  f32.store $0 offset=64
 )
 (func $assembly/gen/diode/Diode#set:_c (param $this i32) (param $_c f32)
  local.get $this
  local.get $_c
  f32.store $0 offset=68
 )
 (func $assembly/gen/diode/Diode#set:_g (param $this i32) (param $_g f32)
  local.get $this
  local.get $_g
  f32.store $0 offset=72
 )
 (func $assembly/gen/diode/Diode#set:_g0 (param $this i32) (param $_g0 f32)
  local.get $this
  local.get $_g0
  f32.store $0 offset=76
 )
 (func $assembly/gen/diode/Diode#set:_ah (param $this i32) (param $_ah f32)
  local.get $this
  local.get $_ah
  f32.store $0 offset=80
 )
 (func $assembly/gen/diode/Diode#set:_bh (param $this i32) (param $_bh f32)
  local.get $this
  local.get $_bh
  f32.store $0 offset=84
 )
 (func $assembly/gen/diode/Diode#set:_ainv (param $this i32) (param $_ainv f32)
  local.get $this
  local.get $_ainv
  f32.store $0 offset=88
 )
 (func $assembly/gen/diode/Diode#set:_k (param $this i32) (param $_k f32)
  local.get $this
  local.get $_k
  f32.store $0 offset=92
 )
 (func $assembly/gen/diode/Diode#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 96
   i32.const 60
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const 500
  call $assembly/gen/diode/Diode#set:cut
  local.get $this
  f32.const 1e3
  call $assembly/gen/diode/Diode#set:hpf
  local.get $this
  f32.const 1
  call $assembly/gen/diode/Diode#set:sat
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:q
  local.get $this
  i32.const 0
  call $assembly/gen/diode/Diode#set:in
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_z0
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_z1
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_z2
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_z3
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_z4
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_A
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_a
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_a2
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_b
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_b2
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_c
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_g
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_g0
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_ah
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_bh
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_ainv
  local.get $this
  f32.const 0
  call $assembly/gen/diode/Diode#set:_k
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/diode/Diode> (result i32)
  i32.const 96
  return
 )
 (func $assembly/gen/dclip/Dclip#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=8
 )
 (func $assembly/gen/dclip/Dclip#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 61
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  i32.const 0
  call $assembly/gen/dclip/Dclip#set:in
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/dclip/Dclip> (result i32)
  i32.const 12
  return
 )
 (func $assembly/gen/dcliplin/Dcliplin#set:threshold (param $this i32) (param $threshold f32)
  local.get $this
  local.get $threshold
  f32.store $0 offset=8
 )
 (func $assembly/gen/dcliplin/Dcliplin#set:factor (param $this i32) (param $factor f32)
  local.get $this
  local.get $factor
  f32.store $0 offset=12
 )
 (func $assembly/gen/dcliplin/Dcliplin#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=16
 )
 (func $assembly/gen/dcliplin/Dcliplin#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 20
   i32.const 62
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const 0.5
  call $assembly/gen/dcliplin/Dcliplin#set:threshold
  local.get $this
  f32.const 0.5
  call $assembly/gen/dcliplin/Dcliplin#set:factor
  local.get $this
  i32.const 0
  call $assembly/gen/dcliplin/Dcliplin#set:in
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/dcliplin/Dcliplin> (result i32)
  i32.const 20
  return
 )
 (func $assembly/gen/dclipexp/Dclipexp#set:factor (param $this i32) (param $factor f32)
  local.get $this
  local.get $factor
  f32.store $0 offset=8
 )
 (func $assembly/gen/dclipexp/Dclipexp#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=12
 )
 (func $assembly/gen/dclipexp/Dclipexp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 16
   i32.const 63
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const 1
  call $assembly/gen/dclipexp/Dclipexp#set:factor
  local.get $this
  i32.const 0
  call $assembly/gen/dclipexp/Dclipexp#set:in
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/dclipexp/Dclipexp> (result i32)
  i32.const 16
  return
 )
 (func $assembly/gen/clamp/Clamp#set:min (param $this i32) (param $min f32)
  local.get $this
  local.get $min
  f32.store $0 offset=8
 )
 (func $assembly/gen/clamp/Clamp#set:max (param $this i32) (param $max f32)
  local.get $this
  local.get $max
  f32.store $0 offset=12
 )
 (func $assembly/gen/clamp/Clamp#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=16
 )
 (func $assembly/gen/clamp/Clamp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 20
   i32.const 64
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const -0.5
  call $assembly/gen/clamp/Clamp#set:min
  local.get $this
  f32.const 0.5
  call $assembly/gen/clamp/Clamp#set:max
  local.get $this
  i32.const 0
  call $assembly/gen/clamp/Clamp#set:in
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/clamp/Clamp> (result i32)
  i32.const 20
  return
 )
 (func $assembly/gen/clip/Clip#set:threshold (param $this i32) (param $threshold f32)
  local.get $this
  local.get $threshold
  f32.store $0 offset=8
 )
 (func $assembly/gen/clip/Clip#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=12
 )
 (func $assembly/gen/clip/Clip#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 16
   i32.const 65
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const 0.5
  call $assembly/gen/clip/Clip#set:threshold
  local.get $this
  i32.const 0
  call $assembly/gen/clip/Clip#set:in
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/clip/Clip> (result i32)
  i32.const 16
  return
 )
 (func $assembly/gen/comp/Comp#set:threshold (param $this i32) (param $threshold f32)
  local.get $this
  local.get $threshold
  f32.store $0 offset=8
 )
 (func $assembly/gen/comp/Comp#set:ratio (param $this i32) (param $ratio f32)
  local.get $this
  local.get $ratio
  f32.store $0 offset=12
 )
 (func $assembly/gen/comp/Comp#set:attack (param $this i32) (param $attack f32)
  local.get $this
  local.get $attack
  f32.store $0 offset=16
 )
 (func $assembly/gen/comp/Comp#set:release (param $this i32) (param $release f32)
  local.get $this
  local.get $release
  f32.store $0 offset=20
 )
 (func $assembly/gen/comp/Comp#set:in (param $this i32) (param $in i32)
  local.get $this
  local.get $in
  i32.store $0 offset=24
 )
 (func $assembly/gen/comp/Comp#set:sidechain (param $this i32) (param $sidechain i32)
  local.get $this
  local.get $sidechain
  i32.store $0 offset=28
 )
 (func $assembly/gen/comp/Comp#set:_prevLevel (param $this i32) (param $_prevLevel f32)
  local.get $this
  local.get $_prevLevel
  f32.store $0 offset=32
 )
 (func $assembly/gen/comp/Comp#set:_gainReduction (param $this i32) (param $_gainReduction f32)
  local.get $this
  local.get $_gainReduction
  f32.store $0 offset=36
 )
 (func $assembly/gen/comp/Comp#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 40
   i32.const 66
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const 0.699999988079071
  call $assembly/gen/comp/Comp#set:threshold
  local.get $this
  f32.const 1
  f32.const 3
  f32.div
  call $assembly/gen/comp/Comp#set:ratio
  local.get $this
  f32.const 0.009999999776482582
  call $assembly/gen/comp/Comp#set:attack
  local.get $this
  f32.const 0.009999999776482582
  call $assembly/gen/comp/Comp#set:release
  local.get $this
  i32.const 0
  call $assembly/gen/comp/Comp#set:in
  local.get $this
  i32.const 0
  call $assembly/gen/comp/Comp#set:sidechain
  local.get $this
  f32.const 0
  call $assembly/gen/comp/Comp#set:_prevLevel
  local.get $this
  f32.const 1
  call $assembly/gen/comp/Comp#set:_gainReduction
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/comp/Comp> (result i32)
  i32.const 40
  return
 )
 (func $assembly/gen/inc/Inc#set:amt (param $this i32) (param $amt f32)
  local.get $this
  local.get $amt
  f32.store $0 offset=8
 )
 (func $assembly/gen/inc/Inc#set:trig (param $this i32) (param $trig f32)
  local.get $this
  local.get $trig
  f32.store $0 offset=12
 )
 (func $assembly/gen/inc/Inc#set:_lastTrig (param $this i32) (param $_lastTrig i32)
  local.get $this
  local.get $_lastTrig
  i32.store $0 offset=16
 )
 (func $assembly/gen/inc/Inc#set:_value (param $this i32) (param $_value f32)
  local.get $this
  local.get $_value
  f32.store $0 offset=20
 )
 (func $assembly/gen/inc/Inc#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 24
   i32.const 67
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const 1
  call $assembly/gen/inc/Inc#set:amt
  local.get $this
  f32.const 0
  call $assembly/gen/inc/Inc#set:trig
  local.get $this
  i32.const -1
  call $assembly/gen/inc/Inc#set:_lastTrig
  local.get $this
  f32.const 0
  call $assembly/gen/inc/Inc#set:_value
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/inc/Inc> (result i32)
  i32.const 24
  return
 )
 (func $assembly/gen/sample/Sample#set:offset (param $this i32) (param $offset f32)
  local.get $this
  local.get $offset
  f32.store $0 offset=8
 )
 (func $assembly/gen/sample/Sample#set:trig (param $this i32) (param $trig f32)
  local.get $this
  local.get $trig
  f32.store $0 offset=12
 )
 (func $assembly/gen/sample/Sample#set:_floats (param $this i32) (param $_floats i32)
  local.get $this
  local.get $_floats
  i32.store $0 offset=16
  local.get $this
  local.get $_floats
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $assembly/gen/sample/Sample#set:_mask (param $this i32) (param $_mask i32)
  local.get $this
  local.get $_mask
  i32.store $0 offset=20
 )
 (func $assembly/gen/sample/Sample#set:_phase (param $this i32) (param $_phase i32)
  local.get $this
  local.get $_phase
  i32.store $0 offset=24
 )
 (func $assembly/gen/sample/Sample#set:_step (param $this i32) (param $_step i32)
  local.get $this
  local.get $_step
  i32.store $0 offset=28
 )
 (func $assembly/gen/sample/Sample#set:_offsetCurrent (param $this i32) (param $_offsetCurrent f64)
  local.get $this
  local.get $_offsetCurrent
  f64.store $0 offset=32
 )
 (func $assembly/gen/sample/Sample#set:_offsetTarget (param $this i32) (param $_offsetTarget f64)
  local.get $this
  local.get $_offsetTarget
  f64.store $0 offset=40
 )
 (func $assembly/gen/sample/Sample#set:_lastTrig (param $this i32) (param $_lastTrig f32)
  local.get $this
  local.get $_lastTrig
  f32.store $0 offset=48
 )
 (func $assembly/gen/sample/Sample#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 52
   i32.const 69
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/gen/Gen#constructor
  local.set $this
  local.get $this
  f32.const 0
  call $assembly/gen/sample/Sample#set:offset
  local.get $this
  f32.const 0
  call $assembly/gen/sample/Sample#set:trig
  local.get $this
  i32.const 0
  global.get $assembly/core/constants/SAMPLE_MAX_SIZE
  call $~lib/staticarray/StaticArray<f32>#constructor
  call $assembly/gen/sample/Sample#set:_floats
  local.get $this
  global.get $assembly/core/constants/SAMPLE_MAX_SIZE
  i32.const 1
  i32.sub
  call $assembly/gen/sample/Sample#set:_mask
  local.get $this
  i32.const 0
  call $assembly/gen/sample/Sample#set:_phase
  local.get $this
  i32.const 0
  call $assembly/gen/sample/Sample#set:_step
  local.get $this
  f64.const -1
  call $assembly/gen/sample/Sample#set:_offsetCurrent
  local.get $this
  f64.const 0
  call $assembly/gen/sample/Sample#set:_offsetTarget
  local.get $this
  f32.const -1
  call $assembly/gen/sample/Sample#set:_lastTrig
  local.get $this
 )
 (func $assembly/gen/freesound/Freesound#set:id (param $this i32) (param $id f32)
  local.get $this
  local.get $id
  f32.store $0 offset=52
 )
 (func $assembly/gen/freesound/Freesound#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 56
   i32.const 68
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/sample/Sample#constructor
  local.set $this
  local.get $this
  f32.const 0
  call $assembly/gen/freesound/Freesound#set:id
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/freesound/Freesound> (result i32)
  i32.const 56
  return
 )
 (func $assembly/gen/freesound/Freesound#get:id (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=52
 )
 (func $assembly/gen/say/Say#set:text (param $this i32) (param $text f32)
  local.get $this
  local.get $text
  f32.store $0 offset=52
 )
 (func $assembly/gen/say/Say#constructor (param $this i32) (param $_engine i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 56
   i32.const 70
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $_engine
  call $assembly/gen/sample/Sample#constructor
  local.set $this
  local.get $this
  f32.const 0
  call $assembly/gen/say/Say#set:text
  local.get $this
 )
 (func $assembly/util/getObjectSize<assembly/gen/say/Say> (result i32)
  i32.const 56
  return
 )
 (func $assembly/gen/gen/Gen#_update (param $this i32)
  nop
 )
 (func $assembly/gen/gen/Gen#_reset (param $this i32)
  nop
 )
 (func $assembly/gen/gen/Gen#_audio (param $this i32) (param $begin i32) (param $end i32) (param $targetPtr i32)
  nop
 )
 (func $~lib/math/NativeMathf.pow (param $x f32) (param $y f32) (result f32)
  (local $x|2 f32)
  (local $y|3 f32)
  (local $signBias i32)
  (local $ix i32)
  (local $iy i32)
  (local $ny i32)
  (local $ux i32)
  (local $ux|9 i32)
  (local $x2 f32)
  (local $iy|11 i32)
  (local $e i32)
  (local $iy|13 i32)
  (local $e|14 i32)
  (local $yint i32)
  (local $ux|16 i32)
  (local $tmp i32)
  (local $i i32)
  (local $top i32)
  (local $uz i32)
  (local $k i32)
  (local $invc f64)
  (local $logc f64)
  (local $z f64)
  (local $r f64)
  (local $y0 f64)
  (local $y|27 f64)
  (local $p f64)
  (local $q f64)
  (local $logx f64)
  (local $ylogx f64)
  (local $sign i32)
  (local $sign|33 i32)
  (local $y|34 f32)
  (local $sign|35 i32)
  (local $sign|36 i32)
  (local $y|37 f32)
  (local $xd f64)
  (local $signBias|39 i32)
  (local $kd f64)
  (local $ki i64)
  (local $r|42 f64)
  (local $t i64)
  (local $z|44 f64)
  (local $y|45 f64)
  (local $s f64)
  local.get $y
  f32.abs
  f32.const 2
  f32.le
  if
   local.get $y
   f32.const 2
   f32.eq
   if
    local.get $x
    local.get $x
    f32.mul
    return
   end
   local.get $y
   f32.const 0.5
   f32.eq
   if
    local.get $x
    f32.sqrt
    f32.abs
    f32.const inf
    local.get $x
    f32.const inf
    f32.neg
    f32.ne
    select
    return
   end
   local.get $y
   f32.const -1
   f32.eq
   if
    f32.const 1
    local.get $x
    f32.div
    return
   end
   local.get $y
   f32.const 1
   f32.eq
   if
    local.get $x
    return
   end
   local.get $y
   f32.const 0
   f32.eq
   if
    f32.const 1
    return
   end
  end
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  block $~lib/util/math/powf_lut|inlined.0 (result f32)
   local.get $x
   local.set $x|2
   local.get $y
   local.set $y|3
   i32.const 0
   local.set $signBias
   local.get $x|2
   i32.reinterpret_f32
   local.set $ix
   local.get $y|3
   i32.reinterpret_f32
   local.set $iy
   i32.const 0
   local.set $ny
   local.get $ix
   i32.const 8388608
   i32.sub
   i32.const 2139095040
   i32.const 8388608
   i32.sub
   i32.ge_u
   block $~lib/util/math/zeroinfnanf|inlined.0 (result i32)
    local.get $iy
    local.set $ux
    local.get $ux
    i32.const 1
    i32.shl
    i32.const 1
    i32.sub
    i32.const 2139095040
    i32.const 1
    i32.shl
    i32.const 1
    i32.sub
    i32.ge_u
    br $~lib/util/math/zeroinfnanf|inlined.0
   end
   i32.const 0
   i32.ne
   local.tee $ny
   i32.or
   if
    local.get $ny
    if
     local.get $iy
     i32.const 1
     i32.shl
     i32.const 0
     i32.eq
     if
      f32.const 1
      br $~lib/util/math/powf_lut|inlined.0
     end
     local.get $ix
     i32.const 1065353216
     i32.eq
     if
      f32.const nan:0x400000
      br $~lib/util/math/powf_lut|inlined.0
     end
     local.get $ix
     i32.const 1
     i32.shl
     i32.const 2139095040
     i32.const 1
     i32.shl
     i32.gt_u
     if (result i32)
      i32.const 1
     else
      local.get $iy
      i32.const 1
      i32.shl
      i32.const 2139095040
      i32.const 1
      i32.shl
      i32.gt_u
     end
     if
      local.get $x|2
      local.get $y|3
      f32.add
      br $~lib/util/math/powf_lut|inlined.0
     end
     local.get $ix
     i32.const 1
     i32.shl
     i32.const 1065353216
     i32.const 1
     i32.shl
     i32.eq
     if
      f32.const nan:0x400000
      br $~lib/util/math/powf_lut|inlined.0
     end
     local.get $ix
     i32.const 1
     i32.shl
     i32.const 1065353216
     i32.const 1
     i32.shl
     i32.lt_u
     local.get $iy
     i32.const 31
     i32.shr_u
     i32.eqz
     i32.eq
     if
      f32.const 0
      br $~lib/util/math/powf_lut|inlined.0
     end
     local.get $y|3
     local.get $y|3
     f32.mul
     br $~lib/util/math/powf_lut|inlined.0
    end
    block $~lib/util/math/zeroinfnanf|inlined.1 (result i32)
     local.get $ix
     local.set $ux|9
     local.get $ux|9
     i32.const 1
     i32.shl
     i32.const 1
     i32.sub
     i32.const 2139095040
     i32.const 1
     i32.shl
     i32.const 1
     i32.sub
     i32.ge_u
     br $~lib/util/math/zeroinfnanf|inlined.1
    end
    if
     local.get $x|2
     local.get $x|2
     f32.mul
     local.set $x2
     local.get $ix
     i32.const 31
     i32.shr_u
     if (result i32)
      block $~lib/util/math/checkintf|inlined.0 (result i32)
       local.get $iy
       local.set $iy|11
       local.get $iy|11
       i32.const 23
       i32.shr_u
       i32.const 255
       i32.and
       local.set $e
       local.get $e
       i32.const 127
       i32.lt_u
       if
        i32.const 0
        br $~lib/util/math/checkintf|inlined.0
       end
       local.get $e
       i32.const 127
       i32.const 23
       i32.add
       i32.gt_u
       if
        i32.const 2
        br $~lib/util/math/checkintf|inlined.0
       end
       i32.const 1
       i32.const 127
       i32.const 23
       i32.add
       local.get $e
       i32.sub
       i32.shl
       local.set $e
       local.get $iy|11
       local.get $e
       i32.const 1
       i32.sub
       i32.and
       if
        i32.const 0
        br $~lib/util/math/checkintf|inlined.0
       end
       local.get $iy|11
       local.get $e
       i32.and
       if
        i32.const 1
        br $~lib/util/math/checkintf|inlined.0
       end
       i32.const 2
       br $~lib/util/math/checkintf|inlined.0
      end
      i32.const 1
      i32.eq
     else
      i32.const 0
     end
     if
      local.get $x2
      f32.neg
      local.set $x2
     end
     local.get $iy
     i32.const 0
     i32.lt_s
     if (result f32)
      f32.const 1
      local.get $x2
      f32.div
     else
      local.get $x2
     end
     br $~lib/util/math/powf_lut|inlined.0
    end
    local.get $ix
    i32.const 0
    i32.lt_s
    if
     block $~lib/util/math/checkintf|inlined.1 (result i32)
      local.get $iy
      local.set $iy|13
      local.get $iy|13
      i32.const 23
      i32.shr_u
      i32.const 255
      i32.and
      local.set $e|14
      local.get $e|14
      i32.const 127
      i32.lt_u
      if
       i32.const 0
       br $~lib/util/math/checkintf|inlined.1
      end
      local.get $e|14
      i32.const 127
      i32.const 23
      i32.add
      i32.gt_u
      if
       i32.const 2
       br $~lib/util/math/checkintf|inlined.1
      end
      i32.const 1
      i32.const 127
      i32.const 23
      i32.add
      local.get $e|14
      i32.sub
      i32.shl
      local.set $e|14
      local.get $iy|13
      local.get $e|14
      i32.const 1
      i32.sub
      i32.and
      if
       i32.const 0
       br $~lib/util/math/checkintf|inlined.1
      end
      local.get $iy|13
      local.get $e|14
      i32.and
      if
       i32.const 1
       br $~lib/util/math/checkintf|inlined.1
      end
      i32.const 2
      br $~lib/util/math/checkintf|inlined.1
     end
     local.set $yint
     local.get $yint
     i32.const 0
     i32.eq
     if
      local.get $x|2
      local.get $x|2
      f32.sub
      local.get $x|2
      local.get $x|2
      f32.sub
      f32.div
      br $~lib/util/math/powf_lut|inlined.0
     end
     local.get $yint
     i32.const 1
     i32.eq
     if
      i32.const 65536
      local.set $signBias
     end
     local.get $ix
     i32.const 2147483647
     i32.and
     local.set $ix
    end
    local.get $ix
    i32.const 8388608
    i32.lt_u
    if
     local.get $x|2
     f32.const 8388608
     f32.mul
     i32.reinterpret_f32
     local.set $ix
     local.get $ix
     i32.const 2147483647
     i32.and
     local.set $ix
     local.get $ix
     i32.const 23
     i32.const 23
     i32.shl
     i32.sub
     local.set $ix
    end
   end
   block $~lib/util/math/log2f_inline|inlined.0 (result f64)
    local.get $ix
    local.set $ux|16
    local.get $ux|16
    i32.const 1060306944
    i32.sub
    local.set $tmp
    local.get $tmp
    i32.const 23
    i32.const 4
    i32.sub
    i32.shr_u
    i32.const 15
    i32.and
    local.set $i
    local.get $tmp
    i32.const -8388608
    i32.and
    local.set $top
    local.get $ux|16
    local.get $top
    i32.sub
    local.set $uz
    local.get $top
    i32.const 23
    i32.shr_s
    local.set $k
    i32.const 1054448
    local.get $i
    i32.const 1
    i32.const 3
    i32.add
    i32.shl
    i32.add
    f64.load $0
    local.set $invc
    i32.const 1054448
    local.get $i
    i32.const 1
    i32.const 3
    i32.add
    i32.shl
    i32.add
    f64.load $0 offset=8
    local.set $logc
    local.get $uz
    f32.reinterpret_i32
    f64.promote_f32
    local.set $z
    local.get $z
    local.get $invc
    f64.mul
    f64.const 1
    f64.sub
    local.set $r
    local.get $logc
    local.get $k
    f64.convert_i32_s
    f64.add
    local.set $y0
    f64.const 0.288457581109214
    local.get $r
    f64.mul
    f64.const -0.36092606229713164
    f64.add
    local.set $y|27
    f64.const 0.480898481472577
    local.get $r
    f64.mul
    f64.const -0.7213474675006291
    f64.add
    local.set $p
    f64.const 1.4426950408774342
    local.get $r
    f64.mul
    local.get $y0
    f64.add
    local.set $q
    local.get $r
    local.get $r
    f64.mul
    local.set $r
    local.get $q
    local.get $p
    local.get $r
    f64.mul
    f64.add
    local.set $q
    local.get $y|27
    local.get $r
    local.get $r
    f64.mul
    f64.mul
    local.get $q
    f64.add
    local.set $y|27
    local.get $y|27
    br $~lib/util/math/log2f_inline|inlined.0
   end
   local.set $logx
   local.get $y|3
   f64.promote_f32
   local.get $logx
   f64.mul
   local.set $ylogx
   local.get $ylogx
   i64.reinterpret_f64
   i64.const 47
   i64.shr_u
   i64.const 65535
   i64.and
   i64.const 32959
   i64.ge_u
   if
    local.get $ylogx
    f64.const 127.99999995700433
    f64.gt
    if
     block $~lib/util/math/oflowf|inlined.0 (result f32)
      local.get $signBias
      local.set $sign
      block $~lib/util/math/xflowf|inlined.0 (result f32)
       local.get $sign
       local.set $sign|33
       i32.const 1879048192
       f32.reinterpret_i32
       local.set $y|34
       local.get $y|34
       f32.neg
       local.get $y|34
       local.get $sign|33
       select
       local.get $y|34
       f32.mul
       br $~lib/util/math/xflowf|inlined.0
      end
      br $~lib/util/math/oflowf|inlined.0
     end
     br $~lib/util/math/powf_lut|inlined.0
    end
    local.get $ylogx
    f64.const -150
    f64.le
    if
     block $~lib/util/math/uflowf|inlined.0 (result f32)
      local.get $signBias
      local.set $sign|35
      block $~lib/util/math/xflowf|inlined.1 (result f32)
       local.get $sign|35
       local.set $sign|36
       i32.const 268435456
       f32.reinterpret_i32
       local.set $y|37
       local.get $y|37
       f32.neg
       local.get $y|37
       local.get $sign|36
       select
       local.get $y|37
       f32.mul
       br $~lib/util/math/xflowf|inlined.1
      end
      br $~lib/util/math/uflowf|inlined.0
     end
     br $~lib/util/math/powf_lut|inlined.0
    end
   end
   block $~lib/util/math/exp2f_inline|inlined.0 (result f32)
    local.get $ylogx
    local.set $xd
    local.get $signBias
    local.set $signBias|39
    local.get $xd
    f64.const 211106232532992
    f64.add
    local.set $kd
    local.get $kd
    i64.reinterpret_f64
    local.set $ki
    local.get $xd
    local.get $kd
    f64.const 211106232532992
    f64.sub
    f64.sub
    local.set $r|42
    i32.const 1054704
    local.get $ki
    i32.wrap_i64
    i32.const 31
    i32.and
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $t
    local.get $t
    local.get $ki
    local.get $signBias|39
    i64.extend_i32_u
    i64.add
    i64.const 52
    i32.const 5
    i64.extend_i32_s
    i64.sub
    i64.shl
    i64.add
    local.set $t
    local.get $t
    f64.reinterpret_i64
    local.set $s
    f64.const 0.05550361559341535
    local.get $r|42
    f64.mul
    f64.const 0.2402284522445722
    f64.add
    local.set $z|44
    f64.const 0.6931471806916203
    local.get $r|42
    f64.mul
    f64.const 1
    f64.add
    local.set $y|45
    local.get $y|45
    local.get $z|44
    local.get $r|42
    local.get $r|42
    f64.mul
    f64.mul
    f64.add
    local.set $y|45
    local.get $y|45
    local.get $s
    f64.mul
    local.set $y|45
    local.get $y|45
    f32.demote_f64
    br $~lib/util/math/exp2f_inline|inlined.0
   end
   br $~lib/util/math/powf_lut|inlined.0
  end
  return
 )
 (func $assembly/math/pow_audio_scalar (param $in0 i32) (param $scalar f32) (param $begin i32) (param $end i32) (param $out i32)
  (local $inp f32)
  (local $res f32)
  (local $i i32)
  (local $offset i32)
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $inp
    local.get $scalar
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/math/pow_scalar_audio (param $scalar f32) (param $in0 i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $inp f32)
  (local $res f32)
  (local $i i32)
  (local $offset i32)
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $in0
    f32.load $0
    local.set $inp
    local.get $scalar
    local.get $inp
    call $~lib/math/NativeMathf.pow
    local.set $res
    local.get $out
    local.get $res
    f32.store $0
    local.get $inp
    f32.const 4
    f32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/math/pow_scalar_scalar (param $n1 f32) (param $n2 f32) (result f32)
  local.get $n1
  local.get $n2
  call $~lib/math/NativeMathf.pow
  return
 )
 (func $assembly/math/mul_audio_audio (param $in0 i32) (param $in1 i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $in0v v128)
  (local $in1v v128)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $in1
  local.get $offset
  i32.add
  local.set $in1
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/math/div_audio_scalar (param $in0 i32) (param $scalar f32) (param $begin i32) (param $end i32) (param $out i32)
  (local $scalarv v128)
  (local $in0v v128)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  local.get $scalar
  f32x4.splat
  local.set $scalarv
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/math/div_scalar_audio (param $scalar f32) (param $in0 i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $scalarv v128)
  (local $in0v v128)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  local.get $scalar
  f32x4.splat
  local.set $scalarv
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $scalarv
    local.get $in0v
    f32x4.div
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/math/add_audio_scalar (param $in0 i32) (param $scalar f32) (param $begin i32) (param $end i32) (param $out i32)
  (local $scalarv v128)
  (local $in0v v128)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  local.get $scalar
  f32x4.splat
  local.set $scalarv
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/math/add_audio_audio (param $in0 i32) (param $in1 i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $in0v v128)
  (local $in1v v128)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $in1
  local.get $offset
  i32.add
  local.set $in1
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/math/sub_audio_scalar (param $in0 i32) (param $scalar f32) (param $begin i32) (param $end i32) (param $out i32)
  (local $scalarv v128)
  (local $in0v v128)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  local.get $scalar
  f32x4.splat
  local.set $scalarv
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $scalarv
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/math/sub_audio_audio (param $in0 i32) (param $in1 i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $in0v v128)
  (local $in1v v128)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $in1
  local.get $offset
  i32.add
  local.set $in1
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.sub
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/math/not_audio (param $in0 i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $minus1v v128)
  (local $in0v v128)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  v128.const i32x4 0xbf800000 0xbf800000 0xbf800000 0xbf800000
  local.set $minus1v
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in0v
    local.get $minus1v
    f32x4.mul
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/math/to_audio_scalar (param $scalar f32) (param $begin i32) (param $end i32) (param $out i32)
  (local $scalarv v128)
  (local $i i32)
  (local $offset i32)
  local.get $scalar
  f32x4.splat
  local.set $scalarv
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $scalarv
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/graph/join/join21g (param $begin i32) (param $end i32) (param $in0 i32) (param $in1 i32) (param $out i32) (param $gain0 f32) (param $gain1 f32)
  (local $gain0v v128)
  (local $gain1v v128)
  (local $in0v v128)
  (local $in1v v128)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  local.get $gain0
  f32x4.splat
  local.set $gain0v
  local.get $gain1
  f32x4.splat
  local.set $gain1v
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $in1
  local.get $offset
  i32.add
  local.set $in1
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $gain0v
    f32x4.mul
    local.get $in1v
    local.get $gain1v
    f32x4.mul
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/graph/join/join21 (param $begin i32) (param $end i32) (param $in0 i32) (param $in1 i32) (param $out i32)
  (local $in0v v128)
  (local $in1v v128)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $in1
  local.get $offset
  i32.add
  local.set $in1
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $in0v
    local.get $in1
    v128.load $0
    local.set $in1v
    local.get $in0v
    local.get $in1v
    f32x4.add
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $in1
    i32.const 16
    i32.add
    local.set $in1
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/graph/dc-bias/dcBias (param $begin i32) (param $end i32) (param $block i32)
  (local $length i32)
  (local $sample f32)
  (local $prev f32)
  (local $diff f32)
  (local $abs f32)
  (local $alpha f32)
  (local $i i32)
  (local $offset i32)
  (local $x f32)
  (local $x|12 f32)
  (local $x|13 f32)
  (local $x|14 f32)
  (local $x|15 f32)
  (local $x|16 f32)
  (local $x|17 f32)
  (local $x|18 f32)
  (local $x|19 f32)
  (local $x|20 f32)
  (local $x|21 f32)
  (local $x|22 f32)
  (local $x|23 f32)
  (local $x|24 f32)
  (local $x|25 f32)
  (local $x|26 f32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  f32.const 0
  local.set $prev
  f32.const 0
  local.set $diff
  f32.const 0
  local.set $abs
  f32.const 0
  local.set $alpha
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $block
  local.get $offset
  i32.add
  local.set $block
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.1 (result f32)
     local.get $diff
     local.set $x
     local.get $x
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.1
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.2 (result f32)
     local.get $diff
     local.set $x|12
     local.get $x|12
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.2
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.3 (result f32)
     local.get $diff
     local.set $x|13
     local.get $x|13
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.3
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.4 (result f32)
     local.get $diff
     local.set $x|14
     local.get $x|14
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.4
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.5 (result f32)
     local.get $diff
     local.set $x|15
     local.get $x|15
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.5
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.6 (result f32)
     local.get $diff
     local.set $x|16
     local.get $x|16
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.6
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.7 (result f32)
     local.get $diff
     local.set $x|17
     local.get $x|17
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.7
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.8 (result f32)
     local.get $diff
     local.set $x|18
     local.get $x|18
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.8
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.9 (result f32)
     local.get $diff
     local.set $x|19
     local.get $x|19
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.9
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.10 (result f32)
     local.get $diff
     local.set $x|20
     local.get $x|20
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.10
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.11 (result f32)
     local.get $diff
     local.set $x|21
     local.get $x|21
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.11
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.12 (result f32)
     local.get $diff
     local.set $x|22
     local.get $x|22
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.12
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.13 (result f32)
     local.get $diff
     local.set $x|23
     local.get $x|23
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.13
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.14 (result f32)
     local.get $diff
     local.set $x|24
     local.get $x|24
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.14
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.15 (result f32)
     local.get $diff
     local.set $x|25
     local.get $x|25
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.15
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $block
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.16 (result f32)
     local.get $diff
     local.set $x|26
     local.get $x|26
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.16
    end
    local.set $abs
    local.get $abs
    f32.const 0.6000000238418579
    f32.gt
    if
     f32.const 0.6000000238418579
     local.get $abs
     f32.sub
     f32.const 0.6000000238418579
     f32.div
     local.set $alpha
     local.get $alpha
     f32.const 1
     f32.gt
     if
      f32.const 1
      local.set $alpha
     else
      local.get $alpha
      f32.const 0
      f32.lt
      if
       f32.const 0
       local.set $alpha
      end
     end
     local.get $sample
     local.set $prev
     local.get $prev
     local.get $alpha
     local.get $diff
     f32.mul
     f32.add
     local.set $sample
     local.get $block
     local.get $sample
     f32.store $0
    else
     local.get $sample
     local.set $prev
    end
    local.get $block
    i32.const 4
    i32.add
    local.set $block
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/graph/rms/rms (param $begin i32) (param $end i32) (param $block i32) (result f32)
  (local $sumv v128)
  (local $sv v128)
  (local $total f32)
  (local $i i32)
  (local $offset i32)
  (local $sum f32)
  (local $x f32)
  f32.const 0
  f32x4.splat
  local.set $sumv
  f32.const 0
  f32x4.splat
  local.set $sv
  local.get $end
  local.get $begin
  i32.sub
  f32.convert_i32_u
  local.set $total
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $block
  local.get $offset
  i32.add
  local.set $block
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $block
    v128.load $0
    local.set $sv
    local.get $sumv
    local.get $sv
    local.get $sv
    f32x4.mul
    f32x4.add
    local.set $sumv
    local.get $block
    i32.const 16
    i32.add
    local.set $block
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $sumv
  f32x4.extract_lane 0
  local.get $sumv
  f32x4.extract_lane 1
  f32.add
  local.get $sumv
  f32x4.extract_lane 2
  f32.add
  local.get $sumv
  f32x4.extract_lane 3
  f32.add
  local.set $sum
  block $~lib/math/NativeMathf.sqrt|inlined.0 (result f32)
   local.get $sum
   local.get $total
   f32.div
   local.set $x
   local.get $x
   f32.sqrt
   br $~lib/math/NativeMathf.sqrt|inlined.0
  end
  return
 )
 (func $assembly/graph/copy/copyInto (param $begin i32) (param $end i32) (param $inp i32) (param $out i32)
  (local $size i32)
  (local $offset i32)
  local.get $end
  local.get $begin
  i32.sub
  i32.const 2
  i32.shl
  local.set $size
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $out
  local.get $offset
  i32.add
  local.get $inp
  local.get $offset
  i32.add
  local.get $size
  memory.copy $0 $0
 )
 (func $assembly/index/preventTreeShaking (param $gen i32)
  (local $core i32)
  (local $engine i32)
  (local $engineSignal i32)
  (local $rateSamples i32)
  (local $runner i32)
  (local $ctrl i32)
  (local $signal i32)
  (local $L i32)
  (local $R i32)
  (local $LR i32)
  (local $bar i32)
  (local $last i32)
  (local $zero i32)
  (local $zeroSize i32)
  (local $zeroMem i32)
  (local $sin i32)
  (local $sinSize i32)
  (local $exp i32)
  (local $expSize i32)
  (local $saw i32)
  (local $sawSize i32)
  (local $ramp i32)
  (local $rampSize i32)
  (local $sqr i32)
  (local $sqrSize i32)
  (local $tri i32)
  (local $triSize i32)
  (local $noise i32)
  (local $noiseSize i32)
  (local $dc i32)
  (local $dcSize i32)
  (local $delay i32)
  (local $delaySize i32)
  (local $tap i32)
  (local $tapSize i32)
  (local $lp i32)
  (local $lpSize i32)
  (local $rate i32)
  (local $rateSize i32)
  (local $blp i32)
  (local $blpSize i32)
  (local $bhp i32)
  (local $bhpSize i32)
  (local $bbp i32)
  (local $bbpSize i32)
  (local $bno i32)
  (local $bnoSize i32)
  (local $bpk i32)
  (local $bpkSize i32)
  (local $bap i32)
  (local $bapSize i32)
  (local $bls i32)
  (local $blsSize i32)
  (local $bhs i32)
  (local $bhsSize i32)
  (local $slp i32)
  (local $slpSize i32)
  (local $shp i32)
  (local $shpSize i32)
  (local $sbp i32)
  (local $sbpSize i32)
  (local $sap i32)
  (local $sapSize i32)
  (local $sno i32)
  (local $snoSize i32)
  (local $spk i32)
  (local $spkSize i32)
  (local $mlp i32)
  (local $mlpSize i32)
  (local $mhp i32)
  (local $mhpSize i32)
  (local $daverb i32)
  (local $daverbSize i32)
  (local $tanh i32)
  (local $tanhSize i32)
  (local $diode i32)
  (local $diodeSize i32)
  (local $dclip i32)
  (local $dclipSize i32)
  (local $dcliplin i32)
  (local $dcliplinSize i32)
  (local $dclipexp i32)
  (local $dclipexpSize i32)
  (local $clamp i32)
  (local $clampSize i32)
  (local $clip i32)
  (local $clipSize i32)
  (local $comp i32)
  (local $compSize i32)
  (local $inc i32)
  (local $incSize i32)
  (local $freesound i32)
  (local $freesoundSize i32)
  (local $say i32)
  (local $saySize i32)
  i32.const 0
  i32.const 0
  call $assembly/core/engine/Core#constructor
  local.set $core
  i32.const 0
  i32.const 0
  local.get $core
  call $assembly/core/engine/Engine#constructor
  local.set $engine
  local.get $engine
  call $assembly/core/engine/Engine#get:signal
  local.set $engineSignal
  local.get $engine
  call $assembly/core/engine/Engine#get:rateSamples
  local.set $rateSamples
  local.get $engine
  i32.const 0
  call $assembly/core/engine/Engine#createBlock
  drop
  local.get $engine
  call $assembly/core/engine/Engine#get:clock
  f64.const 0
  call $assembly/core/clock/Clock#set:time
  local.get $engine
  call $assembly/core/engine/Engine#get:runner
  local.set $runner
  local.get $runner
  call $assembly/core/runner/Runner#clearLastBar
  local.get $runner
  call $assembly/core/runner/Runner#get:ctrls
  i32.const 0
  call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__get
  local.set $ctrl
  local.get $ctrl
  call $assembly/core/runner/Ctrl#get:signal
  local.set $signal
  local.get $runner
  i32.const 0
  i32.const 0
  i32.const 0
  local.get $signal
  call $assembly/core/runner/Runner#fill
  local.get $runner
  i32.const 0
  i32.const 0
  local.get $signal
  call $assembly/core/runner/Runner#process
  local.get $signal
  call $assembly/core/runner/Signal#get:L
  local.set $L
  local.get $signal
  call $assembly/core/runner/Signal#get:R
  local.set $R
  local.get $signal
  call $assembly/core/runner/Signal#get:LR
  local.set $LR
  local.get $ctrl
  i32.const 0
  call $assembly/core/runner/Ctrl#set:literalsCount
  local.get $ctrl
  i32.const 0
  call $assembly/core/runner/Ctrl#set:liveLiterals
  local.get $ctrl
  i32.const 0
  call $assembly/core/runner/Ctrl#set:ownLiterals
  local.get $runner
  call $assembly/core/runner/Runner#get:bars
  i32.const 0
  call $~lib/staticarray/StaticArray<assembly/core/runner/Bar|null>#__get
  local.set $bar
  local.get $bar
  if
   local.get $bar
   call $assembly/core/runner/Bar#get:tracks
   i32.const 0
   local.get $ctrl
   call $~lib/staticarray/StaticArray<assembly/core/runner/Ctrl>#__set
   local.get $bar
   i32.const 3
   call $assembly/core/runner/Bar#set:size
   local.get $bar
   i32.const 0
   call $assembly/core/runner/Bar#set:main
  end
  local.get $runner
  call $assembly/core/runner/Runner#get:last
  local.set $last
  local.get $runner
  local.get $bar
  call $assembly/core/runner/Runner#set:last
  local.get $runner
  i32.const 0
  call $assembly/core/runner/Runner#set:last
  i32.const 0
  local.get $engine
  call $assembly/gen/zero/Zero#constructor
  local.set $zero
  call $assembly/util/getObjectSize<assembly/gen/zero/Zero>
  local.set $zeroSize
  local.get $zero
  local.get $zeroSize
  call $assembly/util/cloneI32
  local.set $zeroMem
  i32.const 0
  local.get $engine
  call $assembly/gen/sin/Sin#constructor
  local.set $sin
  call $assembly/util/getObjectSize<assembly/gen/sin/Sin>
  local.set $sinSize
  local.get $sin
  f32.const 0
  call $assembly/gen/osc/Osc#set:trig
  i32.const 0
  local.get $engine
  call $assembly/gen/exp/Exp#constructor
  local.set $exp
  call $assembly/util/getObjectSize<assembly/gen/exp/Exp>
  local.set $expSize
  i32.const 0
  local.get $engine
  call $assembly/gen/saw/Saw#constructor
  local.set $saw
  call $assembly/util/getObjectSize<assembly/gen/saw/Saw>
  local.set $sawSize
  i32.const 0
  local.get $engine
  call $assembly/gen/ramp/Ramp#constructor
  local.set $ramp
  call $assembly/util/getObjectSize<assembly/gen/ramp/Ramp>
  local.set $rampSize
  i32.const 0
  local.get $engine
  call $assembly/gen/sqr/Sqr#constructor
  local.set $sqr
  call $assembly/util/getObjectSize<assembly/gen/sqr/Sqr>
  local.set $sqrSize
  i32.const 0
  local.get $engine
  call $assembly/gen/tri/Tri#constructor
  local.set $tri
  call $assembly/util/getObjectSize<assembly/gen/tri/Tri>
  local.set $triSize
  i32.const 0
  local.get $engine
  call $assembly/gen/noise/Noise#constructor
  local.set $noise
  call $assembly/util/getObjectSize<assembly/gen/noise/Noise>
  local.set $noiseSize
  i32.const 0
  local.get $engine
  call $assembly/gen/dc/Dc#constructor
  local.set $dc
  call $assembly/util/getObjectSize<assembly/gen/dc/Dc>
  local.set $dcSize
  i32.const 0
  local.get $engine
  call $assembly/gen/delay/Delay#constructor
  local.set $delay
  call $assembly/util/getObjectSize<assembly/gen/delay/Delay>
  local.set $delaySize
  i32.const 0
  local.get $engine
  call $assembly/gen/tap/Tap#constructor
  local.set $tap
  call $assembly/util/getObjectSize<assembly/gen/tap/Tap>
  local.set $tapSize
  i32.const 0
  local.get $engine
  call $assembly/gen/lp/Lp#constructor
  local.set $lp
  call $assembly/util/getObjectSize<assembly/gen/lp/Lp>
  local.set $lpSize
  i32.const 0
  local.get $engine
  call $assembly/gen/rate/Rate#constructor
  local.set $rate
  call $assembly/util/getObjectSize<assembly/gen/rate/Rate>
  local.set $rateSize
  i32.const 0
  local.get $engine
  call $assembly/gen/blp/Blp#constructor
  local.set $blp
  call $assembly/util/getObjectSize<assembly/gen/blp/Blp>
  local.set $blpSize
  i32.const 0
  local.get $engine
  call $assembly/gen/bhp/Bhp#constructor
  local.set $bhp
  call $assembly/util/getObjectSize<assembly/gen/bhp/Bhp>
  local.set $bhpSize
  i32.const 0
  local.get $engine
  call $assembly/gen/bbp/Bbp#constructor
  local.set $bbp
  call $assembly/util/getObjectSize<assembly/gen/bbp/Bbp>
  local.set $bbpSize
  i32.const 0
  local.get $engine
  call $assembly/gen/bno/Bno#constructor
  local.set $bno
  call $assembly/util/getObjectSize<assembly/gen/bno/Bno>
  local.set $bnoSize
  i32.const 0
  local.get $engine
  call $assembly/gen/bpk/Bpk#constructor
  local.set $bpk
  call $assembly/util/getObjectSize<assembly/gen/bpk/Bpk>
  local.set $bpkSize
  i32.const 0
  local.get $engine
  call $assembly/gen/bap/Bap#constructor
  local.set $bap
  call $assembly/util/getObjectSize<assembly/gen/bap/Bap>
  local.set $bapSize
  i32.const 0
  local.get $engine
  call $assembly/gen/bls/Bls#constructor
  local.set $bls
  call $assembly/util/getObjectSize<assembly/gen/bls/Bls>
  local.set $blsSize
  i32.const 0
  local.get $engine
  call $assembly/gen/bhs/Bhs#constructor
  local.set $bhs
  call $assembly/util/getObjectSize<assembly/gen/bhs/Bhs>
  local.set $bhsSize
  i32.const 0
  local.get $engine
  call $assembly/gen/slp/Slp#constructor
  local.set $slp
  call $assembly/util/getObjectSize<assembly/gen/slp/Slp>
  local.set $slpSize
  i32.const 0
  local.get $engine
  call $assembly/gen/shp/Shp#constructor
  local.set $shp
  call $assembly/util/getObjectSize<assembly/gen/shp/Shp>
  local.set $shpSize
  i32.const 0
  local.get $engine
  call $assembly/gen/sbp/Sbp#constructor
  local.set $sbp
  call $assembly/util/getObjectSize<assembly/gen/sbp/Sbp>
  local.set $sbpSize
  i32.const 0
  local.get $engine
  call $assembly/gen/sap/Sap#constructor
  local.set $sap
  call $assembly/util/getObjectSize<assembly/gen/sap/Sap>
  local.set $sapSize
  i32.const 0
  local.get $engine
  call $assembly/gen/sno/Sno#constructor
  local.set $sno
  call $assembly/util/getObjectSize<assembly/gen/sno/Sno>
  local.set $snoSize
  i32.const 0
  local.get $engine
  call $assembly/gen/spk/Spk#constructor
  local.set $spk
  call $assembly/util/getObjectSize<assembly/gen/spk/Spk>
  local.set $spkSize
  i32.const 0
  local.get $engine
  call $assembly/gen/mlp/Mlp#constructor
  local.set $mlp
  call $assembly/util/getObjectSize<assembly/gen/mlp/Mlp>
  local.set $mlpSize
  i32.const 0
  local.get $engine
  call $assembly/gen/mhp/Mhp#constructor
  local.set $mhp
  call $assembly/util/getObjectSize<assembly/gen/mhp/Mhp>
  local.set $mhpSize
  i32.const 0
  local.get $engine
  call $assembly/gen/daverb/Daverb#constructor
  local.set $daverb
  call $assembly/util/getObjectSize<assembly/gen/daverb/Daverb>
  local.set $daverbSize
  i32.const 0
  local.get $engine
  call $assembly/gen/tanh/Tanh#constructor
  local.set $tanh
  call $assembly/util/getObjectSize<assembly/gen/tanh/Tanh>
  local.set $tanhSize
  i32.const 0
  local.get $engine
  call $assembly/gen/diode/Diode#constructor
  local.set $diode
  call $assembly/util/getObjectSize<assembly/gen/diode/Diode>
  local.set $diodeSize
  i32.const 0
  local.get $engine
  call $assembly/gen/dclip/Dclip#constructor
  local.set $dclip
  call $assembly/util/getObjectSize<assembly/gen/dclip/Dclip>
  local.set $dclipSize
  i32.const 0
  local.get $engine
  call $assembly/gen/dcliplin/Dcliplin#constructor
  local.set $dcliplin
  call $assembly/util/getObjectSize<assembly/gen/dcliplin/Dcliplin>
  local.set $dcliplinSize
  i32.const 0
  local.get $engine
  call $assembly/gen/dclipexp/Dclipexp#constructor
  local.set $dclipexp
  call $assembly/util/getObjectSize<assembly/gen/dclipexp/Dclipexp>
  local.set $dclipexpSize
  i32.const 0
  local.get $engine
  call $assembly/gen/clamp/Clamp#constructor
  local.set $clamp
  call $assembly/util/getObjectSize<assembly/gen/clamp/Clamp>
  local.set $clampSize
  i32.const 0
  local.get $engine
  call $assembly/gen/clip/Clip#constructor
  local.set $clip
  call $assembly/util/getObjectSize<assembly/gen/clip/Clip>
  local.set $clipSize
  i32.const 0
  local.get $engine
  call $assembly/gen/comp/Comp#constructor
  local.set $comp
  call $assembly/util/getObjectSize<assembly/gen/comp/Comp>
  local.set $compSize
  i32.const 0
  local.get $engine
  call $assembly/gen/inc/Inc#constructor
  local.set $inc
  call $assembly/util/getObjectSize<assembly/gen/inc/Inc>
  local.set $incSize
  local.get $inc
  f32.const 0
  call $assembly/gen/inc/Inc#set:trig
  i32.const 0
  local.get $engine
  call $assembly/gen/freesound/Freesound#constructor
  local.set $freesound
  call $assembly/util/getObjectSize<assembly/gen/freesound/Freesound>
  local.set $freesoundSize
  local.get $freesound
  call $assembly/gen/freesound/Freesound#get:id
  call $assembly/env/logf
  i32.const 0
  local.get $engine
  call $assembly/gen/say/Say#constructor
  local.set $say
  call $assembly/util/getObjectSize<assembly/gen/say/Say>
  local.set $saySize
  local.get $gen
  call $assembly/gen/gen/Gen#_update@override
  local.get $gen
  call $assembly/gen/gen/Gen#_reset@override
  local.get $gen
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/gen/gen/Gen#_audio@override
  i32.const 0
  f32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/math/pow_audio_scalar
  f32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/math/pow_scalar_audio
  f32.const 0
  f32.const 0
  call $assembly/math/pow_scalar_scalar
  drop
  i32.const 0
  f32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/math/mul_audio_scalar
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/math/mul_audio_audio
  i32.const 0
  f32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/math/div_audio_scalar
  f32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/math/div_scalar_audio
  i32.const 0
  f32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/math/add_audio_scalar
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/math/add_audio_audio
  i32.const 0
  f32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/math/sub_audio_scalar
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/math/sub_audio_audio
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/math/not_audio
  f32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/math/to_audio_scalar
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/graph/fade/fadeIn
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/graph/fade/fadeOut
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  f32.const 0
  f32.const 0
  call $assembly/graph/join/join21g
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/graph/join/join21
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/graph/dc-bias/dcBias
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/graph/rms/rms
  drop
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/graph/copy/copyMem
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/graph/copy/copyInto
 )
 (func $assembly/bench/bench-audio/benchAudio (param $gen i32) (param $targetPtr i32) (param $times i32)
  (local $i i32)
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $times
   i32.lt_u
   if
    local.get $gen
    i32.const 0
    global.get $assembly/bench/bench-audio/kBenchSize
    local.get $targetPtr
    call $assembly/gen/gen/Gen#_audio@override
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/gen/Gen#get:gain (param $this i32) (result f32)
  local.get $this
  f32.load $0
 )
 (func $assembly/bench/bench-audio/benchAudioGain (param $gen i32) (param $targetPtr i32) (param $times i32)
  (local $i i32)
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $times
   i32.lt_u
   if
    local.get $gen
    i32.const 0
    global.get $assembly/bench/bench-audio/kBenchSize
    local.get $targetPtr
    call $assembly/gen/gen/Gen#_audio@override
    local.get $targetPtr
    local.get $gen
    call $assembly/gen/gen/Gen#get:gain
    i32.const 0
    global.get $assembly/bench/bench-audio/kBenchSize
    local.get $targetPtr
    call $assembly/math/mul_audio_scalar
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/bench/bench-audio/benchAudioTwo (param $gen0 i32) (param $gen1 i32) (param $out0 i32) (param $out1 i32) (param $targetPtr i32) (param $times i32)
  (local $i i32)
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $times
   i32.lt_u
   if
    local.get $gen0
    i32.const 0
    global.get $assembly/bench/bench-audio/kBenchSize
    local.get $out0
    call $assembly/gen/gen/Gen#_audio@override
    local.get $gen1
    i32.const 0
    global.get $assembly/bench/bench-audio/kBenchSize
    local.get $out1
    call $assembly/gen/gen/Gen#_audio@override
    i32.const 0
    global.get $assembly/bench/bench-audio/kBenchSize
    local.get $out0
    local.get $out1
    local.get $targetPtr
    f32.const 0.5
    f32.const 0.5
    call $assembly/graph/join/join21g
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/bap/Bap#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/bap/Bap#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=112
 )
 (func $assembly/gen/biquad/Biquad#get:_params_freq (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=96
 )
 (func $~lib/array/Array<f32>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<f32>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $~lib/array/Array<f32>#__get (param $this i32) (param $index i32) (result f32)
  (local $value f32)
  local.get $index
  local.get $this
  call $~lib/array/Array<f32>#get:length_
  i32.ge_u
  if
   i32.const 1051072
   i32.const 1053872
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  call $~lib/array/Array<f32>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
  return
 )
 (func $assembly/util/clamp (param $min f32) (param $max f32) (param $def f32) (param $value f32) (result f32)
  local.get $value
  local.get $value
  f32.sub
  f32.const 0
  f32.ne
  if
   local.get $def
   return
  end
  local.get $value
  local.get $min
  f32.lt
  if
   local.get $min
   local.set $value
  end
  local.get $value
  local.get $max
  f32.gt
  if
   local.get $max
   local.set $value
  end
  local.get $value
  return
 )
 (func $assembly/util/paramClamp (param $param i32) (param $value f32) (result f32)
  local.get $param
  i32.const 0
  call $~lib/array/Array<f32>#__get
  local.get $param
  i32.const 1
  call $~lib/array/Array<f32>#__get
  local.get $param
  i32.const 2
  call $~lib/array/Array<f32>#__get
  local.get $value
  call $assembly/util/clamp
  return
 )
 (func $assembly/gen/biquad/Biquad#get:_params_Q (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=100
 )
 (func $assembly/gen/gen/Gen#get:_engine (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/gen/biquad/Biquad#get:_a0 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=48
 )
 (func $assembly/gen/biquad/Biquad#get:_b0 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=72
 )
 (func $assembly/gen/biquad/Biquad#get:_b1 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=80
 )
 (func $assembly/gen/biquad/Biquad#get:_b2 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=88
 )
 (func $assembly/gen/biquad/Biquad#get:_a1 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=56
 )
 (func $assembly/gen/biquad/Biquad#get:_a2 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=64
 )
 (func $assembly/gen/bap/Bap#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $this|4 i32)
  (local $freq|5 f32)
  (local $Q|6 f32)
  (local $this|7 i32)
  (local $freq|8 f64)
  (local $omega f64)
  (local $sin0 f64)
  (local $cos0 f64)
  (local $this|12 i32)
  (local $sin0|13 f64)
  (local $Q|14 f64)
  (local $alpha f64)
  (local $this|16 i32)
  (local $g f64)
  block $assembly/gen/biquad/Biquad#_allpass|inlined.0
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/bap/Bap#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/bap/Bap#get:q
   local.set $Q
   block $assembly/gen/biquad/Biquad#_validate|inlined.0 (result i32)
    local.get $this|1
    local.set $this|4
    local.get $freq
    local.set $freq|5
    local.get $Q
    local.set $Q|6
    local.get $freq|5
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.0
    end
    local.get $freq|5
    local.get $freq|5
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.0
    end
    local.get $Q|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.0
    end
    local.get $Q|6
    local.get $Q|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.0
    end
    i32.const 1
    br $assembly/gen/biquad/Biquad#_validate|inlined.0
   end
   i32.eqz
   if
    br $assembly/gen/biquad/Biquad#_allpass|inlined.0
   end
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   block $assembly/gen/biquad/Biquad#_omega|inlined.0 (result f64)
    local.get $this|1
    local.set $this|7
    local.get $freq
    f64.promote_f32
    local.set $freq|8
    f64.const 6.283185307179586
    local.get $freq|8
    f64.mul
    local.get $this|7
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:audioRate
    f64.convert_i32_u
    f64.div
    br $assembly/gen/biquad/Biquad#_omega|inlined.0
   end
   local.set $omega
   local.get $omega
   call $~lib/math/NativeMath.sin
   local.set $sin0
   local.get $omega
   call $~lib/math/NativeMath.cos
   local.set $cos0
   block $assembly/gen/biquad/Biquad#_alpha|inlined.0 (result f64)
    local.get $this|1
    local.set $this|12
    local.get $sin0
    local.set $sin0|13
    local.get $Q
    f64.promote_f32
    local.set $Q|14
    local.get $sin0|13
    f64.const 2
    local.get $Q|14
    f64.mul
    f64.div
    br $assembly/gen/biquad/Biquad#_alpha|inlined.0
   end
   local.set $alpha
   local.get $this|1
   f64.const 1
   local.get $alpha
   f64.sub
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|1
   f64.const -2
   local.get $cos0
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|1
   f64.const 1
   local.get $alpha
   f64.add
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|1
   f64.const 1
   local.get $alpha
   f64.add
   call $assembly/gen/biquad/Biquad#set:_a0
   local.get $this|1
   f64.const -2
   local.get $cos0
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|1
   f64.const 1
   local.get $alpha
   f64.sub
   call $assembly/gen/biquad/Biquad#set:_a2
   local.get $this|1
   local.set $this|16
   f64.const 1
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a0
   f64.div
   local.set $g
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b0
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a2
  end
 )
 (func $assembly/gen/bbp/Bbp#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/bbp/Bbp#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=112
 )
 (func $assembly/gen/bbp/Bbp#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $this|4 i32)
  (local $freq|5 f32)
  (local $Q|6 f32)
  (local $this|7 i32)
  (local $freq|8 f64)
  (local $omega f64)
  (local $sin0 f64)
  (local $cos0 f64)
  (local $this|12 i32)
  (local $sin0|13 f64)
  (local $Q|14 f64)
  (local $alpha f64)
  (local $this|16 i32)
  (local $g f64)
  block $assembly/gen/biquad/Biquad#_bandpass|inlined.0
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/bbp/Bbp#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/bbp/Bbp#get:q
   local.set $Q
   block $assembly/gen/biquad/Biquad#_validate|inlined.1 (result i32)
    local.get $this|1
    local.set $this|4
    local.get $freq
    local.set $freq|5
    local.get $Q
    local.set $Q|6
    local.get $freq|5
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.1
    end
    local.get $freq|5
    local.get $freq|5
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.1
    end
    local.get $Q|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.1
    end
    local.get $Q|6
    local.get $Q|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.1
    end
    i32.const 1
    br $assembly/gen/biquad/Biquad#_validate|inlined.1
   end
   i32.eqz
   if
    br $assembly/gen/biquad/Biquad#_bandpass|inlined.0
   end
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   block $assembly/gen/biquad/Biquad#_omega|inlined.1 (result f64)
    local.get $this|1
    local.set $this|7
    local.get $freq
    f64.promote_f32
    local.set $freq|8
    f64.const 6.283185307179586
    local.get $freq|8
    f64.mul
    local.get $this|7
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:audioRate
    f64.convert_i32_u
    f64.div
    br $assembly/gen/biquad/Biquad#_omega|inlined.1
   end
   local.set $omega
   local.get $omega
   call $~lib/math/NativeMath.sin
   local.set $sin0
   local.get $omega
   call $~lib/math/NativeMath.cos
   local.set $cos0
   block $assembly/gen/biquad/Biquad#_alpha|inlined.1 (result f64)
    local.get $this|1
    local.set $this|12
    local.get $sin0
    local.set $sin0|13
    local.get $Q
    f64.promote_f32
    local.set $Q|14
    local.get $sin0|13
    f64.const 2
    local.get $Q|14
    f64.mul
    f64.div
    br $assembly/gen/biquad/Biquad#_alpha|inlined.1
   end
   local.set $alpha
   local.get $this|1
   local.get $alpha
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|1
   f64.const 0
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|1
   local.get $alpha
   f64.neg
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|1
   f64.const 1
   local.get $alpha
   f64.add
   call $assembly/gen/biquad/Biquad#set:_a0
   local.get $this|1
   f64.const -2
   local.get $cos0
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|1
   f64.const 1
   local.get $alpha
   f64.sub
   call $assembly/gen/biquad/Biquad#set:_a2
   local.get $this|1
   local.set $this|16
   f64.const 1
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a0
   f64.div
   local.set $g
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b0
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a2
  end
 )
 (func $assembly/gen/bhp/Bhp#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/bhp/Bhp#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=112
 )
 (func $assembly/gen/bhp/Bhp#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $this|4 i32)
  (local $freq|5 f32)
  (local $Q|6 f32)
  (local $this|7 i32)
  (local $freq|8 f64)
  (local $omega f64)
  (local $sin0 f64)
  (local $cos0 f64)
  (local $this|12 i32)
  (local $sin0|13 f64)
  (local $Q|14 f64)
  (local $alpha f64)
  (local $this|16 i32)
  (local $g f64)
  block $assembly/gen/biquad/Biquad#_highpass|inlined.0
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/bhp/Bhp#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/bhp/Bhp#get:q
   local.set $Q
   block $assembly/gen/biquad/Biquad#_validate|inlined.2 (result i32)
    local.get $this|1
    local.set $this|4
    local.get $freq
    local.set $freq|5
    local.get $Q
    local.set $Q|6
    local.get $freq|5
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.2
    end
    local.get $freq|5
    local.get $freq|5
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.2
    end
    local.get $Q|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.2
    end
    local.get $Q|6
    local.get $Q|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.2
    end
    i32.const 1
    br $assembly/gen/biquad/Biquad#_validate|inlined.2
   end
   i32.eqz
   if
    br $assembly/gen/biquad/Biquad#_highpass|inlined.0
   end
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   block $assembly/gen/biquad/Biquad#_omega|inlined.2 (result f64)
    local.get $this|1
    local.set $this|7
    local.get $freq
    f64.promote_f32
    local.set $freq|8
    f64.const 6.283185307179586
    local.get $freq|8
    f64.mul
    local.get $this|7
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:audioRate
    f64.convert_i32_u
    f64.div
    br $assembly/gen/biquad/Biquad#_omega|inlined.2
   end
   local.set $omega
   local.get $omega
   call $~lib/math/NativeMath.sin
   local.set $sin0
   local.get $omega
   call $~lib/math/NativeMath.cos
   local.set $cos0
   block $assembly/gen/biquad/Biquad#_alpha|inlined.2 (result f64)
    local.get $this|1
    local.set $this|12
    local.get $sin0
    local.set $sin0|13
    local.get $Q
    f64.promote_f32
    local.set $Q|14
    local.get $sin0|13
    f64.const 2
    local.get $Q|14
    f64.mul
    f64.div
    br $assembly/gen/biquad/Biquad#_alpha|inlined.2
   end
   local.set $alpha
   local.get $this|1
   f64.const 1
   local.get $cos0
   f64.add
   f64.const 2
   f64.div
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|1
   f64.const 1
   local.get $cos0
   f64.add
   f64.neg
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|1
   f64.const 1
   local.get $cos0
   f64.add
   f64.const 2
   f64.div
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|1
   f64.const 1
   local.get $alpha
   f64.add
   call $assembly/gen/biquad/Biquad#set:_a0
   local.get $this|1
   f64.const -2
   local.get $cos0
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|1
   f64.const 1
   local.get $alpha
   f64.sub
   call $assembly/gen/biquad/Biquad#set:_a2
   local.get $this|1
   local.set $this|16
   f64.const 1
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a0
   f64.div
   local.set $g
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b0
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a2
  end
 )
 (func $assembly/gen/bhs/Bhs#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/bhs/Bhs#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=112
 )
 (func $assembly/gen/bhs/Bhs#get:amt (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=116
 )
 (func $assembly/gen/biquad/Biquad#get:_params_gain (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=104
 )
 (func $~lib/math/NativeMath.pow (param $x f64) (param $y f64) (result f64)
  (local $x|2 f64)
  (local $y|3 f64)
  (local $sign_bias i32)
  (local $ix i64)
  (local $iy i64)
  (local $topx i64)
  (local $topy i64)
  (local $u i64)
  (local $u|10 i64)
  (local $x2 f64)
  (local $iy|12 i64)
  (local $e i64)
  (local $iy|14 i64)
  (local $e|15 i64)
  (local $yint i32)
  (local $ix|17 i64)
  (local $tmp i64)
  (local $i i32)
  (local $k i64)
  (local $iz i64)
  (local $z f64)
  (local $kd f64)
  (local $invc f64)
  (local $logc f64)
  (local $logctail f64)
  (local $zhi f64)
  (local $zlo f64)
  (local $rhi f64)
  (local $rlo f64)
  (local $r f64)
  (local $t1 f64)
  (local $t2 f64)
  (local $lo1 f64)
  (local $lo2 f64)
  (local $ar f64)
  (local $ar2 f64)
  (local $ar3 f64)
  (local $arhi f64)
  (local $arhi2 f64)
  (local $hi f64)
  (local $lo3 f64)
  (local $lo4 f64)
  (local $p f64)
  (local $lo f64)
  (local $y|46 f64)
  (local $hi|47 f64)
  (local $lo|48 f64)
  (local $ehi f64)
  (local $elo f64)
  (local $yhi f64)
  (local $ylo f64)
  (local $lhi f64)
  (local $llo f64)
  (local $x|55 f64)
  (local $xtail f64)
  (local $sign_bias|57 i32)
  (local $abstop i32)
  (local $ki i64)
  (local $top i64)
  (local $sbits i64)
  (local $idx i32)
  (local $kd|63 f64)
  (local $z|64 f64)
  (local $r|65 f64)
  (local $r2 f64)
  (local $scale f64)
  (local $tail f64)
  (local $tmp|69 f64)
  (local $ux i64)
  (local $sign i32)
  (local $sign|72 i32)
  (local $y|73 f64)
  (local $sign|74 i32)
  (local $sign|75 i32)
  (local $y|76 f64)
  (local $tmp|77 f64)
  (local $sbits|78 i64)
  (local $ki|79 i64)
  (local $scale|80 f64)
  (local $y|81 f64)
  (local $one f64)
  (local $lo|83 f64)
  (local $hi|84 f64)
  local.get $y
  f64.abs
  f64.const 2
  f64.le
  if
   local.get $y
   f64.const 2
   f64.eq
   if
    local.get $x
    local.get $x
    f64.mul
    return
   end
   local.get $y
   f64.const 0.5
   f64.eq
   if
    local.get $x
    f64.sqrt
    f64.abs
    f64.const inf
    local.get $x
    f64.const inf
    f64.neg
    f64.ne
    select
    return
   end
   local.get $y
   f64.const -1
   f64.eq
   if
    f64.const 1
    local.get $x
    f64.div
    return
   end
   local.get $y
   f64.const 1
   f64.eq
   if
    local.get $x
    return
   end
   local.get $y
   f64.const 0
   f64.eq
   if
    f64.const 1
    return
   end
  end
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  block $~lib/util/math/pow_lut|inlined.0 (result f64)
   local.get $x
   local.set $x|2
   local.get $y
   local.set $y|3
   i32.const 0
   local.set $sign_bias
   local.get $x|2
   i64.reinterpret_f64
   local.set $ix
   local.get $y|3
   i64.reinterpret_f64
   local.set $iy
   local.get $ix
   i64.const 52
   i64.shr_u
   local.set $topx
   local.get $iy
   i64.const 52
   i64.shr_u
   local.set $topy
   local.get $topx
   i64.const 1
   i64.sub
   i64.const 2047
   i64.const 1
   i64.sub
   i64.ge_u
   if (result i32)
    i32.const 1
   else
    local.get $topy
    i64.const 2047
    i64.and
    i64.const 958
    i64.sub
    i64.const 1086
    i64.const 958
    i64.sub
    i64.ge_u
   end
   if
    block $~lib/util/math/zeroinfnan|inlined.0 (result i32)
     local.get $iy
     local.set $u
     local.get $u
     i64.const 1
     i64.shl
     i64.const 1
     i64.sub
     i64.const -9007199254740992
     i64.const 1
     i64.sub
     i64.ge_u
     br $~lib/util/math/zeroinfnan|inlined.0
    end
    if
     local.get $iy
     i64.const 1
     i64.shl
     i64.const 0
     i64.eq
     if
      f64.const 1
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $ix
     i64.const 4607182418800017408
     i64.eq
     if
      f64.const nan:0x8000000000000
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $ix
     i64.const 1
     i64.shl
     i64.const -9007199254740992
     i64.gt_u
     if (result i32)
      i32.const 1
     else
      local.get $iy
      i64.const 1
      i64.shl
      i64.const -9007199254740992
      i64.gt_u
     end
     if
      local.get $x|2
      local.get $y|3
      f64.add
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $ix
     i64.const 1
     i64.shl
     i64.const 9214364837600034816
     i64.eq
     if
      f64.const nan:0x8000000000000
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $ix
     i64.const 1
     i64.shl
     i64.const 9214364837600034816
     i64.lt_u
     local.get $iy
     i64.const 63
     i64.shr_u
     i64.const 0
     i64.ne
     i32.eqz
     i32.eq
     if
      f64.const 0
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $y|3
     local.get $y|3
     f64.mul
     br $~lib/util/math/pow_lut|inlined.0
    end
    block $~lib/util/math/zeroinfnan|inlined.1 (result i32)
     local.get $ix
     local.set $u|10
     local.get $u|10
     i64.const 1
     i64.shl
     i64.const 1
     i64.sub
     i64.const -9007199254740992
     i64.const 1
     i64.sub
     i64.ge_u
     br $~lib/util/math/zeroinfnan|inlined.1
    end
    if
     local.get $x|2
     local.get $x|2
     f64.mul
     local.set $x2
     local.get $ix
     i64.const 63
     i64.shr_u
     i32.wrap_i64
     if (result i32)
      block $~lib/util/math/checkint|inlined.0 (result i32)
       local.get $iy
       local.set $iy|12
       local.get $iy|12
       i64.const 52
       i64.shr_u
       i64.const 2047
       i64.and
       local.set $e
       local.get $e
       i64.const 1023
       i64.lt_u
       if
        i32.const 0
        br $~lib/util/math/checkint|inlined.0
       end
       local.get $e
       i64.const 1023
       i64.const 52
       i64.add
       i64.gt_u
       if
        i32.const 2
        br $~lib/util/math/checkint|inlined.0
       end
       i64.const 1
       i64.const 1023
       i64.const 52
       i64.add
       local.get $e
       i64.sub
       i64.shl
       local.set $e
       local.get $iy|12
       local.get $e
       i64.const 1
       i64.sub
       i64.and
       i64.const 0
       i64.ne
       if
        i32.const 0
        br $~lib/util/math/checkint|inlined.0
       end
       local.get $iy|12
       local.get $e
       i64.and
       i64.const 0
       i64.ne
       if
        i32.const 1
        br $~lib/util/math/checkint|inlined.0
       end
       i32.const 2
       br $~lib/util/math/checkint|inlined.0
      end
      i32.const 1
      i32.eq
     else
      i32.const 0
     end
     if
      local.get $x2
      f64.neg
      local.set $x2
     end
     local.get $iy
     i64.const 0
     i64.lt_s
     if (result f64)
      f64.const 1
      local.get $x2
      f64.div
     else
      local.get $x2
     end
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $ix
    i64.const 0
    i64.lt_s
    if
     block $~lib/util/math/checkint|inlined.1 (result i32)
      local.get $iy
      local.set $iy|14
      local.get $iy|14
      i64.const 52
      i64.shr_u
      i64.const 2047
      i64.and
      local.set $e|15
      local.get $e|15
      i64.const 1023
      i64.lt_u
      if
       i32.const 0
       br $~lib/util/math/checkint|inlined.1
      end
      local.get $e|15
      i64.const 1023
      i64.const 52
      i64.add
      i64.gt_u
      if
       i32.const 2
       br $~lib/util/math/checkint|inlined.1
      end
      i64.const 1
      i64.const 1023
      i64.const 52
      i64.add
      local.get $e|15
      i64.sub
      i64.shl
      local.set $e|15
      local.get $iy|14
      local.get $e|15
      i64.const 1
      i64.sub
      i64.and
      i64.const 0
      i64.ne
      if
       i32.const 0
       br $~lib/util/math/checkint|inlined.1
      end
      local.get $iy|14
      local.get $e|15
      i64.and
      i64.const 0
      i64.ne
      if
       i32.const 1
       br $~lib/util/math/checkint|inlined.1
      end
      i32.const 2
      br $~lib/util/math/checkint|inlined.1
     end
     local.set $yint
     local.get $yint
     i32.const 0
     i32.eq
     if
      local.get $x|2
      local.get $x|2
      f64.sub
      local.get $x|2
      local.get $x|2
      f64.sub
      f64.div
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $yint
     i32.const 1
     i32.eq
     if
      i32.const 262144
      local.set $sign_bias
     end
     local.get $ix
     i64.const 9223372036854775807
     i64.and
     local.set $ix
     local.get $topx
     i64.const 2047
     i64.and
     local.set $topx
    end
    local.get $topy
    i64.const 2047
    i64.and
    i64.const 958
    i64.sub
    i64.const 1086
    i64.const 958
    i64.sub
    i64.ge_u
    if
     local.get $ix
     i64.const 4607182418800017408
     i64.eq
     if
      f64.const 1
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $topy
     i64.const 2047
     i64.and
     i64.const 958
     i64.lt_u
     if
      f64.const 1
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $ix
     i64.const 4607182418800017408
     i64.gt_u
     local.get $topy
     i64.const 2048
     i64.lt_u
     i32.eq
     if (result f64)
      f64.const inf
     else
      f64.const 0
     end
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $topx
    i64.const 0
    i64.eq
    if
     local.get $x|2
     f64.const 4503599627370496
     f64.mul
     i64.reinterpret_f64
     local.set $ix
     local.get $ix
     i64.const 9223372036854775807
     i64.and
     local.set $ix
     local.get $ix
     i64.const 52
     i64.const 52
     i64.shl
     i64.sub
     local.set $ix
    end
   end
   block $~lib/util/math/log_inline|inlined.0 (result f64)
    local.get $ix
    local.set $ix|17
    local.get $ix|17
    i64.const 4604531861337669632
    i64.sub
    local.set $tmp
    local.get $tmp
    i64.const 52
    i32.const 7
    i64.extend_i32_s
    i64.sub
    i64.shr_u
    i32.const 127
    i64.extend_i32_s
    i64.and
    i32.wrap_i64
    local.set $i
    local.get $tmp
    i64.const 52
    i64.shr_s
    local.set $k
    local.get $ix|17
    local.get $tmp
    i64.const 4095
    i64.const 52
    i64.shl
    i64.and
    i64.sub
    local.set $iz
    local.get $iz
    f64.reinterpret_i64
    local.set $z
    local.get $k
    f64.convert_i64_s
    local.set $kd
    i32.const 1054960
    local.get $i
    i32.const 2
    i32.const 3
    i32.add
    i32.shl
    i32.add
    f64.load $0
    local.set $invc
    i32.const 1054960
    local.get $i
    i32.const 2
    i32.const 3
    i32.add
    i32.shl
    i32.add
    f64.load $0 offset=16
    local.set $logc
    i32.const 1054960
    local.get $i
    i32.const 2
    i32.const 3
    i32.add
    i32.shl
    i32.add
    f64.load $0 offset=24
    local.set $logctail
    local.get $iz
    i64.const 2147483648
    i64.add
    i64.const -4294967296
    i64.and
    f64.reinterpret_i64
    local.set $zhi
    local.get $z
    local.get $zhi
    f64.sub
    local.set $zlo
    local.get $zhi
    local.get $invc
    f64.mul
    f64.const 1
    f64.sub
    local.set $rhi
    local.get $zlo
    local.get $invc
    f64.mul
    local.set $rlo
    local.get $rhi
    local.get $rlo
    f64.add
    local.set $r
    local.get $kd
    f64.const 0.6931471805598903
    f64.mul
    local.get $logc
    f64.add
    local.set $t1
    local.get $t1
    local.get $r
    f64.add
    local.set $t2
    local.get $kd
    f64.const 5.497923018708371e-14
    f64.mul
    local.get $logctail
    f64.add
    local.set $lo1
    local.get $t1
    local.get $t2
    f64.sub
    local.get $r
    f64.add
    local.set $lo2
    f64.const -0.5
    local.get $r
    f64.mul
    local.set $ar
    local.get $r
    local.get $ar
    f64.mul
    local.set $ar2
    local.get $r
    local.get $ar2
    f64.mul
    local.set $ar3
    f64.const -0.5
    local.get $rhi
    f64.mul
    local.set $arhi
    local.get $rhi
    local.get $arhi
    f64.mul
    local.set $arhi2
    local.get $t2
    local.get $arhi2
    f64.add
    local.set $hi
    local.get $rlo
    local.get $ar
    local.get $arhi
    f64.add
    f64.mul
    local.set $lo3
    local.get $t2
    local.get $hi
    f64.sub
    local.get $arhi2
    f64.add
    local.set $lo4
    local.get $ar3
    f64.const -0.6666666666666679
    local.get $r
    f64.const 0.5000000000000007
    f64.mul
    f64.add
    local.get $ar2
    f64.const 0.7999999995323976
    local.get $r
    f64.const -0.6666666663487739
    f64.mul
    f64.add
    local.get $ar2
    f64.const -1.142909628459501
    local.get $r
    f64.const 1.0000415263675542
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    local.set $p
    local.get $lo1
    local.get $lo2
    f64.add
    local.get $lo3
    f64.add
    local.get $lo4
    f64.add
    local.get $p
    f64.add
    local.set $lo
    local.get $hi
    local.get $lo
    f64.add
    local.set $y|46
    local.get $hi
    local.get $y|46
    f64.sub
    local.get $lo
    f64.add
    global.set $~lib/util/math/log_tail
    local.get $y|46
    br $~lib/util/math/log_inline|inlined.0
   end
   local.set $hi|47
   global.get $~lib/util/math/log_tail
   local.set $lo|48
   local.get $iy
   i64.const -134217728
   i64.and
   f64.reinterpret_i64
   local.set $yhi
   local.get $y|3
   local.get $yhi
   f64.sub
   local.set $ylo
   local.get $hi|47
   i64.reinterpret_f64
   i64.const -134217728
   i64.and
   f64.reinterpret_i64
   local.set $lhi
   local.get $hi|47
   local.get $lhi
   f64.sub
   local.get $lo|48
   f64.add
   local.set $llo
   local.get $yhi
   local.get $lhi
   f64.mul
   local.set $ehi
   local.get $ylo
   local.get $lhi
   f64.mul
   local.get $y|3
   local.get $llo
   f64.mul
   f64.add
   local.set $elo
   block $~lib/util/math/exp_inline|inlined.0 (result f64)
    local.get $ehi
    local.set $x|55
    local.get $elo
    local.set $xtail
    local.get $sign_bias
    local.set $sign_bias|57
    local.get $x|55
    i64.reinterpret_f64
    local.set $ux
    local.get $ux
    i64.const 52
    i64.shr_u
    i32.wrap_i64
    i32.const 2047
    i32.and
    local.set $abstop
    local.get $abstop
    i32.const 969
    i32.sub
    i32.const 63
    i32.ge_u
    if
     local.get $abstop
     i32.const 969
     i32.sub
     i32.const -2147483648
     i32.ge_u
     if
      f64.const -1
      f64.const 1
      local.get $sign_bias|57
      select
      br $~lib/util/math/exp_inline|inlined.0
     end
     local.get $abstop
     i32.const 1033
     i32.ge_u
     if
      local.get $ux
      i64.const 0
      i64.lt_s
      if (result f64)
       block $~lib/util/math/uflow|inlined.0 (result f64)
        local.get $sign_bias|57
        local.set $sign
        block $~lib/util/math/xflow|inlined.0 (result f64)
         local.get $sign
         local.set $sign|72
         i64.const 1152921504606846976
         f64.reinterpret_i64
         local.set $y|73
         local.get $y|73
         f64.neg
         local.get $y|73
         local.get $sign|72
         select
         local.get $y|73
         f64.mul
         br $~lib/util/math/xflow|inlined.0
        end
        br $~lib/util/math/uflow|inlined.0
       end
      else
       block $~lib/util/math/oflow|inlined.0 (result f64)
        local.get $sign_bias|57
        local.set $sign|74
        block $~lib/util/math/xflow|inlined.1 (result f64)
         local.get $sign|74
         local.set $sign|75
         i64.const 8070450532247928832
         f64.reinterpret_i64
         local.set $y|76
         local.get $y|76
         f64.neg
         local.get $y|76
         local.get $sign|75
         select
         local.get $y|76
         f64.mul
         br $~lib/util/math/xflow|inlined.1
        end
        br $~lib/util/math/oflow|inlined.0
       end
      end
      br $~lib/util/math/exp_inline|inlined.0
     end
     i32.const 0
     local.set $abstop
    end
    f64.const 184.6649652337873
    local.get $x|55
    f64.mul
    local.set $z|64
    local.get $z|64
    f64.const 6755399441055744
    f64.add
    local.set $kd|63
    local.get $kd|63
    i64.reinterpret_f64
    local.set $ki
    local.get $kd|63
    f64.const 6755399441055744
    f64.sub
    local.set $kd|63
    local.get $x|55
    local.get $kd|63
    f64.const -0.005415212348111709
    f64.mul
    f64.add
    local.get $kd|63
    f64.const -1.2864023111638346e-14
    f64.mul
    f64.add
    local.set $r|65
    local.get $r|65
    local.get $xtail
    f64.add
    local.set $r|65
    local.get $ki
    i32.const 127
    i64.extend_i32_s
    i64.and
    i64.const 1
    i64.shl
    i32.wrap_i64
    local.set $idx
    local.get $ki
    local.get $sign_bias|57
    i64.extend_i32_u
    i64.add
    i64.const 52
    i32.const 7
    i64.extend_i32_s
    i64.sub
    i64.shl
    local.set $top
    i32.const 1051728
    local.get $idx
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    f64.reinterpret_i64
    local.set $tail
    i32.const 1051728
    local.get $idx
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    local.get $top
    i64.add
    local.set $sbits
    local.get $r|65
    local.get $r|65
    f64.mul
    local.set $r2
    local.get $tail
    local.get $r|65
    f64.add
    local.get $r2
    f64.const 0.49999999999996786
    local.get $r|65
    f64.const 0.16666666666665886
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $r2
    local.get $r2
    f64.mul
    f64.const 0.0416666808410674
    local.get $r|65
    f64.const 0.008333335853059549
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $tmp|69
    local.get $abstop
    i32.const 0
    i32.eq
    if
     block $~lib/util/math/specialcase|inlined.1 (result f64)
      local.get $tmp|69
      local.set $tmp|77
      local.get $sbits
      local.set $sbits|78
      local.get $ki
      local.set $ki|79
      local.get $ki|79
      i64.const 2147483648
      i64.and
      i64.const 0
      i64.ne
      i32.eqz
      if
       local.get $sbits|78
       i64.const 1009
       i64.const 52
       i64.shl
       i64.sub
       local.set $sbits|78
       local.get $sbits|78
       f64.reinterpret_i64
       local.set $scale|80
       f64.const 5486124068793688683255936e279
       local.get $scale|80
       local.get $scale|80
       local.get $tmp|77
       f64.mul
       f64.add
       f64.mul
       br $~lib/util/math/specialcase|inlined.1
      end
      local.get $sbits|78
      i64.const 1022
      i64.const 52
      i64.shl
      i64.add
      local.set $sbits|78
      local.get $sbits|78
      f64.reinterpret_i64
      local.set $scale|80
      local.get $scale|80
      local.get $scale|80
      local.get $tmp|77
      f64.mul
      f64.add
      local.set $y|81
      local.get $y|81
      f64.abs
      f64.const 1
      f64.lt
      if
       f64.const 1
       local.get $y|81
       f64.copysign
       local.set $one
       local.get $scale|80
       local.get $y|81
       f64.sub
       local.get $scale|80
       local.get $tmp|77
       f64.mul
       f64.add
       local.set $lo|83
       local.get $one
       local.get $y|81
       f64.add
       local.set $hi|84
       local.get $one
       local.get $hi|84
       f64.sub
       local.get $y|81
       f64.add
       local.get $lo|83
       f64.add
       local.set $lo|83
       local.get $hi|84
       local.get $lo|83
       f64.add
       local.get $one
       f64.sub
       local.set $y|81
       local.get $y|81
       f64.const 0
       f64.eq
       if
        local.get $sbits|78
        i64.const -9223372036854775808
        i64.and
        f64.reinterpret_i64
        local.set $y|81
       end
      end
      local.get $y|81
      f64.const 2.2250738585072014e-308
      f64.mul
      br $~lib/util/math/specialcase|inlined.1
     end
     br $~lib/util/math/exp_inline|inlined.0
    end
    local.get $sbits
    f64.reinterpret_i64
    local.set $scale
    local.get $scale
    local.get $scale
    local.get $tmp|69
    f64.mul
    f64.add
    br $~lib/util/math/exp_inline|inlined.0
   end
   br $~lib/util/math/pow_lut|inlined.0
  end
  return
 )
 (func $assembly/gen/bhs/Bhs#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $gain f32)
  (local $this|5 i32)
  (local $freq|6 f32)
  (local $Q|7 f32)
  (local $this|8 i32)
  (local $freq|9 f64)
  (local $omega f64)
  (local $sin0 f64)
  (local $cos0 f64)
  (local $this|13 i32)
  (local $gain|14 f64)
  (local $A f64)
  (local $this|16 i32)
  (local $sin0|17 f64)
  (local $A|18 f64)
  (local $Q|19 f64)
  (local $x f64)
  (local $x|21 f64)
  (local $S f64)
  (local $this|23 i32)
  (local $g f64)
  block $assembly/gen/biquad/Biquad#_highshelf|inlined.0
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/bhs/Bhs#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/bhs/Bhs#get:q
   local.set $Q
   local.get $this
   call $assembly/gen/bhs/Bhs#get:amt
   local.set $gain
   block $assembly/gen/biquad/Biquad#_validate|inlined.3 (result i32)
    local.get $this|1
    local.set $this|5
    local.get $freq
    local.set $freq|6
    local.get $Q
    local.set $Q|7
    local.get $freq|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.3
    end
    local.get $freq|6
    local.get $freq|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.3
    end
    local.get $Q|7
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.3
    end
    local.get $Q|7
    local.get $Q|7
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.3
    end
    i32.const 1
    br $assembly/gen/biquad/Biquad#_validate|inlined.3
   end
   i32.eqz
   if
    br $assembly/gen/biquad/Biquad#_highshelf|inlined.0
   end
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_gain
   local.get $gain
   call $assembly/util/paramClamp
   local.set $gain
   block $assembly/gen/biquad/Biquad#_omega|inlined.3 (result f64)
    local.get $this|1
    local.set $this|8
    local.get $freq
    f64.promote_f32
    local.set $freq|9
    f64.const 6.283185307179586
    local.get $freq|9
    f64.mul
    local.get $this|8
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:audioRate
    f64.convert_i32_u
    f64.div
    br $assembly/gen/biquad/Biquad#_omega|inlined.3
   end
   local.set $omega
   local.get $omega
   call $~lib/math/NativeMath.sin
   local.set $sin0
   local.get $omega
   call $~lib/math/NativeMath.cos
   local.set $cos0
   block $assembly/gen/biquad/Biquad#_db|inlined.0 (result f64)
    local.get $this|1
    local.set $this|13
    local.get $gain
    f64.promote_f32
    local.set $gain|14
    f64.const 10
    local.get $gain|14
    f64.const 20
    f64.div
    call $~lib/math/NativeMath.pow
    br $assembly/gen/biquad/Biquad#_db|inlined.0
   end
   local.set $A
   block $assembly/gen/biquad/Biquad#_shelf|inlined.0 (result f64)
    local.get $this|1
    local.set $this|16
    local.get $sin0
    local.set $sin0|17
    local.get $A
    local.set $A|18
    local.get $Q
    f64.promote_f32
    local.set $Q|19
    f64.const 2
    block $~lib/math/NativeMath.sqrt|inlined.0 (result f64)
     local.get $A|18
     local.set $x
     local.get $x
     f64.sqrt
     br $~lib/math/NativeMath.sqrt|inlined.0
    end
    f64.mul
    local.get $sin0|17
    f64.const 2
    f64.div
    block $~lib/math/NativeMath.sqrt|inlined.1 (result f64)
     local.get $A|18
     f64.const 1
     local.get $A|18
     f64.div
     f64.add
     f64.const 1
     local.get $Q|19
     f64.div
     f64.const 1
     f64.sub
     f64.mul
     f64.const 2
     f64.add
     local.set $x|21
     local.get $x|21
     f64.sqrt
     br $~lib/math/NativeMath.sqrt|inlined.1
    end
    f64.mul
    f64.mul
    br $assembly/gen/biquad/Biquad#_shelf|inlined.0
   end
   local.set $S
   local.get $this|1
   local.get $A
   local.get $A
   f64.const 1
   f64.add
   local.get $A
   f64.const 1
   f64.sub
   local.get $cos0
   f64.mul
   f64.add
   local.get $S
   f64.add
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|1
   f64.const -2
   local.get $A
   f64.mul
   local.get $A
   f64.const 1
   f64.sub
   local.get $A
   f64.const 1
   f64.add
   local.get $cos0
   f64.mul
   f64.add
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|1
   local.get $A
   local.get $A
   f64.const 1
   f64.add
   local.get $A
   f64.const 1
   f64.sub
   local.get $cos0
   f64.mul
   f64.add
   local.get $S
   f64.sub
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|1
   local.get $A
   f64.const 1
   f64.add
   local.get $A
   f64.const 1
   f64.sub
   local.get $cos0
   f64.mul
   f64.sub
   local.get $S
   f64.add
   call $assembly/gen/biquad/Biquad#set:_a0
   local.get $this|1
   f64.const 2
   local.get $A
   f64.const 1
   f64.sub
   local.get $A
   f64.const 1
   f64.add
   local.get $cos0
   f64.mul
   f64.sub
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|1
   local.get $A
   f64.const 1
   f64.add
   local.get $A
   f64.const 1
   f64.sub
   local.get $cos0
   f64.mul
   f64.sub
   local.get $S
   f64.sub
   call $assembly/gen/biquad/Biquad#set:_a2
   local.get $this|1
   local.set $this|23
   f64.const 1
   local.get $this|23
   call $assembly/gen/biquad/Biquad#get:_a0
   f64.div
   local.set $g
   local.get $this|23
   local.get $this|23
   call $assembly/gen/biquad/Biquad#get:_b0
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|23
   local.get $this|23
   call $assembly/gen/biquad/Biquad#get:_b1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|23
   local.get $this|23
   call $assembly/gen/biquad/Biquad#get:_b2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|23
   local.get $this|23
   call $assembly/gen/biquad/Biquad#get:_a1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|23
   local.get $this|23
   call $assembly/gen/biquad/Biquad#get:_a2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a2
  end
 )
 (func $assembly/gen/blp/Blp#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/blp/Blp#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=112
 )
 (func $assembly/gen/blp/Blp#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $this|4 i32)
  (local $freq|5 f32)
  (local $Q|6 f32)
  (local $this|7 i32)
  (local $freq|8 f64)
  (local $omega f64)
  (local $sin0 f64)
  (local $cos0 f64)
  (local $this|12 i32)
  (local $sin0|13 f64)
  (local $Q|14 f64)
  (local $alpha f64)
  (local $this|16 i32)
  (local $g f64)
  block $assembly/gen/biquad/Biquad#_lowpass|inlined.0
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/blp/Blp#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/blp/Blp#get:q
   local.set $Q
   block $assembly/gen/biquad/Biquad#_validate|inlined.4 (result i32)
    local.get $this|1
    local.set $this|4
    local.get $freq
    local.set $freq|5
    local.get $Q
    local.set $Q|6
    local.get $freq|5
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.4
    end
    local.get $freq|5
    local.get $freq|5
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.4
    end
    local.get $Q|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.4
    end
    local.get $Q|6
    local.get $Q|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.4
    end
    i32.const 1
    br $assembly/gen/biquad/Biquad#_validate|inlined.4
   end
   i32.eqz
   if
    br $assembly/gen/biquad/Biquad#_lowpass|inlined.0
   end
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   block $assembly/gen/biquad/Biquad#_omega|inlined.4 (result f64)
    local.get $this|1
    local.set $this|7
    local.get $freq
    f64.promote_f32
    local.set $freq|8
    f64.const 6.283185307179586
    local.get $freq|8
    f64.mul
    local.get $this|7
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:audioRate
    f64.convert_i32_u
    f64.div
    br $assembly/gen/biquad/Biquad#_omega|inlined.4
   end
   local.set $omega
   local.get $omega
   call $~lib/math/NativeMath.sin
   local.set $sin0
   local.get $omega
   call $~lib/math/NativeMath.cos
   local.set $cos0
   block $assembly/gen/biquad/Biquad#_alpha|inlined.3 (result f64)
    local.get $this|1
    local.set $this|12
    local.get $sin0
    local.set $sin0|13
    local.get $Q
    f64.promote_f32
    local.set $Q|14
    local.get $sin0|13
    f64.const 2
    local.get $Q|14
    f64.mul
    f64.div
    br $assembly/gen/biquad/Biquad#_alpha|inlined.3
   end
   local.set $alpha
   local.get $this|1
   f64.const 1
   local.get $cos0
   f64.sub
   f64.const 2
   f64.div
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|1
   f64.const 1
   local.get $cos0
   f64.sub
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|1
   f64.const 1
   local.get $cos0
   f64.sub
   f64.const 2
   f64.div
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|1
   f64.const 1
   local.get $alpha
   f64.add
   call $assembly/gen/biquad/Biquad#set:_a0
   local.get $this|1
   f64.const -2
   local.get $cos0
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|1
   f64.const 1
   local.get $alpha
   f64.sub
   call $assembly/gen/biquad/Biquad#set:_a2
   local.get $this|1
   local.set $this|16
   f64.const 1
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a0
   f64.div
   local.set $g
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b0
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a2
  end
 )
 (func $assembly/gen/bls/Bls#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/bls/Bls#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=112
 )
 (func $assembly/gen/bls/Bls#get:amt (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=116
 )
 (func $assembly/gen/bls/Bls#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $gain f32)
  (local $this|5 i32)
  (local $freq|6 f32)
  (local $Q|7 f32)
  (local $this|8 i32)
  (local $freq|9 f64)
  (local $omega f64)
  (local $sin0 f64)
  (local $cos0 f64)
  (local $this|13 i32)
  (local $gain|14 f64)
  (local $A f64)
  (local $this|16 i32)
  (local $sin0|17 f64)
  (local $A|18 f64)
  (local $Q|19 f64)
  (local $x f64)
  (local $x|21 f64)
  (local $S f64)
  (local $this|23 i32)
  (local $g f64)
  block $assembly/gen/biquad/Biquad#_lowshelf|inlined.0
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/bls/Bls#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/bls/Bls#get:q
   local.set $Q
   local.get $this
   call $assembly/gen/bls/Bls#get:amt
   local.set $gain
   block $assembly/gen/biquad/Biquad#_validate|inlined.5 (result i32)
    local.get $this|1
    local.set $this|5
    local.get $freq
    local.set $freq|6
    local.get $Q
    local.set $Q|7
    local.get $freq|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.5
    end
    local.get $freq|6
    local.get $freq|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.5
    end
    local.get $Q|7
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.5
    end
    local.get $Q|7
    local.get $Q|7
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.5
    end
    i32.const 1
    br $assembly/gen/biquad/Biquad#_validate|inlined.5
   end
   i32.eqz
   if
    br $assembly/gen/biquad/Biquad#_lowshelf|inlined.0
   end
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_gain
   local.get $gain
   call $assembly/util/paramClamp
   local.set $gain
   block $assembly/gen/biquad/Biquad#_omega|inlined.5 (result f64)
    local.get $this|1
    local.set $this|8
    local.get $freq
    f64.promote_f32
    local.set $freq|9
    f64.const 6.283185307179586
    local.get $freq|9
    f64.mul
    local.get $this|8
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:audioRate
    f64.convert_i32_u
    f64.div
    br $assembly/gen/biquad/Biquad#_omega|inlined.5
   end
   local.set $omega
   local.get $omega
   call $~lib/math/NativeMath.sin
   local.set $sin0
   local.get $omega
   call $~lib/math/NativeMath.cos
   local.set $cos0
   block $assembly/gen/biquad/Biquad#_db|inlined.1 (result f64)
    local.get $this|1
    local.set $this|13
    local.get $gain
    f64.promote_f32
    local.set $gain|14
    f64.const 10
    local.get $gain|14
    f64.const 20
    f64.div
    call $~lib/math/NativeMath.pow
    br $assembly/gen/biquad/Biquad#_db|inlined.1
   end
   local.set $A
   block $assembly/gen/biquad/Biquad#_shelf|inlined.1 (result f64)
    local.get $this|1
    local.set $this|16
    local.get $sin0
    local.set $sin0|17
    local.get $A
    local.set $A|18
    local.get $Q
    f64.promote_f32
    local.set $Q|19
    f64.const 2
    block $~lib/math/NativeMath.sqrt|inlined.2 (result f64)
     local.get $A|18
     local.set $x
     local.get $x
     f64.sqrt
     br $~lib/math/NativeMath.sqrt|inlined.2
    end
    f64.mul
    local.get $sin0|17
    f64.const 2
    f64.div
    block $~lib/math/NativeMath.sqrt|inlined.3 (result f64)
     local.get $A|18
     f64.const 1
     local.get $A|18
     f64.div
     f64.add
     f64.const 1
     local.get $Q|19
     f64.div
     f64.const 1
     f64.sub
     f64.mul
     f64.const 2
     f64.add
     local.set $x|21
     local.get $x|21
     f64.sqrt
     br $~lib/math/NativeMath.sqrt|inlined.3
    end
    f64.mul
    f64.mul
    br $assembly/gen/biquad/Biquad#_shelf|inlined.1
   end
   local.set $S
   local.get $this|1
   local.get $A
   local.get $A
   f64.const 1
   f64.add
   local.get $A
   f64.const 1
   f64.sub
   local.get $cos0
   f64.mul
   f64.sub
   local.get $S
   f64.add
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|1
   f64.const 2
   local.get $A
   f64.mul
   local.get $A
   f64.const 1
   f64.sub
   local.get $A
   f64.const 1
   f64.add
   local.get $cos0
   f64.mul
   f64.sub
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|1
   local.get $A
   local.get $A
   f64.const 1
   f64.add
   local.get $A
   f64.const 1
   f64.sub
   local.get $cos0
   f64.mul
   f64.sub
   local.get $S
   f64.sub
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|1
   local.get $A
   f64.const 1
   f64.add
   local.get $A
   f64.const 1
   f64.sub
   local.get $cos0
   f64.mul
   f64.add
   local.get $S
   f64.add
   call $assembly/gen/biquad/Biquad#set:_a0
   local.get $this|1
   f64.const -2
   local.get $A
   f64.const 1
   f64.sub
   local.get $A
   f64.const 1
   f64.add
   local.get $cos0
   f64.mul
   f64.add
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|1
   local.get $A
   f64.const 1
   f64.add
   local.get $A
   f64.const 1
   f64.sub
   local.get $cos0
   f64.mul
   f64.add
   local.get $S
   f64.sub
   call $assembly/gen/biquad/Biquad#set:_a2
   local.get $this|1
   local.set $this|23
   f64.const 1
   local.get $this|23
   call $assembly/gen/biquad/Biquad#get:_a0
   f64.div
   local.set $g
   local.get $this|23
   local.get $this|23
   call $assembly/gen/biquad/Biquad#get:_b0
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|23
   local.get $this|23
   call $assembly/gen/biquad/Biquad#get:_b1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|23
   local.get $this|23
   call $assembly/gen/biquad/Biquad#get:_b2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|23
   local.get $this|23
   call $assembly/gen/biquad/Biquad#get:_a1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|23
   local.get $this|23
   call $assembly/gen/biquad/Biquad#get:_a2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a2
  end
 )
 (func $assembly/gen/bno/Bno#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/bno/Bno#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=112
 )
 (func $assembly/gen/bno/Bno#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $this|4 i32)
  (local $freq|5 f32)
  (local $Q|6 f32)
  (local $this|7 i32)
  (local $freq|8 f64)
  (local $omega f64)
  (local $sin0 f64)
  (local $cos0 f64)
  (local $this|12 i32)
  (local $sin0|13 f64)
  (local $Q|14 f64)
  (local $alpha f64)
  (local $this|16 i32)
  (local $g f64)
  block $assembly/gen/biquad/Biquad#_notch|inlined.0
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/bno/Bno#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/bno/Bno#get:q
   local.set $Q
   block $assembly/gen/biquad/Biquad#_validate|inlined.6 (result i32)
    local.get $this|1
    local.set $this|4
    local.get $freq
    local.set $freq|5
    local.get $Q
    local.set $Q|6
    local.get $freq|5
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.6
    end
    local.get $freq|5
    local.get $freq|5
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.6
    end
    local.get $Q|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.6
    end
    local.get $Q|6
    local.get $Q|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.6
    end
    i32.const 1
    br $assembly/gen/biquad/Biquad#_validate|inlined.6
   end
   i32.eqz
   if
    br $assembly/gen/biquad/Biquad#_notch|inlined.0
   end
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   block $assembly/gen/biquad/Biquad#_omega|inlined.6 (result f64)
    local.get $this|1
    local.set $this|7
    local.get $freq
    f64.promote_f32
    local.set $freq|8
    f64.const 6.283185307179586
    local.get $freq|8
    f64.mul
    local.get $this|7
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:audioRate
    f64.convert_i32_u
    f64.div
    br $assembly/gen/biquad/Biquad#_omega|inlined.6
   end
   local.set $omega
   local.get $omega
   call $~lib/math/NativeMath.sin
   local.set $sin0
   local.get $omega
   call $~lib/math/NativeMath.cos
   local.set $cos0
   block $assembly/gen/biquad/Biquad#_alpha|inlined.4 (result f64)
    local.get $this|1
    local.set $this|12
    local.get $sin0
    local.set $sin0|13
    local.get $Q
    f64.promote_f32
    local.set $Q|14
    local.get $sin0|13
    f64.const 2
    local.get $Q|14
    f64.mul
    f64.div
    br $assembly/gen/biquad/Biquad#_alpha|inlined.4
   end
   local.set $alpha
   local.get $this|1
   f64.const 1
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|1
   f64.const -2
   local.get $cos0
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|1
   f64.const 1
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|1
   f64.const 1
   local.get $alpha
   f64.add
   call $assembly/gen/biquad/Biquad#set:_a0
   local.get $this|1
   f64.const -2
   local.get $cos0
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|1
   f64.const 1
   local.get $alpha
   f64.sub
   call $assembly/gen/biquad/Biquad#set:_a2
   local.get $this|1
   local.set $this|16
   f64.const 1
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a0
   f64.div
   local.set $g
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b0
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_b2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|16
   local.get $this|16
   call $assembly/gen/biquad/Biquad#get:_a2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a2
  end
 )
 (func $assembly/gen/bpk/Bpk#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/bpk/Bpk#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=112
 )
 (func $assembly/gen/bpk/Bpk#get:amt (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=116
 )
 (func $assembly/gen/bpk/Bpk#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $gain f32)
  (local $this|5 i32)
  (local $freq|6 f32)
  (local $Q|7 f32)
  (local $this|8 i32)
  (local $freq|9 f64)
  (local $omega f64)
  (local $sin0 f64)
  (local $cos0 f64)
  (local $this|13 i32)
  (local $sin0|14 f64)
  (local $Q|15 f64)
  (local $alpha f64)
  (local $this|17 i32)
  (local $gain|18 f64)
  (local $A f64)
  (local $this|20 i32)
  (local $g f64)
  block $assembly/gen/biquad/Biquad#_peak|inlined.0
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/bpk/Bpk#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/bpk/Bpk#get:q
   local.set $Q
   local.get $this
   call $assembly/gen/bpk/Bpk#get:amt
   local.set $gain
   block $assembly/gen/biquad/Biquad#_validate|inlined.7 (result i32)
    local.get $this|1
    local.set $this|5
    local.get $freq
    local.set $freq|6
    local.get $Q
    local.set $Q|7
    local.get $freq|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.7
    end
    local.get $freq|6
    local.get $freq|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.7
    end
    local.get $Q|7
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.7
    end
    local.get $Q|7
    local.get $Q|7
    f32.ne
    if
     i32.const 0
     br $assembly/gen/biquad/Biquad#_validate|inlined.7
    end
    i32.const 1
    br $assembly/gen/biquad/Biquad#_validate|inlined.7
   end
   i32.eqz
   if
    br $assembly/gen/biquad/Biquad#_peak|inlined.0
   end
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   local.get $this|1
   call $assembly/gen/biquad/Biquad#get:_params_gain
   local.get $gain
   call $assembly/util/paramClamp
   local.set $gain
   block $assembly/gen/biquad/Biquad#_omega|inlined.7 (result f64)
    local.get $this|1
    local.set $this|8
    local.get $freq
    f64.promote_f32
    local.set $freq|9
    f64.const 6.283185307179586
    local.get $freq|9
    f64.mul
    local.get $this|8
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:audioRate
    f64.convert_i32_u
    f64.div
    br $assembly/gen/biquad/Biquad#_omega|inlined.7
   end
   local.set $omega
   local.get $omega
   call $~lib/math/NativeMath.sin
   local.set $sin0
   local.get $omega
   call $~lib/math/NativeMath.cos
   local.set $cos0
   block $assembly/gen/biquad/Biquad#_alpha|inlined.5 (result f64)
    local.get $this|1
    local.set $this|13
    local.get $sin0
    local.set $sin0|14
    local.get $Q
    f64.promote_f32
    local.set $Q|15
    local.get $sin0|14
    f64.const 2
    local.get $Q|15
    f64.mul
    f64.div
    br $assembly/gen/biquad/Biquad#_alpha|inlined.5
   end
   local.set $alpha
   block $assembly/gen/biquad/Biquad#_db|inlined.2 (result f64)
    local.get $this|1
    local.set $this|17
    local.get $gain
    f64.promote_f32
    local.set $gain|18
    f64.const 10
    local.get $gain|18
    f64.const 20
    f64.div
    call $~lib/math/NativeMath.pow
    br $assembly/gen/biquad/Biquad#_db|inlined.2
   end
   local.set $A
   local.get $this|1
   f64.const 1
   local.get $alpha
   local.get $A
   f64.mul
   f64.add
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|1
   f64.const -2
   local.get $cos0
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|1
   f64.const 1
   local.get $alpha
   local.get $A
   f64.mul
   f64.sub
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|1
   f64.const 1
   local.get $alpha
   local.get $A
   f64.div
   f64.add
   call $assembly/gen/biquad/Biquad#set:_a0
   local.get $this|1
   f64.const -2
   local.get $cos0
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|1
   f64.const 1
   local.get $alpha
   local.get $A
   f64.div
   f64.sub
   call $assembly/gen/biquad/Biquad#set:_a2
   local.get $this|1
   local.set $this|20
   f64.const 1
   local.get $this|20
   call $assembly/gen/biquad/Biquad#get:_a0
   f64.div
   local.set $g
   local.get $this|20
   local.get $this|20
   call $assembly/gen/biquad/Biquad#get:_b0
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b0
   local.get $this|20
   local.get $this|20
   call $assembly/gen/biquad/Biquad#get:_b1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b1
   local.get $this|20
   local.get $this|20
   call $assembly/gen/biquad/Biquad#get:_b2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_b2
   local.get $this|20
   local.get $this|20
   call $assembly/gen/biquad/Biquad#get:_a1
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a1
   local.get $this|20
   local.get $this|20
   call $assembly/gen/biquad/Biquad#get:_a2
   local.get $g
   f64.mul
   call $assembly/gen/biquad/Biquad#set:_a2
  end
 )
 (func $assembly/gen/comp/Comp#_update (param $this i32)
  nop
 )
 (func $assembly/gen/daverb/Daverb#get:dp (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=40
 )
 (func $assembly/gen/daverb/Daverb#get:ex (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=44
 )
 (func $assembly/gen/daverb/Daverb#get:ed (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=48
 )
 (func $assembly/gen/daverb/Daverb#get:pd (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=12
 )
 (func $assembly/gen/daverb/Daverb#_update (param $this i32)
  (local $arf f32)
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:audioRate
  f32.convert_i32_u
  local.set $arf
  local.get $this
  f32.const 1
  local.get $this
  call $assembly/gen/daverb/Daverb#get:dp
  f32.sub
  call $assembly/gen/daverb/Daverb#set:_dpn
  local.get $this
  local.get $this
  call $assembly/gen/daverb/Daverb#get:ex
  local.get $arf
  f32.div
  call $assembly/gen/daverb/Daverb#set:_exn
  local.get $this
  local.get $this
  call $assembly/gen/daverb/Daverb#get:ed
  local.get $arf
  f32.mul
  f32.const 1e3
  f32.div
  call $assembly/gen/daverb/Daverb#set:_edn
  local.get $this
  local.get $this
  call $assembly/gen/daverb/Daverb#get:pd
  local.get $arf
  f32.mul
  call $assembly/gen/daverb/Daverb#set:_pdn
 )
 (func $assembly/gen/delay/Delay#get:ms (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/core/engine/Engine#get:rateStep (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/gen/delay/Delay#get:_stepf (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=32
 )
 (func $assembly/gen/delay/Delay#get:_targetf (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=36
 )
 (func $assembly/gen/delay/Delay#_update (param $this i32)
  (local $value1 f32)
  (local $value2 f32)
  local.get $this
  block $~lib/math/NativeMathf.min|inlined.16 (result f32)
   global.get $assembly/core/constants/DELAY_MAX_SIZE
   f32.convert_i32_u
   f32.const 1
   f32.sub
   local.set $value1
   local.get $this
   call $assembly/gen/delay/Delay#get:ms
   f32.const 1.0000000474974513e-03
   f32.mul
   local.get $this
   call $assembly/gen/gen/Gen#get:_engine
   call $assembly/core/engine/Engine#get:rateStep
   f32.convert_i32_u
   f32.mul
   local.set $value2
   local.get $value1
   local.get $value2
   f32.min
   br $~lib/math/NativeMathf.min|inlined.16
  end
  call $assembly/gen/delay/Delay#set:_targetf
  local.get $this
  call $assembly/gen/delay/Delay#get:_stepf
  f32.const 0
  f32.eq
  if
   local.get $this
   local.get $this
   call $assembly/gen/delay/Delay#get:_targetf
   call $assembly/gen/delay/Delay#set:_stepf
  end
 )
 (func $assembly/gen/diode/Diode#get:hpf (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=12
 )
 (func $assembly/gen/diode/clamp (param $min f32) (param $max f32) (param $value f32) (result f32)
  local.get $value
  local.get $min
  f32.lt
  if
   local.get $min
   local.set $value
  end
  local.get $value
  local.get $max
  f32.gt
  if
   local.get $max
   local.set $value
  end
  local.get $value
  return
 )
 (func $assembly/gen/diode/Diode#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=20
 )
 (func $assembly/gen/diode/Diode#get:_k (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=92
 )
 (func $assembly/gen/diode/Diode#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $~lib/math/NativeMathf.tan (param $x f32) (result f32)
  (local $ux i32)
  (local $sign i32)
  (local $x|3 f64)
  (local $odd i32)
  (local $z f64)
  (local $r f64)
  (local $t f64)
  (local $w f64)
  (local $s f64)
  (local $u f64)
  (local $x|11 f64)
  (local $odd|12 i32)
  (local $z|13 f64)
  (local $r|14 f64)
  (local $t|15 f64)
  (local $w|16 f64)
  (local $s|17 f64)
  (local $u|18 f64)
  (local $x|19 f64)
  (local $odd|20 i32)
  (local $z|21 f64)
  (local $r|22 f64)
  (local $t|23 f64)
  (local $w|24 f64)
  (local $s|25 f64)
  (local $u|26 f64)
  (local $x|27 f64)
  (local $odd|28 i32)
  (local $z|29 f64)
  (local $r|30 f64)
  (local $t|31 f64)
  (local $w|32 f64)
  (local $s|33 f64)
  (local $u|34 f64)
  (local $x|35 f64)
  (local $odd|36 i32)
  (local $z|37 f64)
  (local $r|38 f64)
  (local $t|39 f64)
  (local $w|40 f64)
  (local $s|41 f64)
  (local $u|42 f64)
  (local $x|43 f32)
  (local $u|44 i32)
  (local $sign|45 i32)
  (local $q f64)
  (local $x|47 f32)
  (local $u|48 i32)
  (local $offset i32)
  (local $shift i64)
  (local $tblPtr i32)
  (local $b0 i64)
  (local $b1 i64)
  (local $lo i64)
  (local $b2 i64)
  (local $hi i64)
  (local $mantissa i64)
  (local $product i64)
  (local $r|59 i64)
  (local $q|60 i32)
  (local $q|61 i32)
  (local $n i32)
  (local $y f64)
  (local $x|64 f64)
  (local $odd|65 i32)
  (local $z|66 f64)
  (local $r|67 f64)
  (local $t|68 f64)
  (local $w|69 f64)
  (local $s|70 f64)
  (local $u|71 f64)
  local.get $x
  i32.reinterpret_f32
  local.set $ux
  local.get $ux
  i32.const 31
  i32.shr_u
  local.set $sign
  local.get $ux
  i32.const 2147483647
  i32.and
  local.set $ux
  local.get $ux
  i32.const 1061752794
  i32.le_u
  if
   local.get $ux
   i32.const 964689920
   i32.lt_u
   if
    local.get $x
    return
   end
   block $~lib/math/tan_kernf|inlined.0 (result f32)
    local.get $x
    f64.promote_f32
    local.set $x|3
    i32.const 0
    local.set $odd
    local.get $x|3
    local.get $x|3
    f64.mul
    local.set $z
    f64.const 0.002974357433599673
    local.get $z
    f64.const 0.009465647849436732
    f64.mul
    f64.add
    local.set $r
    f64.const 0.05338123784456704
    local.get $z
    f64.const 0.024528318116654728
    f64.mul
    f64.add
    local.set $t
    local.get $z
    local.get $z
    f64.mul
    local.set $w
    local.get $z
    local.get $x|3
    f64.mul
    local.set $s
    f64.const 0.3333313950307914
    local.get $z
    f64.const 0.13339200271297674
    f64.mul
    f64.add
    local.set $u
    local.get $x|3
    local.get $s
    local.get $u
    f64.mul
    f64.add
    local.get $s
    local.get $w
    f64.mul
    local.get $t
    local.get $w
    local.get $r
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $r
    local.get $odd
    if (result f64)
     f32.const -1
     f64.promote_f32
     local.get $r
     f64.div
    else
     local.get $r
    end
    f32.demote_f64
    br $~lib/math/tan_kernf|inlined.0
   end
   return
  end
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  local.get $ux
  i32.const 1081824209
  i32.le_u
  if
   local.get $ux
   i32.const 1075235811
   i32.le_u
   if
    block $~lib/math/tan_kernf|inlined.1 (result f32)
     local.get $sign
     if (result f64)
      local.get $x
      f64.promote_f32
      f64.const 1.5707963267948966
      f64.add
     else
      local.get $x
      f64.promote_f32
      f64.const 1.5707963267948966
      f64.sub
     end
     local.set $x|11
     i32.const 1
     local.set $odd|12
     local.get $x|11
     local.get $x|11
     f64.mul
     local.set $z|13
     f64.const 0.002974357433599673
     local.get $z|13
     f64.const 0.009465647849436732
     f64.mul
     f64.add
     local.set $r|14
     f64.const 0.05338123784456704
     local.get $z|13
     f64.const 0.024528318116654728
     f64.mul
     f64.add
     local.set $t|15
     local.get $z|13
     local.get $z|13
     f64.mul
     local.set $w|16
     local.get $z|13
     local.get $x|11
     f64.mul
     local.set $s|17
     f64.const 0.3333313950307914
     local.get $z|13
     f64.const 0.13339200271297674
     f64.mul
     f64.add
     local.set $u|18
     local.get $x|11
     local.get $s|17
     local.get $u|18
     f64.mul
     f64.add
     local.get $s|17
     local.get $w|16
     f64.mul
     local.get $t|15
     local.get $w|16
     local.get $r|14
     f64.mul
     f64.add
     f64.mul
     f64.add
     local.set $r|14
     local.get $odd|12
     if (result f64)
      f32.const -1
      f64.promote_f32
      local.get $r|14
      f64.div
     else
      local.get $r|14
     end
     f32.demote_f64
     br $~lib/math/tan_kernf|inlined.1
    end
    return
   else
    block $~lib/math/tan_kernf|inlined.2 (result f32)
     local.get $sign
     if (result f64)
      local.get $x
      f64.promote_f32
      f64.const 3.141592653589793
      f64.add
     else
      local.get $x
      f64.promote_f32
      f64.const 3.141592653589793
      f64.sub
     end
     local.set $x|19
     i32.const 0
     local.set $odd|20
     local.get $x|19
     local.get $x|19
     f64.mul
     local.set $z|21
     f64.const 0.002974357433599673
     local.get $z|21
     f64.const 0.009465647849436732
     f64.mul
     f64.add
     local.set $r|22
     f64.const 0.05338123784456704
     local.get $z|21
     f64.const 0.024528318116654728
     f64.mul
     f64.add
     local.set $t|23
     local.get $z|21
     local.get $z|21
     f64.mul
     local.set $w|24
     local.get $z|21
     local.get $x|19
     f64.mul
     local.set $s|25
     f64.const 0.3333313950307914
     local.get $z|21
     f64.const 0.13339200271297674
     f64.mul
     f64.add
     local.set $u|26
     local.get $x|19
     local.get $s|25
     local.get $u|26
     f64.mul
     f64.add
     local.get $s|25
     local.get $w|24
     f64.mul
     local.get $t|23
     local.get $w|24
     local.get $r|22
     f64.mul
     f64.add
     f64.mul
     f64.add
     local.set $r|22
     local.get $odd|20
     if (result f64)
      f32.const -1
      f64.promote_f32
      local.get $r|22
      f64.div
     else
      local.get $r|22
     end
     f32.demote_f64
     br $~lib/math/tan_kernf|inlined.2
    end
    return
   end
   unreachable
  end
  local.get $ux
  i32.const 1088565717
  i32.le_u
  if
   local.get $ux
   i32.const 1085271519
   i32.le_u
   if
    block $~lib/math/tan_kernf|inlined.3 (result f32)
     local.get $sign
     if (result f64)
      local.get $x
      f64.promote_f32
      f64.const 4.71238898038469
      f64.add
     else
      local.get $x
      f64.promote_f32
      f64.const 4.71238898038469
      f64.sub
     end
     local.set $x|27
     i32.const 1
     local.set $odd|28
     local.get $x|27
     local.get $x|27
     f64.mul
     local.set $z|29
     f64.const 0.002974357433599673
     local.get $z|29
     f64.const 0.009465647849436732
     f64.mul
     f64.add
     local.set $r|30
     f64.const 0.05338123784456704
     local.get $z|29
     f64.const 0.024528318116654728
     f64.mul
     f64.add
     local.set $t|31
     local.get $z|29
     local.get $z|29
     f64.mul
     local.set $w|32
     local.get $z|29
     local.get $x|27
     f64.mul
     local.set $s|33
     f64.const 0.3333313950307914
     local.get $z|29
     f64.const 0.13339200271297674
     f64.mul
     f64.add
     local.set $u|34
     local.get $x|27
     local.get $s|33
     local.get $u|34
     f64.mul
     f64.add
     local.get $s|33
     local.get $w|32
     f64.mul
     local.get $t|31
     local.get $w|32
     local.get $r|30
     f64.mul
     f64.add
     f64.mul
     f64.add
     local.set $r|30
     local.get $odd|28
     if (result f64)
      f32.const -1
      f64.promote_f32
      local.get $r|30
      f64.div
     else
      local.get $r|30
     end
     f32.demote_f64
     br $~lib/math/tan_kernf|inlined.3
    end
    return
   else
    block $~lib/math/tan_kernf|inlined.4 (result f32)
     local.get $sign
     if (result f64)
      local.get $x
      f64.promote_f32
      f64.const 6.283185307179586
      f64.add
     else
      local.get $x
      f64.promote_f32
      f64.const 6.283185307179586
      f64.sub
     end
     local.set $x|35
     i32.const 0
     local.set $odd|36
     local.get $x|35
     local.get $x|35
     f64.mul
     local.set $z|37
     f64.const 0.002974357433599673
     local.get $z|37
     f64.const 0.009465647849436732
     f64.mul
     f64.add
     local.set $r|38
     f64.const 0.05338123784456704
     local.get $z|37
     f64.const 0.024528318116654728
     f64.mul
     f64.add
     local.set $t|39
     local.get $z|37
     local.get $z|37
     f64.mul
     local.set $w|40
     local.get $z|37
     local.get $x|35
     f64.mul
     local.set $s|41
     f64.const 0.3333313950307914
     local.get $z|37
     f64.const 0.13339200271297674
     f64.mul
     f64.add
     local.set $u|42
     local.get $x|35
     local.get $s|41
     local.get $u|42
     f64.mul
     f64.add
     local.get $s|41
     local.get $w|40
     f64.mul
     local.get $t|39
     local.get $w|40
     local.get $r|38
     f64.mul
     f64.add
     f64.mul
     f64.add
     local.set $r|38
     local.get $odd|36
     if (result f64)
      f32.const -1
      f64.promote_f32
      local.get $r|38
      f64.div
     else
      local.get $r|38
     end
     f32.demote_f64
     br $~lib/math/tan_kernf|inlined.4
    end
    return
   end
   unreachable
  end
  local.get $ux
  i32.const 2139095040
  i32.ge_u
  if
   local.get $x
   local.get $x
   f32.sub
   return
  end
  block $~lib/math/rempio2f|inlined.2 (result i32)
   local.get $x
   local.set $x|43
   local.get $ux
   local.set $u|44
   local.get $sign
   local.set $sign|45
   local.get $u|44
   i32.const 1305022427
   i32.lt_u
   if
    local.get $x|43
    f64.promote_f32
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.set $q
    local.get $x|43
    f64.promote_f32
    local.get $q
    f64.const 1.5707963109016418
    f64.mul
    f64.sub
    local.get $q
    f64.const 1.5893254773528196e-08
    f64.mul
    f64.sub
    global.set $~lib/math/rempio2f_y
    local.get $q
    i32.trunc_sat_f64_s
    br $~lib/math/rempio2f|inlined.2
   end
   block $~lib/math/pio2f_large_quot|inlined.2 (result i32)
    local.get $x|43
    local.set $x|47
    local.get $u|44
    local.set $u|48
    local.get $u|48
    i32.const 23
    i32.shr_s
    i32.const 152
    i32.sub
    local.set $offset
    local.get $offset
    i32.const 63
    i32.and
    i64.extend_i32_s
    local.set $shift
    i32.const 1051280
    local.get $offset
    i32.const 6
    i32.shr_s
    i32.const 3
    i32.shl
    i32.add
    local.set $tblPtr
    local.get $tblPtr
    i64.load $0
    local.set $b0
    local.get $tblPtr
    i64.load $0 offset=8
    local.set $b1
    local.get $shift
    i64.const 32
    i64.gt_u
    if
     local.get $tblPtr
     i64.load $0 offset=16
     local.set $b2
     local.get $b2
     i64.const 96
     local.get $shift
     i64.sub
     i64.shr_u
     local.set $lo
     local.get $lo
     local.get $b1
     local.get $shift
     i64.const 32
     i64.sub
     i64.shl
     i64.or
     local.set $lo
    else
     local.get $b1
     i64.const 32
     local.get $shift
     i64.sub
     i64.shr_u
     local.set $lo
    end
    local.get $b1
    i64.const 64
    local.get $shift
    i64.sub
    i64.shr_u
    local.get $b0
    local.get $shift
    i64.shl
    i64.or
    local.set $hi
    local.get $u|48
    i32.const 8388607
    i32.and
    i32.const 8388608
    i32.or
    i64.extend_i32_s
    local.set $mantissa
    local.get $mantissa
    local.get $hi
    i64.mul
    local.get $mantissa
    local.get $lo
    i64.mul
    i64.const 32
    i64.shr_u
    i64.add
    local.set $product
    local.get $product
    i64.const 2
    i64.shl
    local.set $r|59
    local.get $product
    i64.const 62
    i64.shr_u
    local.get $r|59
    i64.const 63
    i64.shr_u
    i64.add
    i32.wrap_i64
    local.set $q|60
    f64.const 8.515303950216386e-20
    local.get $x|47
    f64.promote_f32
    f64.copysign
    local.get $r|59
    f64.convert_i64_s
    f64.mul
    global.set $~lib/math/rempio2f_y
    local.get $q|60
    br $~lib/math/pio2f_large_quot|inlined.2
   end
   local.set $q|61
   i32.const 0
   local.get $q|61
   i32.sub
   local.get $q|61
   local.get $sign|45
   select
   br $~lib/math/rempio2f|inlined.2
  end
  local.set $n
  global.get $~lib/math/rempio2f_y
  local.set $y
  block $~lib/math/tan_kernf|inlined.5 (result f32)
   local.get $y
   local.set $x|64
   local.get $n
   i32.const 1
   i32.and
   local.set $odd|65
   local.get $x|64
   local.get $x|64
   f64.mul
   local.set $z|66
   f64.const 0.002974357433599673
   local.get $z|66
   f64.const 0.009465647849436732
   f64.mul
   f64.add
   local.set $r|67
   f64.const 0.05338123784456704
   local.get $z|66
   f64.const 0.024528318116654728
   f64.mul
   f64.add
   local.set $t|68
   local.get $z|66
   local.get $z|66
   f64.mul
   local.set $w|69
   local.get $z|66
   local.get $x|64
   f64.mul
   local.set $s|70
   f64.const 0.3333313950307914
   local.get $z|66
   f64.const 0.13339200271297674
   f64.mul
   f64.add
   local.set $u|71
   local.get $x|64
   local.get $s|70
   local.get $u|71
   f64.mul
   f64.add
   local.get $s|70
   local.get $w|69
   f64.mul
   local.get $t|68
   local.get $w|69
   local.get $r|67
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.set $r|67
   local.get $odd|65
   if (result f64)
    f32.const -1
    f64.promote_f32
    local.get $r|67
    f64.div
   else
    local.get $r|67
   end
   f32.demote_f64
   br $~lib/math/tan_kernf|inlined.5
  end
  return
 )
 (func $assembly/gen/diode/Diode#_update (param $this i32)
  (local $nyq f32)
  (local $K f32)
  (local $bh f32)
  (local $a f32)
  (local $a2 f32)
  (local $b f32)
  (local $b2 f32)
  (local $c f32)
  (local $g0 f32)
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:audioRate
  f32.convert_i32_u
  f32.const 2
  f32.div
  local.set $nyq
  f32.const 0
  f32.const 1
  local.get $this
  call $assembly/gen/diode/Diode#get:hpf
  local.get $nyq
  f32.div
  call $assembly/gen/diode/clamp
  global.get $~lib/math/NativeMathf.PI
  f32.mul
  local.set $K
  local.get $this
  local.get $K
  f32.const 2
  f32.sub
  local.get $K
  f32.const 2
  f32.add
  f32.div
  call $assembly/gen/diode/Diode#set:_ah
  f32.const 2
  local.get $K
  f32.const 2
  f32.add
  f32.div
  local.set $bh
  local.get $this
  local.get $bh
  call $assembly/gen/diode/Diode#set:_bh
  local.get $this
  f32.const 20
  local.get $this
  call $assembly/gen/diode/Diode#get:q
  f32.mul
  call $assembly/gen/diode/Diode#set:_k
  local.get $this
  f32.const 1
  f32.const 0.5
  local.get $this
  call $assembly/gen/diode/Diode#get:_k
  f32.mul
  f32.add
  call $assembly/gen/diode/Diode#set:_A
  global.get $~lib/math/NativeMathf.PI
  f32.const 0
  f32.const 1
  local.get $this
  call $assembly/gen/diode/Diode#get:cut
  local.get $nyq
  f32.div
  call $assembly/gen/diode/clamp
  f32.mul
  local.set $a
  f32.const 2
  f32.const 0.5
  local.get $a
  f32.mul
  call $~lib/math/NativeMathf.tan
  f32.mul
  local.set $a
  local.get $this
  f32.const 1
  local.get $a
  f32.div
  call $assembly/gen/diode/Diode#set:_ainv
  local.get $a
  local.get $a
  f32.mul
  local.set $a2
  f32.const 2
  local.get $a
  f32.mul
  f32.const 1
  f32.add
  local.set $b
  local.get $b
  local.get $b
  f32.mul
  local.set $b2
  f32.const 1
  f32.const 2
  local.get $a2
  f32.mul
  local.get $a2
  f32.mul
  f32.const 4
  local.get $a2
  f32.mul
  local.get $b2
  f32.mul
  f32.sub
  local.get $b2
  local.get $b2
  f32.mul
  f32.add
  f32.div
  local.set $c
  f32.const 2
  local.get $a2
  f32.mul
  local.get $a2
  f32.mul
  local.get $c
  f32.mul
  local.set $g0
  local.get $this
  local.get $g0
  local.get $bh
  f32.mul
  call $assembly/gen/diode/Diode#set:_g
  local.get $this
  local.get $a
  call $assembly/gen/diode/Diode#set:_a
  local.get $this
  local.get $a2
  call $assembly/gen/diode/Diode#set:_a2
  local.get $this
  local.get $b
  call $assembly/gen/diode/Diode#set:_b
  local.get $this
  local.get $b2
  call $assembly/gen/diode/Diode#set:_b2
  local.get $this
  local.get $c
  call $assembly/gen/diode/Diode#set:_c
  local.get $this
  local.get $g0
  call $assembly/gen/diode/Diode#set:_g0
 )
 (func $assembly/gen/inc/Inc#get:_lastTrig (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/gen/inc/Inc#get:trig (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=12
 )
 (func $assembly/gen/inc/Inc#_update (param $this i32)
  local.get $this
  call $assembly/gen/inc/Inc#get:_lastTrig
  local.get $this
  call $assembly/gen/inc/Inc#get:trig
  i32.trunc_sat_f32_s
  i32.ne
  if
   local.get $this
   f32.const 0
   call $assembly/gen/inc/Inc#set:_value
  end
  local.get $this
  local.get $this
  call $assembly/gen/inc/Inc#get:trig
  i32.trunc_sat_f32_s
  call $assembly/gen/inc/Inc#set:_lastTrig
 )
 (func $assembly/gen/lp/Lp#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/gen/lp/Lp#_update (param $this i32)
  (local $omega f32)
  (local $dt f32)
  f32.const 1
  f32.const 2
  global.get $~lib/math/NativeMathf.PI
  f32.mul
  local.get $this
  call $assembly/gen/lp/Lp#get:cut
  f32.mul
  f32.div
  local.set $omega
  f32.const 1
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:audioRate
  f32.convert_i32_u
  f32.div
  local.set $dt
  local.get $this
  local.get $dt
  local.get $omega
  local.get $dt
  f32.add
  f32.div
  call $assembly/gen/lp/Lp#set:_alpha
 )
 (func $assembly/gen/mhp/Mhp#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=80
 )
 (func $assembly/gen/mhp/Mhp#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=84
 )
 (func $assembly/gen/moog/Moog#get:_params_freq (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=72
 )
 (func $assembly/gen/moog/Moog#get:_params_Q (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=76
 )
 (func $assembly/gen/moog/Moog#get:_kVt (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=56
 )
 (func $~lib/math/NativeMathf.exp (param $x f32) (result f32)
  (local $x|1 f32)
  (local $xd f64)
  (local $ix i32)
  (local $ux i32)
  (local $z f64)
  (local $kd f64)
  (local $ki i64)
  (local $r f64)
  (local $s f64)
  (local $y f64)
  (local $t i64)
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  block $~lib/util/math/expf_lut|inlined.0 (result f32)
   local.get $x
   local.set $x|1
   local.get $x|1
   f64.promote_f32
   local.set $xd
   local.get $x|1
   i32.reinterpret_f32
   local.set $ix
   local.get $ix
   i32.const 20
   i32.shr_u
   i32.const 2047
   i32.and
   local.set $ux
   local.get $ux
   i32.const 1067
   i32.ge_u
   if
    local.get $ix
    i32.const -8388608
    i32.eq
    if
     f32.const 0
     br $~lib/util/math/expf_lut|inlined.0
    end
    local.get $ux
    i32.const 2040
    i32.ge_u
    if
     local.get $x|1
     local.get $x|1
     f32.add
     br $~lib/util/math/expf_lut|inlined.0
    end
    local.get $x|1
    i32.const 1118925335
    f32.reinterpret_i32
    f32.gt
    if
     local.get $x|1
     f32.const 1701411834604692317316873e14
     f32.mul
     br $~lib/util/math/expf_lut|inlined.0
    end
    local.get $x|1
    i32.const -1026559564
    f32.reinterpret_i32
    f32.lt
    if
     f32.const 0
     br $~lib/util/math/expf_lut|inlined.0
    end
   end
   f64.const 46.16624130844683
   local.get $xd
   f64.mul
   local.set $z
   local.get $z
   f64.const 6755399441055744
   f64.add
   local.set $kd
   local.get $kd
   i64.reinterpret_f64
   local.set $ki
   local.get $z
   local.get $kd
   f64.const 6755399441055744
   f64.sub
   f64.sub
   local.set $r
   i32.const 1054704
   local.get $ki
   i32.wrap_i64
   i32.const 31
   i32.and
   i32.const 3
   i32.shl
   i32.add
   i64.load $0
   local.set $t
   local.get $t
   local.get $ki
   i64.const 52
   i32.const 5
   i64.extend_i32_s
   i64.sub
   i64.shl
   i64.add
   local.set $t
   local.get $t
   f64.reinterpret_i64
   local.set $s
   f64.const 1.6938359250920212e-06
   local.get $r
   f64.mul
   f64.const 2.3459809789509004e-04
   f64.add
   local.set $z
   f64.const 0.021660849396613134
   local.get $r
   f64.mul
   f64.const 1
   f64.add
   local.set $y
   local.get $y
   local.get $z
   local.get $r
   local.get $r
   f64.mul
   f64.mul
   f64.add
   local.set $y
   local.get $y
   local.get $s
   f64.mul
   local.set $y
   local.get $y
   f32.demote_f64
   br $~lib/util/math/expf_lut|inlined.0
  end
  return
 )
 (func $assembly/gen/moog/Moog#get:_v2 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=36
 )
 (func $assembly/gen/mhp/Mhp#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $this|4 i32)
  (local $freq|5 f32)
  (local $Q|6 f32)
  (local $kfc f32)
  (local $kf f32)
  (local $kfcr f32)
  (local $x f32)
  (local $exp_out f32)
  (local $m_k2vgNew f32)
  (local $m_kacrNew f32)
  (local $m_postGainNew f32)
  block $assembly/gen/moog/Moog#_updateCoeffs|inlined.0
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/mhp/Mhp#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/mhp/Mhp#get:q
   local.set $Q
   block $assembly/gen/moog/Moog#_validate|inlined.0 (result i32)
    local.get $this|1
    local.set $this|4
    local.get $freq
    local.set $freq|5
    local.get $Q
    local.set $Q|6
    local.get $freq|5
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/moog/Moog#_validate|inlined.0
    end
    local.get $freq|5
    local.get $freq|5
    f32.ne
    if
     i32.const 0
     br $assembly/gen/moog/Moog#_validate|inlined.0
    end
    local.get $Q|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/moog/Moog#_validate|inlined.0
    end
    local.get $Q|6
    local.get $Q|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/moog/Moog#_validate|inlined.0
    end
    i32.const 1
    br $assembly/gen/moog/Moog#_validate|inlined.0
   end
   i32.eqz
   if
    br $assembly/gen/moog/Moog#_updateCoeffs|inlined.0
   end
   local.get $this|1
   call $assembly/gen/moog/Moog#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/moog/Moog#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   local.get $this|1
   f32.const 2
   local.get $this|1
   call $assembly/gen/moog/Moog#get:_kVt
   f32.add
   call $assembly/gen/moog/Moog#set:_v2
   local.get $freq
   local.get $this|1
   call $assembly/gen/gen/Gen#get:_engine
   call $assembly/core/engine/Engine#get:audioRate
   f32.convert_i32_u
   f32.div
   local.set $kfc
   local.get $kfc
   local.set $kf
   f32.const 1.8730000257492065
   local.get $kfc
   local.get $kfc
   f32.mul
   local.get $kfc
   f32.mul
   f32.mul
   f32.const 0.49549999833106995
   local.get $kfc
   local.get $kfc
   f32.mul
   f32.mul
   f32.add
   f32.const 0.6489999890327454
   local.get $kfc
   f32.mul
   f32.sub
   f32.const 0.9987999796867371
   f32.add
   local.set $kfcr
   f32.const -2
   global.get $~lib/math/NativeMathf.PI
   f32.mul
   local.get $kfcr
   f32.mul
   local.get $kf
   f32.mul
   local.set $x
   local.get $x
   call $~lib/math/NativeMathf.exp
   local.set $exp_out
   local.get $this|1
   call $assembly/gen/moog/Moog#get:_v2
   f32.const 1
   local.get $exp_out
   f32.sub
   f32.mul
   local.set $m_k2vgNew
   local.get $Q
   f32.const -3.9363999366760254
   local.get $kfc
   local.get $kfc
   f32.mul
   f32.mul
   f32.const 1.84089994430542
   local.get $kfc
   f32.mul
   f32.add
   f32.const 0.9968000054359436
   f32.add
   f32.mul
   local.set $m_kacrNew
   f32.const 1.0001784563064575
   f32.const 0.9331585764884949
   local.get $Q
   f32.mul
   f32.add
   local.set $m_postGainNew
   local.get $this|1
   local.get $m_postGainNew
   call $assembly/gen/moog/Moog#set:_m_postGain
   local.get $this|1
   local.get $m_kacrNew
   call $assembly/gen/moog/Moog#set:_m_kacr
   local.get $this|1
   local.get $m_k2vgNew
   call $assembly/gen/moog/Moog#set:_m_k2vg
  end
 )
 (func $assembly/gen/mlp/Mlp#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=80
 )
 (func $assembly/gen/mlp/Mlp#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=84
 )
 (func $assembly/gen/mlp/Mlp#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $this|4 i32)
  (local $freq|5 f32)
  (local $Q|6 f32)
  (local $kfc f32)
  (local $kf f32)
  (local $kfcr f32)
  (local $x f32)
  (local $exp_out f32)
  (local $m_k2vgNew f32)
  (local $m_kacrNew f32)
  (local $m_postGainNew f32)
  block $assembly/gen/moog/Moog#_updateCoeffs|inlined.1
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/mlp/Mlp#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/mlp/Mlp#get:q
   local.set $Q
   block $assembly/gen/moog/Moog#_validate|inlined.1 (result i32)
    local.get $this|1
    local.set $this|4
    local.get $freq
    local.set $freq|5
    local.get $Q
    local.set $Q|6
    local.get $freq|5
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/moog/Moog#_validate|inlined.1
    end
    local.get $freq|5
    local.get $freq|5
    f32.ne
    if
     i32.const 0
     br $assembly/gen/moog/Moog#_validate|inlined.1
    end
    local.get $Q|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/moog/Moog#_validate|inlined.1
    end
    local.get $Q|6
    local.get $Q|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/moog/Moog#_validate|inlined.1
    end
    i32.const 1
    br $assembly/gen/moog/Moog#_validate|inlined.1
   end
   i32.eqz
   if
    br $assembly/gen/moog/Moog#_updateCoeffs|inlined.1
   end
   local.get $this|1
   call $assembly/gen/moog/Moog#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/moog/Moog#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   local.get $this|1
   f32.const 2
   local.get $this|1
   call $assembly/gen/moog/Moog#get:_kVt
   f32.add
   call $assembly/gen/moog/Moog#set:_v2
   local.get $freq
   local.get $this|1
   call $assembly/gen/gen/Gen#get:_engine
   call $assembly/core/engine/Engine#get:audioRate
   f32.convert_i32_u
   f32.div
   local.set $kfc
   local.get $kfc
   local.set $kf
   f32.const 1.8730000257492065
   local.get $kfc
   local.get $kfc
   f32.mul
   local.get $kfc
   f32.mul
   f32.mul
   f32.const 0.49549999833106995
   local.get $kfc
   local.get $kfc
   f32.mul
   f32.mul
   f32.add
   f32.const 0.6489999890327454
   local.get $kfc
   f32.mul
   f32.sub
   f32.const 0.9987999796867371
   f32.add
   local.set $kfcr
   f32.const -2
   global.get $~lib/math/NativeMathf.PI
   f32.mul
   local.get $kfcr
   f32.mul
   local.get $kf
   f32.mul
   local.set $x
   local.get $x
   call $~lib/math/NativeMathf.exp
   local.set $exp_out
   local.get $this|1
   call $assembly/gen/moog/Moog#get:_v2
   f32.const 1
   local.get $exp_out
   f32.sub
   f32.mul
   local.set $m_k2vgNew
   local.get $Q
   f32.const -3.9363999366760254
   local.get $kfc
   local.get $kfc
   f32.mul
   f32.mul
   f32.const 1.84089994430542
   local.get $kfc
   f32.mul
   f32.add
   f32.const 0.9968000054359436
   f32.add
   f32.mul
   local.set $m_kacrNew
   f32.const 1.0001784563064575
   f32.const 0.9331585764884949
   local.get $Q
   f32.mul
   f32.add
   local.set $m_postGainNew
   local.get $this|1
   local.get $m_postGainNew
   call $assembly/gen/moog/Moog#set:_m_postGain
   local.get $this|1
   local.get $m_kacrNew
   call $assembly/gen/moog/Moog#set:_m_kacr
   local.get $this|1
   local.get $m_k2vgNew
   call $assembly/gen/moog/Moog#set:_m_k2vg
  end
 )
 (func $assembly/gen/rate/Rate#get:samples (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/gen/rate/Rate#get:_engine (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/gen/rate/Rate#_update (param $this i32)
  (local $rate i32)
  local.get $this
  call $assembly/gen/rate/Rate#get:_engine
  local.get $this
  call $assembly/gen/rate/Rate#get:samples
  i32.trunc_sat_f32_u
  call $assembly/core/engine/Engine#set:rateSamples
  local.get $this
  call $assembly/gen/rate/Rate#get:_engine
  block $assembly/util/rateToPhaseStep|inlined.2 (result i32)
   local.get $this
   call $assembly/gen/rate/Rate#get:samples
   i32.trunc_sat_f32_u
   local.set $rate
   i32.const -1
   local.get $rate
   i32.div_u
   br $assembly/util/rateToPhaseStep|inlined.2
  end
  call $assembly/core/engine/Engine#set:rateStep
 )
 (func $assembly/gen/sap/Sap#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=104
 )
 (func $assembly/gen/sap/Sap#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/svf/Svf#get:_params_freq (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=96
 )
 (func $assembly/gen/svf/Svf#get:_params_Q (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=100
 )
 (func $~lib/math/tan_kern (param $x f64) (param $y f64) (param $iy i32) (result f64)
  (local $z f64)
  (local $r f64)
  (local $v f64)
  (local $w f64)
  (local $s f64)
  (local $hx i32)
  (local $ix i32)
  (local $big i32)
  (local $a f64)
  (local $t f64)
  local.get $x
  i64.reinterpret_f64
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $hx
  local.get $hx
  i32.const 2147483647
  i32.and
  local.set $ix
  local.get $ix
  i32.const 1072010280
  i32.ge_s
  local.set $big
  local.get $big
  if
   local.get $hx
   i32.const 0
   i32.lt_s
   if
    local.get $x
    f64.neg
    local.set $x
    local.get $y
    f64.neg
    local.set $y
   end
   f64.const 0.7853981633974483
   local.get $x
   f64.sub
   local.set $z
   f64.const 3.061616997868383e-17
   local.get $y
   f64.sub
   local.set $w
   local.get $z
   local.get $w
   f64.add
   local.set $x
   f64.const 0
   local.set $y
  end
  local.get $x
  local.get $x
  f64.mul
  local.set $z
  local.get $z
  local.get $z
  f64.mul
  local.set $w
  f64.const 0.13333333333320124
  local.get $w
  f64.const 0.021869488294859542
  local.get $w
  f64.const 3.5920791075913124e-03
  local.get $w
  f64.const 5.880412408202641e-04
  local.get $w
  f64.const 7.817944429395571e-05
  local.get $w
  f64.const -1.8558637485527546e-05
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  local.set $r
  local.get $z
  f64.const 0.05396825397622605
  local.get $w
  f64.const 0.0088632398235993
  local.get $w
  f64.const 1.4562094543252903e-03
  local.get $w
  f64.const 2.464631348184699e-04
  local.get $w
  f64.const 7.140724913826082e-05
  local.get $w
  f64.const 2.590730518636337e-05
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  local.set $v
  local.get $z
  local.get $x
  f64.mul
  local.set $s
  local.get $y
  local.get $z
  local.get $s
  local.get $r
  local.get $v
  f64.add
  f64.mul
  local.get $y
  f64.add
  f64.mul
  f64.add
  local.set $r
  local.get $r
  f64.const 0.3333333333333341
  local.get $s
  f64.mul
  f64.add
  local.set $r
  local.get $x
  local.get $r
  f64.add
  local.set $w
  local.get $big
  if
   local.get $iy
   f64.convert_i32_s
   local.set $v
   f64.const 1
   local.get $hx
   i32.const 30
   i32.shr_s
   i32.const 2
   i32.and
   f64.convert_i32_s
   f64.sub
   local.get $v
   f64.const 2
   local.get $x
   local.get $w
   local.get $w
   f64.mul
   local.get $w
   local.get $v
   f64.add
   f64.div
   local.get $r
   f64.sub
   f64.sub
   f64.mul
   f64.sub
   f64.mul
   return
  end
  local.get $iy
  i32.const 1
  i32.eq
  if
   local.get $w
   return
  end
  local.get $w
  local.set $z
  local.get $z
  i64.reinterpret_f64
  i64.const -4294967296
  i64.and
  f64.reinterpret_i64
  local.set $z
  local.get $r
  local.get $z
  local.get $x
  f64.sub
  f64.sub
  local.set $v
  f64.const 1
  f64.neg
  local.get $w
  f64.div
  local.tee $a
  local.set $t
  local.get $t
  i64.reinterpret_f64
  i64.const -4294967296
  i64.and
  f64.reinterpret_i64
  local.set $t
  f64.const 1
  local.get $t
  local.get $z
  f64.mul
  f64.add
  local.set $s
  local.get $t
  local.get $a
  local.get $s
  local.get $t
  local.get $v
  f64.mul
  f64.add
  f64.mul
  f64.add
  return
 )
 (func $~lib/math/NativeMath.tan (param $x f64) (result f64)
  (local $u i64)
  (local $ux i32)
  (local $sign i32)
  (local $x|4 f64)
  (local $u|5 i64)
  (local $sign|6 i32)
  (local $ix i32)
  (local $q i32)
  (local $z f64)
  (local $y0 f64)
  (local $y1 f64)
  (local $q|12 f64)
  (local $r f64)
  (local $w f64)
  (local $j i32)
  (local $y0|16 f64)
  (local $hi i32)
  (local $i i32)
  (local $t f64)
  (local $t|20 f64)
  (local $y1|21 f64)
  (local $q|22 i32)
  (local $n i32)
  local.get $x
  i64.reinterpret_f64
  local.set $u
  local.get $u
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $ux
  local.get $ux
  i32.const 31
  i32.shr_u
  local.set $sign
  local.get $ux
  i32.const 2147483647
  i32.and
  local.set $ux
  local.get $ux
  i32.const 1072243195
  i32.le_u
  if
   local.get $ux
   i32.const 1044381696
   i32.lt_u
   if
    local.get $x
    return
   end
   local.get $x
   f64.const 0
   i32.const 1
   call $~lib/math/tan_kern
   return
  end
  local.get $ux
  i32.const 2146435072
  i32.ge_u
  if
   local.get $x
   local.get $x
   f64.sub
   return
  end
  block $~lib/math/rempio2|inlined.2 (result i32)
   local.get $x
   local.set $x|4
   local.get $u
   local.set $u|5
   local.get $sign
   local.set $sign|6
   local.get $u|5
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const 2147483647
   i32.and
   local.set $ix
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   local.get $ix
   i32.const 1073928572
   i32.lt_u
   if
    i32.const 1
    local.set $q
    local.get $sign|6
    i32.eqz
    if
     local.get $x|4
     f64.const 1.5707963267341256
     f64.sub
     local.set $z
     local.get $ix
     i32.const 1073291771
     i32.ne
     if
      local.get $z
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $y0
      local.get $z
      local.get $y0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $y1
     else
      local.get $z
      f64.const 6.077100506303966e-11
      f64.sub
      local.set $z
      local.get $z
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $y0
      local.get $z
      local.get $y0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $y1
     end
    else
     local.get $x|4
     f64.const 1.5707963267341256
     f64.add
     local.set $z
     local.get $ix
     i32.const 1073291771
     i32.ne
     if
      local.get $z
      f64.const 6.077100506506192e-11
      f64.add
      local.set $y0
      local.get $z
      local.get $y0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.add
      local.set $y1
     else
      local.get $z
      f64.const 6.077100506303966e-11
      f64.add
      local.set $z
      local.get $z
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $y0
      local.get $z
      local.get $y0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $y1
     end
     i32.const -1
     local.set $q
    end
    local.get $y0
    global.set $~lib/math/rempio2_y0
    local.get $y1
    global.set $~lib/math/rempio2_y1
    local.get $q
    br $~lib/math/rempio2|inlined.2
   end
   local.get $ix
   i32.const 1094263291
   i32.lt_u
   if
    local.get $x|4
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.set $q|12
    local.get $x|4
    local.get $q|12
    f64.const 1.5707963267341256
    f64.mul
    f64.sub
    local.set $r
    local.get $q|12
    f64.const 6.077100506506192e-11
    f64.mul
    local.set $w
    local.get $ix
    i32.const 20
    i32.shr_u
    local.set $j
    local.get $r
    local.get $w
    f64.sub
    local.set $y0|16
    local.get $y0|16
    i64.reinterpret_f64
    i64.const 32
    i64.shr_u
    i32.wrap_i64
    local.set $hi
    local.get $j
    local.get $hi
    i32.const 20
    i32.shr_u
    i32.const 2047
    i32.and
    i32.sub
    local.set $i
    local.get $i
    i32.const 16
    i32.gt_u
    if
     local.get $r
     local.set $t
     local.get $q|12
     f64.const 6.077100506303966e-11
     f64.mul
     local.set $w
     local.get $t
     local.get $w
     f64.sub
     local.set $r
     local.get $q|12
     f64.const 2.0222662487959506e-21
     f64.mul
     local.get $t
     local.get $r
     f64.sub
     local.get $w
     f64.sub
     f64.sub
     local.set $w
     local.get $r
     local.get $w
     f64.sub
     local.set $y0|16
     local.get $y0|16
     i64.reinterpret_f64
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     local.set $hi
     local.get $j
     local.get $hi
     i32.const 20
     i32.shr_u
     i32.const 2047
     i32.and
     i32.sub
     local.set $i
     local.get $i
     i32.const 49
     i32.gt_u
     if
      local.get $r
      local.set $t|20
      local.get $q|12
      f64.const 2.0222662487111665e-21
      f64.mul
      local.set $w
      local.get $t|20
      local.get $w
      f64.sub
      local.set $r
      local.get $q|12
      f64.const 8.4784276603689e-32
      f64.mul
      local.get $t|20
      local.get $r
      f64.sub
      local.get $w
      f64.sub
      f64.sub
      local.set $w
      local.get $r
      local.get $w
      f64.sub
      local.set $y0|16
     end
    end
    local.get $r
    local.get $y0|16
    f64.sub
    local.get $w
    f64.sub
    local.set $y1|21
    local.get $y0|16
    global.set $~lib/math/rempio2_y0
    local.get $y1|21
    global.set $~lib/math/rempio2_y1
    local.get $q|12
    i32.trunc_sat_f64_s
    br $~lib/math/rempio2|inlined.2
   end
   local.get $x|4
   local.get $u|5
   call $~lib/math/pio2_large_quot
   local.set $q|22
   i32.const 0
   local.get $q|22
   i32.sub
   local.get $q|22
   local.get $sign|6
   select
   br $~lib/math/rempio2|inlined.2
  end
  local.set $n
  global.get $~lib/math/rempio2_y0
  global.get $~lib/math/rempio2_y1
  i32.const 1
  local.get $n
  i32.const 1
  i32.and
  i32.const 1
  i32.shl
  i32.sub
  call $~lib/math/tan_kern
  return
 )
 (func $assembly/gen/svf/Svf#get:_k (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=88
 )
 (func $assembly/gen/svf/Svf#get:_a1 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=32
 )
 (func $assembly/gen/svf/Svf#get:_a2 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=40
 )
 (func $assembly/gen/sap/Sap#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $this|4 i32)
  (local $freq|5 f32)
  (local $Q|6 f32)
  (local $g f64)
  block $assembly/gen/svf/Svf#_updateCoeffs|inlined.0
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/sap/Sap#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/sap/Sap#get:q
   local.set $Q
   block $assembly/gen/svf/Svf#_validate|inlined.0 (result i32)
    local.get $this|1
    local.set $this|4
    local.get $freq
    local.set $freq|5
    local.get $Q
    local.set $Q|6
    local.get $freq|5
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.0
    end
    local.get $freq|5
    local.get $freq|5
    f32.ne
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.0
    end
    local.get $Q|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.0
    end
    local.get $Q|6
    local.get $Q|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.0
    end
    i32.const 1
    br $assembly/gen/svf/Svf#_validate|inlined.0
   end
   i32.eqz
   if
    br $assembly/gen/svf/Svf#_updateCoeffs|inlined.0
   end
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   global.get $~lib/math/NativeMath.PI
   local.get $freq
   f64.promote_f32
   f64.mul
   local.get $this|1
   call $assembly/gen/gen/Gen#get:_engine
   call $assembly/core/engine/Engine#get:audioRate
   f64.convert_i32_u
   f64.div
   call $~lib/math/NativeMath.tan
   local.set $g
   local.get $this|1
   f64.const 2
   f64.const 2
   local.get $Q
   f64.promote_f32
   f64.mul
   f64.sub
   call $assembly/gen/svf/Svf#set:_k
   local.get $this|1
   f64.const 1
   f64.const 1
   local.get $g
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_k
   f64.add
   f64.mul
   f64.add
   f64.div
   call $assembly/gen/svf/Svf#set:_a1
   local.get $this|1
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_a1
   f64.mul
   call $assembly/gen/svf/Svf#set:_a2
   local.get $this|1
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_a2
   f64.mul
   call $assembly/gen/svf/Svf#set:_a3
  end
 )
 (func $assembly/gen/sbp/Sbp#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=104
 )
 (func $assembly/gen/sbp/Sbp#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/sbp/Sbp#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $this|4 i32)
  (local $freq|5 f32)
  (local $Q|6 f32)
  (local $g f64)
  block $assembly/gen/svf/Svf#_updateCoeffs|inlined.1
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/sbp/Sbp#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/sbp/Sbp#get:q
   local.set $Q
   block $assembly/gen/svf/Svf#_validate|inlined.1 (result i32)
    local.get $this|1
    local.set $this|4
    local.get $freq
    local.set $freq|5
    local.get $Q
    local.set $Q|6
    local.get $freq|5
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.1
    end
    local.get $freq|5
    local.get $freq|5
    f32.ne
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.1
    end
    local.get $Q|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.1
    end
    local.get $Q|6
    local.get $Q|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.1
    end
    i32.const 1
    br $assembly/gen/svf/Svf#_validate|inlined.1
   end
   i32.eqz
   if
    br $assembly/gen/svf/Svf#_updateCoeffs|inlined.1
   end
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   global.get $~lib/math/NativeMath.PI
   local.get $freq
   f64.promote_f32
   f64.mul
   local.get $this|1
   call $assembly/gen/gen/Gen#get:_engine
   call $assembly/core/engine/Engine#get:audioRate
   f64.convert_i32_u
   f64.div
   call $~lib/math/NativeMath.tan
   local.set $g
   local.get $this|1
   f64.const 2
   f64.const 2
   local.get $Q
   f64.promote_f32
   f64.mul
   f64.sub
   call $assembly/gen/svf/Svf#set:_k
   local.get $this|1
   f64.const 1
   f64.const 1
   local.get $g
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_k
   f64.add
   f64.mul
   f64.add
   f64.div
   call $assembly/gen/svf/Svf#set:_a1
   local.get $this|1
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_a1
   f64.mul
   call $assembly/gen/svf/Svf#set:_a2
   local.get $this|1
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_a2
   f64.mul
   call $assembly/gen/svf/Svf#set:_a3
  end
 )
 (func $assembly/gen/shp/Shp#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=104
 )
 (func $assembly/gen/shp/Shp#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/shp/Shp#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $this|4 i32)
  (local $freq|5 f32)
  (local $Q|6 f32)
  (local $g f64)
  block $assembly/gen/svf/Svf#_updateCoeffs|inlined.2
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/shp/Shp#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/shp/Shp#get:q
   local.set $Q
   block $assembly/gen/svf/Svf#_validate|inlined.2 (result i32)
    local.get $this|1
    local.set $this|4
    local.get $freq
    local.set $freq|5
    local.get $Q
    local.set $Q|6
    local.get $freq|5
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.2
    end
    local.get $freq|5
    local.get $freq|5
    f32.ne
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.2
    end
    local.get $Q|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.2
    end
    local.get $Q|6
    local.get $Q|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.2
    end
    i32.const 1
    br $assembly/gen/svf/Svf#_validate|inlined.2
   end
   i32.eqz
   if
    br $assembly/gen/svf/Svf#_updateCoeffs|inlined.2
   end
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   global.get $~lib/math/NativeMath.PI
   local.get $freq
   f64.promote_f32
   f64.mul
   local.get $this|1
   call $assembly/gen/gen/Gen#get:_engine
   call $assembly/core/engine/Engine#get:audioRate
   f64.convert_i32_u
   f64.div
   call $~lib/math/NativeMath.tan
   local.set $g
   local.get $this|1
   f64.const 2
   f64.const 2
   local.get $Q
   f64.promote_f32
   f64.mul
   f64.sub
   call $assembly/gen/svf/Svf#set:_k
   local.get $this|1
   f64.const 1
   f64.const 1
   local.get $g
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_k
   f64.add
   f64.mul
   f64.add
   f64.div
   call $assembly/gen/svf/Svf#set:_a1
   local.get $this|1
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_a1
   f64.mul
   call $assembly/gen/svf/Svf#set:_a2
   local.get $this|1
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_a2
   f64.mul
   call $assembly/gen/svf/Svf#set:_a3
  end
 )
 (func $assembly/gen/slp/Slp#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=104
 )
 (func $assembly/gen/slp/Slp#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/slp/Slp#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $this|4 i32)
  (local $freq|5 f32)
  (local $Q|6 f32)
  (local $g f64)
  block $assembly/gen/svf/Svf#_updateCoeffs|inlined.3
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/slp/Slp#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/slp/Slp#get:q
   local.set $Q
   block $assembly/gen/svf/Svf#_validate|inlined.3 (result i32)
    local.get $this|1
    local.set $this|4
    local.get $freq
    local.set $freq|5
    local.get $Q
    local.set $Q|6
    local.get $freq|5
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.3
    end
    local.get $freq|5
    local.get $freq|5
    f32.ne
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.3
    end
    local.get $Q|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.3
    end
    local.get $Q|6
    local.get $Q|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.3
    end
    i32.const 1
    br $assembly/gen/svf/Svf#_validate|inlined.3
   end
   i32.eqz
   if
    br $assembly/gen/svf/Svf#_updateCoeffs|inlined.3
   end
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   global.get $~lib/math/NativeMath.PI
   local.get $freq
   f64.promote_f32
   f64.mul
   local.get $this|1
   call $assembly/gen/gen/Gen#get:_engine
   call $assembly/core/engine/Engine#get:audioRate
   f64.convert_i32_u
   f64.div
   call $~lib/math/NativeMath.tan
   local.set $g
   local.get $this|1
   f64.const 2
   f64.const 2
   local.get $Q
   f64.promote_f32
   f64.mul
   f64.sub
   call $assembly/gen/svf/Svf#set:_k
   local.get $this|1
   f64.const 1
   f64.const 1
   local.get $g
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_k
   f64.add
   f64.mul
   f64.add
   f64.div
   call $assembly/gen/svf/Svf#set:_a1
   local.get $this|1
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_a1
   f64.mul
   call $assembly/gen/svf/Svf#set:_a2
   local.get $this|1
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_a2
   f64.mul
   call $assembly/gen/svf/Svf#set:_a3
  end
 )
 (func $assembly/gen/sno/Sno#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=104
 )
 (func $assembly/gen/sno/Sno#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/sno/Sno#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $this|4 i32)
  (local $freq|5 f32)
  (local $Q|6 f32)
  (local $g f64)
  block $assembly/gen/svf/Svf#_updateCoeffs|inlined.4
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/sno/Sno#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/sno/Sno#get:q
   local.set $Q
   block $assembly/gen/svf/Svf#_validate|inlined.4 (result i32)
    local.get $this|1
    local.set $this|4
    local.get $freq
    local.set $freq|5
    local.get $Q
    local.set $Q|6
    local.get $freq|5
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.4
    end
    local.get $freq|5
    local.get $freq|5
    f32.ne
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.4
    end
    local.get $Q|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.4
    end
    local.get $Q|6
    local.get $Q|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.4
    end
    i32.const 1
    br $assembly/gen/svf/Svf#_validate|inlined.4
   end
   i32.eqz
   if
    br $assembly/gen/svf/Svf#_updateCoeffs|inlined.4
   end
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   global.get $~lib/math/NativeMath.PI
   local.get $freq
   f64.promote_f32
   f64.mul
   local.get $this|1
   call $assembly/gen/gen/Gen#get:_engine
   call $assembly/core/engine/Engine#get:audioRate
   f64.convert_i32_u
   f64.div
   call $~lib/math/NativeMath.tan
   local.set $g
   local.get $this|1
   f64.const 2
   f64.const 2
   local.get $Q
   f64.promote_f32
   f64.mul
   f64.sub
   call $assembly/gen/svf/Svf#set:_k
   local.get $this|1
   f64.const 1
   f64.const 1
   local.get $g
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_k
   f64.add
   f64.mul
   f64.add
   f64.div
   call $assembly/gen/svf/Svf#set:_a1
   local.get $this|1
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_a1
   f64.mul
   call $assembly/gen/svf/Svf#set:_a2
   local.get $this|1
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_a2
   f64.mul
   call $assembly/gen/svf/Svf#set:_a3
  end
 )
 (func $assembly/gen/spk/Spk#get:cut (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=104
 )
 (func $assembly/gen/spk/Spk#get:q (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=108
 )
 (func $assembly/gen/spk/Spk#_update (param $this i32)
  (local $this|1 i32)
  (local $freq f32)
  (local $Q f32)
  (local $this|4 i32)
  (local $freq|5 f32)
  (local $Q|6 f32)
  (local $g f64)
  block $assembly/gen/svf/Svf#_updateCoeffs|inlined.5
   local.get $this
   local.set $this|1
   local.get $this
   call $assembly/gen/spk/Spk#get:cut
   local.set $freq
   local.get $this
   call $assembly/gen/spk/Spk#get:q
   local.set $Q
   block $assembly/gen/svf/Svf#_validate|inlined.5 (result i32)
    local.get $this|1
    local.set $this|4
    local.get $freq
    local.set $freq|5
    local.get $Q
    local.set $Q|6
    local.get $freq|5
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.5
    end
    local.get $freq|5
    local.get $freq|5
    f32.ne
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.5
    end
    local.get $Q|6
    f32.const 0
    f32.le
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.5
    end
    local.get $Q|6
    local.get $Q|6
    f32.ne
    if
     i32.const 0
     br $assembly/gen/svf/Svf#_validate|inlined.5
    end
    i32.const 1
    br $assembly/gen/svf/Svf#_validate|inlined.5
   end
   i32.eqz
   if
    br $assembly/gen/svf/Svf#_updateCoeffs|inlined.5
   end
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_params_freq
   local.get $freq
   call $assembly/util/paramClamp
   local.set $freq
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_params_Q
   local.get $Q
   call $assembly/util/paramClamp
   local.set $Q
   global.get $~lib/math/NativeMath.PI
   local.get $freq
   f64.promote_f32
   f64.mul
   local.get $this|1
   call $assembly/gen/gen/Gen#get:_engine
   call $assembly/core/engine/Engine#get:audioRate
   f64.convert_i32_u
   f64.div
   call $~lib/math/NativeMath.tan
   local.set $g
   local.get $this|1
   f64.const 2
   f64.const 2
   local.get $Q
   f64.promote_f32
   f64.mul
   f64.sub
   call $assembly/gen/svf/Svf#set:_k
   local.get $this|1
   f64.const 1
   f64.const 1
   local.get $g
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_k
   f64.add
   f64.mul
   f64.add
   f64.div
   call $assembly/gen/svf/Svf#set:_a1
   local.get $this|1
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_a1
   f64.mul
   call $assembly/gen/svf/Svf#set:_a2
   local.get $this|1
   local.get $g
   local.get $this|1
   call $assembly/gen/svf/Svf#get:_a2
   f64.mul
   call $assembly/gen/svf/Svf#set:_a3
  end
 )
 (func $assembly/gen/tanh/Tanh#get:gain (param $this i32) (result f32)
  local.get $this
  f32.load $0
 )
 (func $assembly/gen/tanh/Tanh#_update (param $this i32)
  local.get $this
  local.get $this
  call $assembly/gen/tanh/Tanh#get:gain
  f32x4.splat
  call $assembly/gen/tanh/Tanh#set:_gainv
 )
 (func $assembly/gen/tap/Tap#get:ms (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/gen/tap/Tap#get:_stepf (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=28
 )
 (func $assembly/gen/tap/Tap#get:_targetf (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=32
 )
 (func $assembly/gen/tap/Tap#_update (param $this i32)
  (local $value1 f32)
  (local $value2 f32)
  local.get $this
  block $~lib/math/NativeMathf.min|inlined.17 (result f32)
   global.get $assembly/core/constants/DELAY_MAX_SIZE
   f32.convert_i32_u
   f32.const 1
   f32.sub
   local.set $value1
   local.get $this
   call $assembly/gen/tap/Tap#get:ms
   f32.const 1.0000000474974513e-03
   f32.mul
   local.get $this
   call $assembly/gen/gen/Gen#get:_engine
   call $assembly/core/engine/Engine#get:rateStep
   f32.convert_i32_u
   f32.mul
   local.set $value2
   local.get $value1
   local.get $value2
   f32.min
   br $~lib/math/NativeMathf.min|inlined.17
  end
  call $assembly/gen/tap/Tap#set:_targetf
  local.get $this
  call $assembly/gen/tap/Tap#get:_stepf
  f32.const 0
  f32.eq
  if
   local.get $this
   local.get $this
   call $assembly/gen/tap/Tap#get:_targetf
   call $assembly/gen/tap/Tap#set:_stepf
  end
 )
 (func $assembly/gen/osc/Osc#get:hz (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/gen/osc/Osc#get:offset (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=16
 )
 (func $assembly/gen/osc/Osc#get:_lastTrig (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=32
 )
 (func $assembly/gen/osc/Osc#get:trig (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=12
 )
 (func $assembly/gen/osc/Osc#_update (param $this i32)
  local.get $this
  local.get $this
  call $assembly/gen/osc/Osc#get:hz
  f64.promote_f32
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:rateStep
  f64.convert_i32_u
  f64.mul
  f64.const 8
  f64.div
  i32.trunc_sat_f64_u
  call $assembly/gen/osc/Osc#set:_step
  local.get $this
  local.get $this
  call $assembly/gen/osc/Osc#get:offset
  f64.promote_f32
  f64.const 4294967295
  f64.mul
  i32.trunc_sat_f64_u
  call $assembly/gen/osc/Osc#set:_offsetU32
  local.get $this
  f32.const 0
  call $assembly/gen/osc/Osc#set:offset
  local.get $this
  call $assembly/gen/osc/Osc#get:_lastTrig
  local.get $this
  call $assembly/gen/osc/Osc#get:trig
  i32.trunc_sat_f32_s
  i32.ne
  if
   local.get $this
   i32.const 0
   call $assembly/gen/osc/Osc#set:_phase
  end
  local.get $this
  local.get $this
  call $assembly/gen/osc/Osc#get:trig
  i32.trunc_sat_f32_s
  call $assembly/gen/osc/Osc#set:_lastTrig
 )
 (func $assembly/gen/sample/Sample#get:offset (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/gen/sample/Sample#get:_mask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/gen/sample/Sample#get:_offsetCurrent (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=32
 )
 (func $assembly/gen/sample/Sample#get:_offsetTarget (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=40
 )
 (func $assembly/gen/sample/Sample#get:_lastTrig (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=48
 )
 (func $assembly/gen/sample/Sample#get:trig (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=12
 )
 (func $assembly/gen/sample/Sample#_update (param $this i32)
  local.get $this
  local.get $this
  call $assembly/gen/sample/Sample#get:offset
  f64.promote_f32
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:rateStep
  i32.const 2
  i32.shr_u
  f64.convert_i32_u
  f64.mul
  local.get $this
  call $assembly/gen/sample/Sample#get:_mask
  f64.convert_i32_u
  f64.add
  call $assembly/gen/sample/Sample#set:_offsetTarget
  local.get $this
  call $assembly/gen/sample/Sample#get:_offsetCurrent
  f64.const -1
  f64.eq
  if
   local.get $this
   local.get $this
   call $assembly/gen/sample/Sample#get:_offsetTarget
   call $assembly/gen/sample/Sample#set:_offsetCurrent
  end
  local.get $this
  f32.const 0
  call $assembly/gen/sample/Sample#set:offset
  local.get $this
  call $assembly/gen/sample/Sample#get:_lastTrig
  f32.const 0
  f32.ne
  if (result i32)
   local.get $this
   call $assembly/gen/sample/Sample#get:trig
   f32.const 0
   f32.eq
  else
   i32.const 0
  end
  if
   local.get $this
   i32.const 0
   call $assembly/gen/sample/Sample#set:_phase
  end
  local.get $this
  local.get $this
  call $assembly/gen/sample/Sample#get:trig
  call $assembly/gen/sample/Sample#set:_lastTrig
 )
 (func $assembly/core/engine/Engine#get:wavetable (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/core/wavetable/Wavetable#get:antialias (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=28
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:numOfTables (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=28
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#getTableIndex (param $this i32) (param $hz f32) (result i32)
  (local $tableIndex i32)
  i32.const 0
  local.set $tableIndex
  loop $while-continue|0
   local.get $hz
   local.get $this
   call $assembly/core/antialias-wavetable/AntialiasWavetable#get:freqs
   local.get $tableIndex
   call $~lib/staticarray/StaticArray<f32>#__get
   f32.ge
   if (result i32)
    local.get $tableIndex
    local.get $this
    call $assembly/core/antialias-wavetable/AntialiasWavetable#get:numOfTables
    i32.const 1
    i32.sub
    i32.lt_u
   else
    i32.const 0
   end
   if
    local.get $tableIndex
    i32.const 1
    i32.add
    local.set $tableIndex
    br $while-continue|0
   end
  end
  local.get $tableIndex
  return
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:stepShift (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=44
 )
 (func $assembly/gen/osc/Osc#get:_step (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/gen/aosc/AOsc#_update (param $this i32)
  (local $stepShift i32)
  local.get $this
  call $assembly/gen/osc/Osc#_update
  local.get $this
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  call $assembly/core/wavetable/Wavetable#get:antialias
  local.get $this
  call $assembly/gen/osc/Osc#get:hz
  call $assembly/core/antialias-wavetable/AntialiasWavetable#getTableIndex
  call $assembly/gen/aosc/AOsc#set:_tableIndex
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  call $assembly/core/wavetable/Wavetable#get:antialias
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:stepShift
  local.set $stepShift
  local.get $this
  local.get $stepShift
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $this
   call $assembly/gen/osc/Osc#get:_step
   i32.const 0
   local.get $stepShift
   i32.sub
   i32.shl
  else
   local.get $this
   call $assembly/gen/osc/Osc#get:_step
   local.get $stepShift
   i32.shr_u
  end
  call $assembly/gen/osc/Osc#set:_step
 )
 (func $assembly/gen/delay/Delay#get:_floats (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/gen/delay/Delay#_reset (param $this i32)
  local.get $this
  call $assembly/gen/delay/Delay#get:_floats
  f32.const 0
  i32.const 0
  global.get $assembly/core/constants/DELAY_MAX_SIZE
  call $~lib/staticarray/StaticArray<f32>#fill
  drop
 )
 (func $assembly/gen/clamp/Clamp#get:min (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/gen/clamp/Clamp#get:max (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=12
 )
 (func $assembly/gen/clamp/Clamp#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/gen/clamp/Clamp#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $min f32)
  (local $max f32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  local.get $this
  call $assembly/gen/clamp/Clamp#get:min
  local.set $min
  local.get $this
  call $assembly/gen/clamp/Clamp#get:max
  local.set $max
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/clamp/Clamp#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $max
    f32.gt
    if
     local.get $max
     local.set $sample
    else
     local.get $sample
     local.get $min
     f32.lt
     if
      local.get $min
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/clip/Clip#get:threshold (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/gen/clip/Clip#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/gen/clip/Clip#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $threshold f32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  local.get $this
  call $assembly/gen/clip/Clip#get:threshold
  local.set $threshold
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/clip/Clip#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/comp/Comp#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/gen/comp/Comp#get:_gainReduction (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=36
 )
 (func $assembly/gen/comp/Comp#get:threshold (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/gen/comp/Comp#get:ratio (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=12
 )
 (func $assembly/gen/comp/Comp#get:attack (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=16
 )
 (func $assembly/gen/comp/Comp#get:release (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=20
 )
 (func $assembly/gen/comp/Comp#get:sidechain (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=28
 )
 (func $assembly/gen/comp/Comp#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $sideSample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $diff f32)
  (local $targetReduction f32)
  (local $gainReduction f32)
  (local $threshold f32)
  (local $ratio f32)
  (local $attack f32)
  (local $release f32)
  (local $side i32)
  (local $x f32)
  (local $value1 f32)
  (local $value2 f32)
  (local $x|21 f32)
  (local $value1|22 f32)
  (local $value2|23 f32)
  (local $x|24 f32)
  (local $value1|25 f32)
  (local $value2|26 f32)
  (local $x|27 f32)
  (local $value1|28 f32)
  (local $value2|29 f32)
  (local $x|30 f32)
  (local $value1|31 f32)
  (local $value2|32 f32)
  (local $x|33 f32)
  (local $value1|34 f32)
  (local $value2|35 f32)
  (local $x|36 f32)
  (local $value1|37 f32)
  (local $value2|38 f32)
  (local $x|39 f32)
  (local $value1|40 f32)
  (local $value2|41 f32)
  (local $x|42 f32)
  (local $value1|43 f32)
  (local $value2|44 f32)
  (local $x|45 f32)
  (local $value1|46 f32)
  (local $value2|47 f32)
  (local $x|48 f32)
  (local $value1|49 f32)
  (local $value2|50 f32)
  (local $x|51 f32)
  (local $value1|52 f32)
  (local $value2|53 f32)
  (local $x|54 f32)
  (local $value1|55 f32)
  (local $value2|56 f32)
  (local $x|57 f32)
  (local $value1|58 f32)
  (local $value2|59 f32)
  (local $x|60 f32)
  (local $value1|61 f32)
  (local $value2|62 f32)
  (local $x|63 f32)
  (local $value1|64 f32)
  (local $value2|65 f32)
  (local $x|66 f32)
  (local $value1|67 f32)
  (local $value2|68 f32)
  (local $x|69 f32)
  (local $value1|70 f32)
  (local $value2|71 f32)
  (local $x|72 f32)
  (local $value1|73 f32)
  (local $value2|74 f32)
  (local $x|75 f32)
  (local $value1|76 f32)
  (local $value2|77 f32)
  (local $x|78 f32)
  (local $value1|79 f32)
  (local $value2|80 f32)
  (local $x|81 f32)
  (local $value1|82 f32)
  (local $value2|83 f32)
  (local $x|84 f32)
  (local $value1|85 f32)
  (local $value2|86 f32)
  (local $x|87 f32)
  (local $value1|88 f32)
  (local $value2|89 f32)
  (local $x|90 f32)
  (local $value1|91 f32)
  (local $value2|92 f32)
  (local $x|93 f32)
  (local $value1|94 f32)
  (local $value2|95 f32)
  (local $x|96 f32)
  (local $value1|97 f32)
  (local $value2|98 f32)
  (local $x|99 f32)
  (local $value1|100 f32)
  (local $value2|101 f32)
  (local $x|102 f32)
  (local $value1|103 f32)
  (local $value2|104 f32)
  (local $x|105 f32)
  (local $value1|106 f32)
  (local $value2|107 f32)
  (local $x|108 f32)
  (local $value1|109 f32)
  (local $value2|110 f32)
  (local $x|111 f32)
  (local $value1|112 f32)
  (local $value2|113 f32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  f32.const 0
  local.set $sideSample
  local.get $this
  call $assembly/gen/comp/Comp#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  local.get $this
  call $assembly/gen/comp/Comp#get:_gainReduction
  local.set $gainReduction
  local.get $this
  call $assembly/gen/comp/Comp#get:threshold
  local.set $threshold
  local.get $this
  call $assembly/gen/comp/Comp#get:ratio
  local.set $ratio
  local.get $this
  call $assembly/gen/comp/Comp#get:attack
  local.set $attack
  local.get $this
  call $assembly/gen/comp/Comp#get:release
  local.set $release
  local.get $this
  call $assembly/gen/comp/Comp#get:sidechain
  local.set $side
  local.get $side
  if
   local.get $side
   local.get $offset
   i32.add
   local.set $side
   loop $for-loop|0
    local.get $i
    local.get $end
    i32.lt_u
    if
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.16 (result f32)
      f32.const 0
      local.set $value1
      block $~lib/math/NativeMathf.abs|inlined.17 (result f32)
       local.get $sideSample
       local.set $x
       local.get $x
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.17
      end
      local.get $threshold
      f32.sub
      local.set $value2
      local.get $value1
      local.get $value2
      f32.max
      br $~lib/math/NativeMathf.max|inlined.16
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.17 (result f32)
      f32.const 0
      local.set $value1|22
      block $~lib/math/NativeMathf.abs|inlined.18 (result f32)
       local.get $sideSample
       local.set $x|21
       local.get $x|21
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.18
      end
      local.get $threshold
      f32.sub
      local.set $value2|23
      local.get $value1|22
      local.get $value2|23
      f32.max
      br $~lib/math/NativeMathf.max|inlined.17
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.18 (result f32)
      f32.const 0
      local.set $value1|25
      block $~lib/math/NativeMathf.abs|inlined.19 (result f32)
       local.get $sideSample
       local.set $x|24
       local.get $x|24
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.19
      end
      local.get $threshold
      f32.sub
      local.set $value2|26
      local.get $value1|25
      local.get $value2|26
      f32.max
      br $~lib/math/NativeMathf.max|inlined.18
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.19 (result f32)
      f32.const 0
      local.set $value1|28
      block $~lib/math/NativeMathf.abs|inlined.20 (result f32)
       local.get $sideSample
       local.set $x|27
       local.get $x|27
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.20
      end
      local.get $threshold
      f32.sub
      local.set $value2|29
      local.get $value1|28
      local.get $value2|29
      f32.max
      br $~lib/math/NativeMathf.max|inlined.19
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.20 (result f32)
      f32.const 0
      local.set $value1|31
      block $~lib/math/NativeMathf.abs|inlined.21 (result f32)
       local.get $sideSample
       local.set $x|30
       local.get $x|30
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.21
      end
      local.get $threshold
      f32.sub
      local.set $value2|32
      local.get $value1|31
      local.get $value2|32
      f32.max
      br $~lib/math/NativeMathf.max|inlined.20
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.21 (result f32)
      f32.const 0
      local.set $value1|34
      block $~lib/math/NativeMathf.abs|inlined.22 (result f32)
       local.get $sideSample
       local.set $x|33
       local.get $x|33
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.22
      end
      local.get $threshold
      f32.sub
      local.set $value2|35
      local.get $value1|34
      local.get $value2|35
      f32.max
      br $~lib/math/NativeMathf.max|inlined.21
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.22 (result f32)
      f32.const 0
      local.set $value1|37
      block $~lib/math/NativeMathf.abs|inlined.23 (result f32)
       local.get $sideSample
       local.set $x|36
       local.get $x|36
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.23
      end
      local.get $threshold
      f32.sub
      local.set $value2|38
      local.get $value1|37
      local.get $value2|38
      f32.max
      br $~lib/math/NativeMathf.max|inlined.22
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.23 (result f32)
      f32.const 0
      local.set $value1|40
      block $~lib/math/NativeMathf.abs|inlined.24 (result f32)
       local.get $sideSample
       local.set $x|39
       local.get $x|39
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.24
      end
      local.get $threshold
      f32.sub
      local.set $value2|41
      local.get $value1|40
      local.get $value2|41
      f32.max
      br $~lib/math/NativeMathf.max|inlined.23
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.24 (result f32)
      f32.const 0
      local.set $value1|43
      block $~lib/math/NativeMathf.abs|inlined.25 (result f32)
       local.get $sideSample
       local.set $x|42
       local.get $x|42
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.25
      end
      local.get $threshold
      f32.sub
      local.set $value2|44
      local.get $value1|43
      local.get $value2|44
      f32.max
      br $~lib/math/NativeMathf.max|inlined.24
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.25 (result f32)
      f32.const 0
      local.set $value1|46
      block $~lib/math/NativeMathf.abs|inlined.26 (result f32)
       local.get $sideSample
       local.set $x|45
       local.get $x|45
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.26
      end
      local.get $threshold
      f32.sub
      local.set $value2|47
      local.get $value1|46
      local.get $value2|47
      f32.max
      br $~lib/math/NativeMathf.max|inlined.25
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.26 (result f32)
      f32.const 0
      local.set $value1|49
      block $~lib/math/NativeMathf.abs|inlined.27 (result f32)
       local.get $sideSample
       local.set $x|48
       local.get $x|48
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.27
      end
      local.get $threshold
      f32.sub
      local.set $value2|50
      local.get $value1|49
      local.get $value2|50
      f32.max
      br $~lib/math/NativeMathf.max|inlined.26
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.27 (result f32)
      f32.const 0
      local.set $value1|52
      block $~lib/math/NativeMathf.abs|inlined.28 (result f32)
       local.get $sideSample
       local.set $x|51
       local.get $x|51
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.28
      end
      local.get $threshold
      f32.sub
      local.set $value2|53
      local.get $value1|52
      local.get $value2|53
      f32.max
      br $~lib/math/NativeMathf.max|inlined.27
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.28 (result f32)
      f32.const 0
      local.set $value1|55
      block $~lib/math/NativeMathf.abs|inlined.29 (result f32)
       local.get $sideSample
       local.set $x|54
       local.get $x|54
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.29
      end
      local.get $threshold
      f32.sub
      local.set $value2|56
      local.get $value1|55
      local.get $value2|56
      f32.max
      br $~lib/math/NativeMathf.max|inlined.28
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.29 (result f32)
      f32.const 0
      local.set $value1|58
      block $~lib/math/NativeMathf.abs|inlined.30 (result f32)
       local.get $sideSample
       local.set $x|57
       local.get $x|57
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.30
      end
      local.get $threshold
      f32.sub
      local.set $value2|59
      local.get $value1|58
      local.get $value2|59
      f32.max
      br $~lib/math/NativeMathf.max|inlined.29
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.30 (result f32)
      f32.const 0
      local.set $value1|61
      block $~lib/math/NativeMathf.abs|inlined.31 (result f32)
       local.get $sideSample
       local.set $x|60
       local.get $x|60
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.31
      end
      local.get $threshold
      f32.sub
      local.set $value2|62
      local.get $value1|61
      local.get $value2|62
      f32.max
      br $~lib/math/NativeMathf.max|inlined.30
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $inp
     f32.load $0
     local.set $sample
     local.get $side
     f32.load $0
     local.set $sideSample
     block $~lib/math/NativeMathf.max|inlined.31 (result f32)
      f32.const 0
      local.set $value1|64
      block $~lib/math/NativeMathf.abs|inlined.32 (result f32)
       local.get $sideSample
       local.set $x|63
       local.get $x|63
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.32
      end
      local.get $threshold
      f32.sub
      local.set $value2|65
      local.get $value1|64
      local.get $value2|65
      f32.max
      br $~lib/math/NativeMathf.max|inlined.31
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $side
     i32.const 4
     i32.add
     local.set $side
     local.get $i
     i32.const 16
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
  else
   loop $for-loop|1
    local.get $i
    local.get $end
    i32.lt_u
    if
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.32 (result f32)
      f32.const 0
      local.set $value1|67
      block $~lib/math/NativeMathf.abs|inlined.33 (result f32)
       local.get $sample
       local.set $x|66
       local.get $x|66
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.33
      end
      local.get $threshold
      f32.sub
      local.set $value2|68
      local.get $value1|67
      local.get $value2|68
      f32.max
      br $~lib/math/NativeMathf.max|inlined.32
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.33 (result f32)
      f32.const 0
      local.set $value1|70
      block $~lib/math/NativeMathf.abs|inlined.34 (result f32)
       local.get $sample
       local.set $x|69
       local.get $x|69
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.34
      end
      local.get $threshold
      f32.sub
      local.set $value2|71
      local.get $value1|70
      local.get $value2|71
      f32.max
      br $~lib/math/NativeMathf.max|inlined.33
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.34 (result f32)
      f32.const 0
      local.set $value1|73
      block $~lib/math/NativeMathf.abs|inlined.35 (result f32)
       local.get $sample
       local.set $x|72
       local.get $x|72
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.35
      end
      local.get $threshold
      f32.sub
      local.set $value2|74
      local.get $value1|73
      local.get $value2|74
      f32.max
      br $~lib/math/NativeMathf.max|inlined.34
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.35 (result f32)
      f32.const 0
      local.set $value1|76
      block $~lib/math/NativeMathf.abs|inlined.36 (result f32)
       local.get $sample
       local.set $x|75
       local.get $x|75
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.36
      end
      local.get $threshold
      f32.sub
      local.set $value2|77
      local.get $value1|76
      local.get $value2|77
      f32.max
      br $~lib/math/NativeMathf.max|inlined.35
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.36 (result f32)
      f32.const 0
      local.set $value1|79
      block $~lib/math/NativeMathf.abs|inlined.37 (result f32)
       local.get $sample
       local.set $x|78
       local.get $x|78
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.37
      end
      local.get $threshold
      f32.sub
      local.set $value2|80
      local.get $value1|79
      local.get $value2|80
      f32.max
      br $~lib/math/NativeMathf.max|inlined.36
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.37 (result f32)
      f32.const 0
      local.set $value1|82
      block $~lib/math/NativeMathf.abs|inlined.38 (result f32)
       local.get $sample
       local.set $x|81
       local.get $x|81
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.38
      end
      local.get $threshold
      f32.sub
      local.set $value2|83
      local.get $value1|82
      local.get $value2|83
      f32.max
      br $~lib/math/NativeMathf.max|inlined.37
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.38 (result f32)
      f32.const 0
      local.set $value1|85
      block $~lib/math/NativeMathf.abs|inlined.39 (result f32)
       local.get $sample
       local.set $x|84
       local.get $x|84
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.39
      end
      local.get $threshold
      f32.sub
      local.set $value2|86
      local.get $value1|85
      local.get $value2|86
      f32.max
      br $~lib/math/NativeMathf.max|inlined.38
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.39 (result f32)
      f32.const 0
      local.set $value1|88
      block $~lib/math/NativeMathf.abs|inlined.40 (result f32)
       local.get $sample
       local.set $x|87
       local.get $x|87
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.40
      end
      local.get $threshold
      f32.sub
      local.set $value2|89
      local.get $value1|88
      local.get $value2|89
      f32.max
      br $~lib/math/NativeMathf.max|inlined.39
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.40 (result f32)
      f32.const 0
      local.set $value1|91
      block $~lib/math/NativeMathf.abs|inlined.41 (result f32)
       local.get $sample
       local.set $x|90
       local.get $x|90
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.41
      end
      local.get $threshold
      f32.sub
      local.set $value2|92
      local.get $value1|91
      local.get $value2|92
      f32.max
      br $~lib/math/NativeMathf.max|inlined.40
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.41 (result f32)
      f32.const 0
      local.set $value1|94
      block $~lib/math/NativeMathf.abs|inlined.42 (result f32)
       local.get $sample
       local.set $x|93
       local.get $x|93
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.42
      end
      local.get $threshold
      f32.sub
      local.set $value2|95
      local.get $value1|94
      local.get $value2|95
      f32.max
      br $~lib/math/NativeMathf.max|inlined.41
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.42 (result f32)
      f32.const 0
      local.set $value1|97
      block $~lib/math/NativeMathf.abs|inlined.43 (result f32)
       local.get $sample
       local.set $x|96
       local.get $x|96
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.43
      end
      local.get $threshold
      f32.sub
      local.set $value2|98
      local.get $value1|97
      local.get $value2|98
      f32.max
      br $~lib/math/NativeMathf.max|inlined.42
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.43 (result f32)
      f32.const 0
      local.set $value1|100
      block $~lib/math/NativeMathf.abs|inlined.44 (result f32)
       local.get $sample
       local.set $x|99
       local.get $x|99
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.44
      end
      local.get $threshold
      f32.sub
      local.set $value2|101
      local.get $value1|100
      local.get $value2|101
      f32.max
      br $~lib/math/NativeMathf.max|inlined.43
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.44 (result f32)
      f32.const 0
      local.set $value1|103
      block $~lib/math/NativeMathf.abs|inlined.45 (result f32)
       local.get $sample
       local.set $x|102
       local.get $x|102
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.45
      end
      local.get $threshold
      f32.sub
      local.set $value2|104
      local.get $value1|103
      local.get $value2|104
      f32.max
      br $~lib/math/NativeMathf.max|inlined.44
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.45 (result f32)
      f32.const 0
      local.set $value1|106
      block $~lib/math/NativeMathf.abs|inlined.46 (result f32)
       local.get $sample
       local.set $x|105
       local.get $x|105
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.46
      end
      local.get $threshold
      f32.sub
      local.set $value2|107
      local.get $value1|106
      local.get $value2|107
      f32.max
      br $~lib/math/NativeMathf.max|inlined.45
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.46 (result f32)
      f32.const 0
      local.set $value1|109
      block $~lib/math/NativeMathf.abs|inlined.47 (result f32)
       local.get $sample
       local.set $x|108
       local.get $x|108
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.47
      end
      local.get $threshold
      f32.sub
      local.set $value2|110
      local.get $value1|109
      local.get $value2|110
      f32.max
      br $~lib/math/NativeMathf.max|inlined.46
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $inp
     f32.load $0
     local.set $sample
     block $~lib/math/NativeMathf.max|inlined.47 (result f32)
      f32.const 0
      local.set $value1|112
      block $~lib/math/NativeMathf.abs|inlined.48 (result f32)
       local.get $sample
       local.set $x|111
       local.get $x|111
       f32.abs
       br $~lib/math/NativeMathf.abs|inlined.48
      end
      local.get $threshold
      f32.sub
      local.set $value2|113
      local.get $value1|112
      local.get $value2|113
      f32.max
      br $~lib/math/NativeMathf.max|inlined.47
     end
     local.get $ratio
     f32.mul
     local.set $diff
     local.get $diff
     local.set $targetReduction
     local.get $targetReduction
     local.get $gainReduction
     f32.gt
     if
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $attack
      f32.mul
      f32.add
      local.set $gainReduction
     else
      local.get $gainReduction
      local.get $targetReduction
      local.get $gainReduction
      f32.sub
      local.get $release
      f32.mul
      f32.add
      local.set $gainReduction
     end
     local.get $sample
     f32.const 1
     local.get $gainReduction
     f32.sub
     f32.mul
     local.set $sample
     local.get $out
     local.get $sample
     f32.store $0
     local.get $inp
     i32.const 4
     i32.add
     local.set $inp
     local.get $out
     i32.const 4
     i32.add
     local.set $out
     local.get $i
     i32.const 16
     i32.add
     local.set $i
     br $for-loop|1
    end
   end
  end
  local.get $this
  local.get $gainReduction
  call $assembly/gen/comp/Comp#set:_gainReduction
 )
 (func $assembly/gen/daverb/Daverb#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/gen/daverb/Daverb#get:_mask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=164
 )
 (func $assembly/gen/daverb/Daverb#get:_index (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=160
 )
 (func $assembly/gen/daverb/Daverb#get:_lp1 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=168
 )
 (func $assembly/gen/daverb/Daverb#get:_lp2 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=172
 )
 (func $assembly/gen/daverb/Daverb#get:_lp3 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=176
 )
 (func $assembly/gen/daverb/Daverb#get:_excPhase (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=180
 )
 (func $assembly/gen/daverb/Daverb#get:_predelay (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=108
 )
 (func $assembly/gen/daverb/Daverb#get:bw (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=16
 )
 (func $assembly/gen/daverb/Daverb#get:_pdn (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=104
 )
 (func $assembly/util/cubic (param $floats i32) (param $index f32) (param $mask i32) (result f32)
  (local $i i32)
  (local $fr f32)
  (local $xm f32)
  (local $x0 f32)
  (local $x1 f32)
  (local $x2 f32)
  (local $a f32)
  (local $b f32)
  (local $c f32)
  local.get $index
  local.get $mask
  f32.convert_i32_u
  f32.add
  local.set $index
  local.get $index
  i32.trunc_sat_f32_u
  local.set $i
  local.get $index
  local.get $i
  f32.convert_i32_s
  f32.sub
  local.set $fr
  local.get $floats
  local.get $i
  i32.const 1
  i32.sub
  local.get $mask
  i32.and
  call $~lib/staticarray/StaticArray<f32>#__get
  local.set $xm
  local.get $floats
  local.get $i
  local.get $mask
  i32.and
  call $~lib/staticarray/StaticArray<f32>#__get
  local.set $x0
  local.get $floats
  local.get $i
  i32.const 1
  i32.add
  local.get $mask
  i32.and
  call $~lib/staticarray/StaticArray<f32>#__get
  local.set $x1
  local.get $floats
  local.get $i
  i32.const 2
  i32.add
  local.get $mask
  i32.and
  call $~lib/staticarray/StaticArray<f32>#__get
  local.set $x2
  f32.const 3
  local.get $x0
  local.get $x1
  f32.sub
  f32.mul
  local.get $xm
  f32.sub
  local.get $x2
  f32.add
  f32.const 0.5
  f32.mul
  local.set $a
  f32.const 2
  local.get $x1
  f32.mul
  local.get $xm
  f32.add
  f32.const 5
  local.get $x0
  f32.mul
  local.get $x2
  f32.add
  f32.const 0.5
  f32.mul
  f32.sub
  local.set $b
  local.get $x1
  local.get $xm
  f32.sub
  f32.const 0.5
  f32.mul
  local.set $c
  local.get $a
  local.get $fr
  f32.mul
  local.get $b
  f32.add
  local.get $fr
  f32.mul
  local.get $c
  f32.add
  local.get $fr
  f32.mul
  local.get $x0
  f32.add
  return
 )
 (func $assembly/gen/daverb/Daverb#get:fi (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=20
 )
 (func $assembly/gen/daverb/Daverb#get:_d0 (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=112
 )
 (func $assembly/gen/daverb/Daverb#get:_d1 (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=116
 )
 (func $assembly/gen/daverb/Daverb#get:si (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=24
 )
 (func $assembly/gen/daverb/Daverb#get:_d2 (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=120
 )
 (func $assembly/gen/daverb/Daverb#get:_d3 (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=124
 )
 (func $assembly/gen/daverb/Daverb#get:_edn (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=100
 )
 (func $assembly/core/wavetable/Wavetable#get:mask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
 )
 (func $assembly/core/wavetable/Wavetable#readAt (param $this i32) (param $wavetable i32) (param $phase i32) (result f32)
  (local $mask i32)
  (local $table i32)
  (local $pos i32)
  (local $masked i32)
  (local $index i32)
  (local $a f32)
  (local $b f32)
  (local $d f32)
  (local $phase|11 i32)
  (local $u i32)
  (local $frac f32)
  (local $sample f32)
  local.get $this
  call $assembly/core/wavetable/Wavetable#get:mask
  local.set $mask
  local.get $wavetable
  local.set $table
  local.get $phase
  i32.const 14
  i32.shr_u
  local.set $pos
  local.get $pos
  local.get $mask
  i32.and
  local.set $masked
  local.get $table
  local.get $masked
  i32.add
  local.set $index
  local.get $index
  f32.load $0
  local.set $a
  local.get $index
  f32.load $0 offset=4
  local.set $b
  local.get $b
  local.get $a
  f32.sub
  local.set $d
  block $assembly/util/phaseFrac|inlined.0 (result f32)
   local.get $phase
   local.set $phase|11
   i32.const 1065353216
   i32.const 8388480
   local.get $phase|11
   i32.and
   i32.const 7
   i32.shl
   i32.or
   local.set $u
   local.get $u
   f32.reinterpret_i32
   f32.const 1
   f32.sub
   br $assembly/util/phaseFrac|inlined.0
  end
  local.set $frac
  local.get $a
  local.get $frac
  local.get $d
  f32.mul
  f32.add
  local.set $sample
  local.get $sample
  return
 )
 (func $assembly/gen/daverb/Daverb#get:_d4 (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=128
 )
 (func $assembly/gen/daverb/Daverb#get:dc (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=28
 )
 (func $assembly/gen/daverb/Daverb#get:_d11 (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=156
 )
 (func $assembly/gen/daverb/Daverb#get:ft (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=32
 )
 (func $assembly/gen/daverb/Daverb#get:_d5 (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=132
 )
 (func $assembly/gen/daverb/Daverb#get:_dpn (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=92
 )
 (func $assembly/gen/daverb/Daverb#get:st (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=36
 )
 (func $assembly/gen/daverb/Daverb#get:_d6 (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=136
 )
 (func $assembly/gen/daverb/Daverb#get:_d7 (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=140
 )
 (func $assembly/gen/daverb/Daverb#get:_d8 (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=144
 )
 (func $assembly/gen/daverb/Daverb#get:_d9 (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=148
 )
 (func $assembly/gen/daverb/Daverb#get:_d10 (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=152
 )
 (func $assembly/gen/daverb/Daverb#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $mask i32)
  (local $p i32)
  (local $pm i32)
  (local $lp1 f32)
  (local $lp2 f32)
  (local $lp3 f32)
  (local $split f32)
  (local $exc_phase i32)
  (local $exc f32)
  (local $lo f32)
  (local $ro f32)
  (local $d4p f32)
  (local $d8p f32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/daverb/Daverb#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  local.get $this
  call $assembly/gen/daverb/Daverb#get:_mask
  local.set $mask
  local.get $this
  call $assembly/gen/daverb/Daverb#get:_index
  local.set $p
  local.get $p
  i32.const 1
  i32.sub
  local.set $pm
  local.get $this
  call $assembly/gen/daverb/Daverb#get:_lp1
  local.set $lp1
  local.get $this
  call $assembly/gen/daverb/Daverb#get:_lp2
  local.set $lp2
  local.get $this
  call $assembly/gen/daverb/Daverb#get:_lp3
  local.set $lp3
  f32.const 0
  local.set $split
  local.get $this
  call $assembly/gen/daverb/Daverb#get:_excPhase
  local.set $exc_phase
  f32.const 0
  local.set $exc
  f32.const 0
  local.set $lo
  f32.const 0
  local.set $ro
  f32.const 0
  local.set $d4p
  f32.const 0
  local.set $d8p
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    local.get $mask
    i32.and
    local.get $sample
    f32.const 0.5
    f32.mul
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:bw
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_predelay
    local.get $p
    f32.convert_i32_s
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_pdn
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.get $lp1
    f32.sub
    f32.mul
    f32.add
    local.set $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    local.get $lp1
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $p
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d0
    local.get $pm
    global.get $assembly/gen/daverb/md0
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:fi
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $p
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d1
    local.get $pm
    global.get $assembly/gen/daverb/md1
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $p
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d2
    local.get $pm
    global.get $assembly/gen/daverb/md2
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:si
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $p
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d3
    local.get $pm
    global.get $assembly/gen/daverb/md3
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.set $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_edn
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:wavetable
    call $assembly/core/wavetable/Wavetable#get:sine
    local.get $exc_phase
    call $assembly/core/wavetable/Wavetable#readAt
    f32.mul
    local.set $exc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md4
    call $assembly/util/cubic
    local.set $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $pm
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d4p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/md5
    i32.and
    local.get $d4p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d4
    local.get $p
    global.get $assembly/gen/daverb/md4
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $pm
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $lp2
    f32.sub
    f32.mul
    f32.add
    local.set $lp2
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp2
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/md7
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $pm
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    f32.convert_i32_s
    local.get $exc
    f32.sub
    global.get $assembly/gen/daverb/md8
    call $assembly/util/cubic
    local.set $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    local.get $split
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $pm
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $d8p
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/md9
    i32.and
    local.get $d8p
    local.get $this
    call $assembly/gen/daverb/Daverb#get:ft
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d8
    local.get $p
    global.get $assembly/gen/daverb/md8
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_dpn
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $pm
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    local.get $lp3
    f32.sub
    f32.add
    local.set $lp3
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:dc
    local.get $lp3
    f32.mul
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.sub
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/md11
    i32.and
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $pm
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:st
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $exc_phase
    local.get $this
    call $assembly/gen/gen/Gen#get:_engine
    call $assembly/core/engine/Engine#get:rateStep
    i32.add
    local.set $exc_phase
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo0
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/lo1
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/lo2
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/lo3
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/lo4
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/lo5
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/lo6
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $lo
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro0
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d5
    local.get $p
    global.get $assembly/gen/daverb/ro1
    i32.sub
    global.get $assembly/gen/daverb/md5
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d6
    local.get $p
    global.get $assembly/gen/daverb/ro2
    i32.sub
    global.get $assembly/gen/daverb/md6
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d7
    local.get $p
    global.get $assembly/gen/daverb/ro3
    i32.sub
    global.get $assembly/gen/daverb/md7
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.add
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d9
    local.get $p
    global.get $assembly/gen/daverb/ro4
    i32.sub
    global.get $assembly/gen/daverb/md9
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d10
    local.get $p
    global.get $assembly/gen/daverb/ro5
    i32.sub
    global.get $assembly/gen/daverb/md10
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.get $this
    call $assembly/gen/daverb/Daverb#get:_d11
    local.get $p
    global.get $assembly/gen/daverb/ro6
    i32.sub
    global.get $assembly/gen/daverb/md11
    i32.and
    call $~lib/staticarray/StaticArray<f32>#__get
    f32.sub
    local.set $ro
    local.get $lo
    local.get $ro
    f32.add
    f32.const 0.5
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $p
    i32.const 1
    i32.add
    local.set $p
    local.get $pm
    i32.const 1
    i32.add
    local.set $pm
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.get $p
  local.get $mask
  i32.and
  call $assembly/gen/daverb/Daverb#set:_index
  local.get $this
  local.get $exc_phase
  i32.const 1
  i32.rem_u
  call $assembly/gen/daverb/Daverb#set:_excPhase
  local.get $this
  local.get $lp1
  call $assembly/gen/daverb/Daverb#set:_lp1
  local.get $this
  local.get $lp2
  call $assembly/gen/daverb/Daverb#set:_lp2
  local.get $this
  local.get $lp3
  call $assembly/gen/daverb/Daverb#set:_lp3
 )
 (func $assembly/gen/dc/Dc#get:ceil (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/gen/dc/Dc#get:sample (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=16
 )
 (func $assembly/gen/dc/Dc#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/gen/dc/Dc#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $ceil f32)
  (local $prev f32)
  (local $sample f32)
  (local $next f32)
  (local $diff f32)
  (local $abs f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $x f32)
  (local $x|15 f32)
  (local $x|16 f32)
  (local $x|17 f32)
  (local $x|18 f32)
  (local $x|19 f32)
  (local $x|20 f32)
  (local $x|21 f32)
  (local $x|22 f32)
  (local $x|23 f32)
  (local $x|24 f32)
  (local $x|25 f32)
  (local $x|26 f32)
  (local $x|27 f32)
  (local $x|28 f32)
  (local $x|29 f32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  local.get $this
  call $assembly/gen/dc/Dc#get:ceil
  local.set $ceil
  local.get $this
  call $assembly/gen/dc/Dc#get:sample
  local.set $prev
  f32.const 0
  local.set $sample
  f32.const 0
  local.set $next
  f32.const 0
  local.set $diff
  f32.const 0
  local.set $abs
  local.get $this
  call $assembly/gen/dc/Dc#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.49 (result f32)
     local.get $diff
     local.set $x
     local.get $x
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.49
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.50 (result f32)
     local.get $diff
     local.set $x|15
     local.get $x|15
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.50
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.51 (result f32)
     local.get $diff
     local.set $x|16
     local.get $x|16
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.51
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.52 (result f32)
     local.get $diff
     local.set $x|17
     local.get $x|17
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.52
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.53 (result f32)
     local.get $diff
     local.set $x|18
     local.get $x|18
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.53
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.54 (result f32)
     local.get $diff
     local.set $x|19
     local.get $x|19
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.54
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.55 (result f32)
     local.get $diff
     local.set $x|20
     local.get $x|20
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.55
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.56 (result f32)
     local.get $diff
     local.set $x|21
     local.get $x|21
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.56
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.57 (result f32)
     local.get $diff
     local.set $x|22
     local.get $x|22
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.57
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.58 (result f32)
     local.get $diff
     local.set $x|23
     local.get $x|23
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.58
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.59 (result f32)
     local.get $diff
     local.set $x|24
     local.get $x|24
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.59
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.60 (result f32)
     local.get $diff
     local.set $x|25
     local.get $x|25
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.60
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.61 (result f32)
     local.get $diff
     local.set $x|26
     local.get $x|26
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.61
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.62 (result f32)
     local.get $diff
     local.set $x|27
     local.get $x|27
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.62
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.63 (result f32)
     local.get $diff
     local.set $x|28
     local.get $x|28
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.63
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $prev
    f32.sub
    local.set $diff
    block $~lib/math/NativeMathf.abs|inlined.64 (result f32)
     local.get $diff
     local.set $x|29
     local.get $x|29
     f32.abs
     br $~lib/math/NativeMathf.abs|inlined.64
    end
    local.set $abs
    local.get $abs
    local.get $ceil
    f32.gt
    if
     local.get $prev
     local.get $diff
     local.get $abs
     local.get $ceil
     f32.sub
     f32.mul
     f32.add
     local.set $next
    else
     local.get $sample
     local.set $next
    end
    local.get $next
    local.set $prev
    local.get $out
    local.get $next
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.get $prev
  call $assembly/gen/dc/Dc#set:sample
 )
 (func $assembly/gen/dclip/Dclip#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/gen/dclip/Dclip#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/dclip/Dclip#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f32.const 0
    f32.gt
    if (result f32)
     local.get $sample
    else
     f32.const 0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/dclipexp/Dclipexp#get:factor (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/gen/dclipexp/Dclipexp#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/gen/dclipexp/Dclipexp#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $factor f32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  local.get $this
  call $assembly/gen/dclipexp/Dclipexp#get:factor
  local.set $factor
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/dclipexp/Dclipexp#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    f64.promote_f32
    local.get $factor
    f64.promote_f32
    f64.div
    call $~lib/math/NativeMath.exp
    f64.const 1
    f64.sub
    f32.demote_f64
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/dcliplin/Dcliplin#get:threshold (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/gen/dcliplin/Dcliplin#get:factor (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=12
 )
 (func $assembly/gen/dcliplin/Dcliplin#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/gen/dcliplin/Dcliplin#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $threshold f32)
  (local $factor f32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  local.get $this
  call $assembly/gen/dcliplin/Dcliplin#get:threshold
  local.set $threshold
  local.get $this
  call $assembly/gen/dcliplin/Dcliplin#get:factor
  local.set $factor
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/dcliplin/Dcliplin#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $sample
    local.get $threshold
    f32.gt
    if
     local.get $threshold
     local.get $sample
     local.get $threshold
     f32.sub
     local.get $factor
     f32.mul
     f32.add
     local.set $sample
    else
     local.get $sample
     local.get $threshold
     f32.neg
     f32.lt
     if
      local.get $threshold
      f32.neg
      local.get $sample
      local.get $threshold
      f32.add
      local.get $factor
      f32.mul
      f32.add
      local.set $sample
     end
    end
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/delay/Delay#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/gen/delay/Delay#get:_mask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/gen/delay/Delay#get:_index (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=28
 )
 (func $assembly/gen/delay/Delay#get:fb (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=12
 )
 (func $assembly/gen/delay/Delay#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $mask i32)
  (local $index i32)
  (local $fb f32)
  (local $delay f32)
  (local $stepf f32)
  (local $targetf f32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/delay/Delay#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  local.get $this
  call $assembly/gen/delay/Delay#get:_mask
  local.set $mask
  local.get $this
  call $assembly/gen/delay/Delay#get:_index
  local.set $index
  local.get $this
  call $assembly/gen/delay/Delay#get:fb
  local.set $fb
  f32.const 0
  local.set $delay
  local.get $this
  call $assembly/gen/delay/Delay#get:_stepf
  local.set $stepf
  local.get $this
  call $assembly/gen/delay/Delay#get:_targetf
  local.set $targetf
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/delay/Delay#get:_floats
    local.get $index
    local.get $sample
    local.get $delay
    local.get $fb
    f32.mul
    f32.add
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.get $index
  call $assembly/gen/delay/Delay#set:_index
  local.get $this
  local.get $stepf
  call $assembly/gen/delay/Delay#set:_stepf
 )
 (func $assembly/gen/diode/Diode#get:_A (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=48
 )
 (func $assembly/gen/diode/Diode#get:_a (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=52
 )
 (func $assembly/gen/diode/Diode#get:_a2 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=56
 )
 (func $assembly/gen/diode/Diode#get:_b (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=60
 )
 (func $assembly/gen/diode/Diode#get:_b2 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=64
 )
 (func $assembly/gen/diode/Diode#get:_c (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=68
 )
 (func $assembly/gen/diode/Diode#get:_g (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=72
 )
 (func $assembly/gen/diode/Diode#get:_g0 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=76
 )
 (func $assembly/gen/diode/Diode#get:_ah (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=80
 )
 (func $assembly/gen/diode/Diode#get:_bh (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=84
 )
 (func $assembly/gen/diode/Diode#get:_ainv (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=88
 )
 (func $assembly/gen/diode/Diode#get:sat (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=16
 )
 (func $assembly/gen/diode/Diode#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/gen/diode/Diode#get:_z0 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=28
 )
 (func $assembly/gen/diode/Diode#get:_z1 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=32
 )
 (func $assembly/gen/diode/Diode#get:_z2 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=36
 )
 (func $assembly/gen/diode/Diode#get:_z3 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=40
 )
 (func $assembly/gen/diode/Diode#get:_z4 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=44
 )
 (func $assembly/gen/diode/soft (param $x f32) (param $amount f32) (result f32)
  (local $x|2 f32)
  local.get $x
  f32.const 1
  local.get $amount
  f32.div
  block $~lib/math/NativeMathf.abs|inlined.65 (result f32)
   local.get $x
   local.set $x|2
   local.get $x|2
   f32.abs
   br $~lib/math/NativeMathf.abs|inlined.65
  end
  f32.add
  f32.div
  return
 )
 (func $assembly/gen/diode/Diode#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $A f32)
  (local $a f32)
  (local $a2 f32)
  (local $b f32)
  (local $b2 f32)
  (local $c f32)
  (local $g f32)
  (local $g0 f32)
  (local $ah f32)
  (local $bh f32)
  (local $ainv f32)
  (local $k f32)
  (local $sat f32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $z0 f32)
  (local $z1 f32)
  (local $z2 f32)
  (local $z3 f32)
  (local $z4 f32)
  (local $s0 f32)
  (local $s f32)
  (local $y0 f32)
  (local $y1 f32)
  (local $y2 f32)
  (local $y3 f32)
  (local $y4 f32)
  (local $y5 f32)
  local.get $this
  call $assembly/gen/diode/Diode#get:_A
  local.set $A
  local.get $this
  call $assembly/gen/diode/Diode#get:_a
  local.set $a
  local.get $this
  call $assembly/gen/diode/Diode#get:_a2
  local.set $a2
  local.get $this
  call $assembly/gen/diode/Diode#get:_b
  local.set $b
  local.get $this
  call $assembly/gen/diode/Diode#get:_b2
  local.set $b2
  local.get $this
  call $assembly/gen/diode/Diode#get:_c
  local.set $c
  local.get $this
  call $assembly/gen/diode/Diode#get:_g
  local.set $g
  local.get $this
  call $assembly/gen/diode/Diode#get:_g0
  local.set $g0
  local.get $this
  call $assembly/gen/diode/Diode#get:_ah
  local.set $ah
  local.get $this
  call $assembly/gen/diode/Diode#get:_bh
  local.set $bh
  local.get $this
  call $assembly/gen/diode/Diode#get:_ainv
  local.set $ainv
  local.get $this
  call $assembly/gen/diode/Diode#get:_k
  local.set $k
  local.get $this
  call $assembly/gen/diode/Diode#get:sat
  local.set $sat
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/diode/Diode#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  local.get $this
  call $assembly/gen/diode/Diode#get:_z0
  local.set $z0
  local.get $this
  call $assembly/gen/diode/Diode#get:_z1
  local.set $z1
  local.get $this
  call $assembly/gen/diode/Diode#get:_z2
  local.set $z2
  local.get $this
  call $assembly/gen/diode/Diode#get:_z3
  local.set $z3
  local.get $this
  call $assembly/gen/diode/Diode#get:_z4
  local.set $z4
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $a2
    local.get $a
    f32.mul
    local.get $z0
    f32.mul
    local.get $a2
    local.get $b
    f32.mul
    local.get $z1
    f32.mul
    f32.add
    local.get $z2
    local.get $b2
    f32.const 2
    local.get $a2
    f32.mul
    f32.sub
    f32.mul
    local.get $a
    f32.mul
    f32.add
    local.get $z3
    local.get $b2
    f32.const 3
    local.get $a2
    f32.mul
    f32.sub
    f32.mul
    local.get $b
    f32.mul
    f32.add
    local.get $c
    f32.mul
    local.set $s0
    local.get $bh
    local.get $s0
    f32.mul
    local.get $z4
    f32.sub
    local.set $s
    local.get $g
    local.get $sample
    f32.mul
    local.get $s
    f32.add
    f32.const 1
    local.get $g
    local.get $k
    f32.mul
    f32.add
    f32.div
    local.set $y5
    local.get $sample
    local.get $k
    local.get $y5
    f32.mul
    f32.sub
    local.get $sat
    call $assembly/gen/diode/soft
    local.set $y0
    local.get $g
    local.get $y0
    f32.mul
    local.get $s
    f32.add
    local.set $y5
    local.get $g0
    local.get $y0
    f32.mul
    local.get $s0
    f32.add
    local.set $y4
    local.get $b
    local.get $y4
    f32.mul
    local.get $z3
    f32.sub
    local.get $ainv
    f32.mul
    local.set $y3
    local.get $b
    local.get $y3
    f32.mul
    local.get $a
    local.get $y4
    f32.mul
    f32.sub
    local.get $z2
    f32.sub
    local.get $ainv
    f32.mul
    local.set $y2
    local.get $b
    local.get $y2
    f32.mul
    local.get $a
    local.get $y3
    f32.mul
    f32.sub
    local.get $z1
    f32.sub
    local.get $ainv
    f32.mul
    local.set $y1
    local.get $z0
    f32.const 4
    local.get $a
    f32.mul
    local.get $y0
    local.get $y1
    f32.sub
    local.get $y2
    f32.add
    f32.mul
    f32.add
    local.set $z0
    local.get $z1
    f32.const 2
    local.get $a
    f32.mul
    local.get $y1
    f32.const 2
    local.get $y2
    f32.mul
    f32.sub
    local.get $y3
    f32.add
    f32.mul
    f32.add
    local.set $z1
    local.get $z2
    f32.const 2
    local.get $a
    f32.mul
    local.get $y2
    f32.const 2
    local.get $y3
    f32.mul
    f32.sub
    local.get $y4
    f32.add
    f32.mul
    f32.add
    local.set $z2
    local.get $z3
    f32.const 2
    local.get $a
    f32.mul
    local.get $y3
    f32.const 2
    local.get $y4
    f32.mul
    f32.sub
    f32.mul
    f32.add
    local.set $z3
    local.get $bh
    local.get $y4
    f32.mul
    local.get $ah
    local.get $y5
    f32.mul
    f32.add
    local.set $z4
    local.get $A
    local.get $y4
    f32.mul
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.get $z0
  call $assembly/gen/diode/Diode#set:_z0
  local.get $this
  local.get $z1
  call $assembly/gen/diode/Diode#set:_z1
  local.get $this
  local.get $z2
  call $assembly/gen/diode/Diode#set:_z2
  local.get $this
  local.get $z3
  call $assembly/gen/diode/Diode#set:_z3
  local.get $this
  local.get $z4
  call $assembly/gen/diode/Diode#set:_z4
 )
 (func $assembly/gen/inc/Inc#get:amt (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=8
 )
 (func $assembly/gen/inc/Inc#get:_value (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=20
 )
 (func $assembly/gen/inc/Inc#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $i i32)
  (local $offset i32)
  (local $amt f32)
  (local $value f32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  local.get $this
  call $assembly/gen/inc/Inc#get:amt
  f32.const 1.0000000474974513e-03
  f32.mul
  local.set $amt
  local.get $this
  call $assembly/gen/inc/Inc#get:_value
  local.set $value
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $out
    local.get $value
    f32.store $0
    local.get $value
    local.get $amt
    f32.add
    local.set $value
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.get $value
  call $assembly/gen/inc/Inc#set:_value
 )
 (func $assembly/gen/lp/Lp#get:_alpha (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=16
 )
 (func $assembly/gen/lp/Lp#get:_sample (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=20
 )
 (func $assembly/gen/lp/Lp#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/gen/lp/Lp#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $alpha f32)
  (local $sample f32)
  (local $prev f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  local.get $this
  call $assembly/gen/lp/Lp#get:_alpha
  local.set $alpha
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/lp/Lp#get:_sample
  local.set $prev
  local.get $this
  call $assembly/gen/lp/Lp#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $alpha
    local.get $sample
    f32.mul
    f32.const 1
    local.get $alpha
    f32.sub
    local.get $prev
    f32.mul
    f32.add
    local.set $sample
    local.get $sample
    local.set $prev
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.get $prev
  call $assembly/gen/lp/Lp#set:_sample
 )
 (func $assembly/gen/moog/Moog#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/gen/moog/Moog#get:_m_amf (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=32
 )
 (func $assembly/gen/moog/Moog#get:_m_kacr (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=60
 )
 (func $assembly/gen/moog/Moog#get:_m_azt1 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=12
 )
 (func $assembly/gen/moog/Moog#get:_m_k2vg (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=64
 )
 (func $assembly/gen/moog/Moog#get:_x1 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=40
 )
 (func $assembly/gen/moog/tanha (param $x f32) (result f32)
  local.get $x
  f32.const 1
  local.get $x
  local.get $x
  f32.mul
  f32.const 3
  local.get $x
  local.get $x
  f32.mul
  f32.const 5
  f32.div
  f32.add
  f32.div
  f32.add
  f32.div
  return
 )
 (func $assembly/gen/moog/Moog#get:_m_azt2 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=16
 )
 (func $assembly/gen/moog/Moog#get:_m_azt3 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=20
 )
 (func $assembly/gen/moog/Moog#get:_az3 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=44
 )
 (func $assembly/gen/moog/Moog#get:_m_azt4 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=24
 )
 (func $assembly/gen/moog/Moog#get:_az4 (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=48
 )
 (func $assembly/gen/moog/Moog#get:_m_postGain (param $this i32) (result f32)
  local.get $this
  f32.load $0 offset=68
 )
 (func $assembly/gen/mhp/Mhp#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $this|9 i32)
  (local $x0 f32)
  (local $az1 f32)
  (local $at1 f32)
  (local $az2 f32)
  (local $at2 f32)
  (local $at3 f32)
  (local $at4 f32)
  (local $this|17 i32)
  (local $this|18 i32)
  (local $x0|19 f32)
  (local $az1|20 f32)
  (local $at1|21 f32)
  (local $az2|22 f32)
  (local $at2|23 f32)
  (local $at3|24 f32)
  (local $at4|25 f32)
  (local $this|26 i32)
  (local $this|27 i32)
  (local $x0|28 f32)
  (local $az1|29 f32)
  (local $at1|30 f32)
  (local $az2|31 f32)
  (local $at2|32 f32)
  (local $at3|33 f32)
  (local $at4|34 f32)
  (local $this|35 i32)
  (local $this|36 i32)
  (local $x0|37 f32)
  (local $az1|38 f32)
  (local $at1|39 f32)
  (local $az2|40 f32)
  (local $at2|41 f32)
  (local $at3|42 f32)
  (local $at4|43 f32)
  (local $this|44 i32)
  (local $this|45 i32)
  (local $x0|46 f32)
  (local $az1|47 f32)
  (local $at1|48 f32)
  (local $az2|49 f32)
  (local $at2|50 f32)
  (local $at3|51 f32)
  (local $at4|52 f32)
  (local $this|53 i32)
  (local $this|54 i32)
  (local $x0|55 f32)
  (local $az1|56 f32)
  (local $at1|57 f32)
  (local $az2|58 f32)
  (local $at2|59 f32)
  (local $at3|60 f32)
  (local $at4|61 f32)
  (local $this|62 i32)
  (local $this|63 i32)
  (local $x0|64 f32)
  (local $az1|65 f32)
  (local $at1|66 f32)
  (local $az2|67 f32)
  (local $at2|68 f32)
  (local $at3|69 f32)
  (local $at4|70 f32)
  (local $this|71 i32)
  (local $this|72 i32)
  (local $x0|73 f32)
  (local $az1|74 f32)
  (local $at1|75 f32)
  (local $az2|76 f32)
  (local $at2|77 f32)
  (local $at3|78 f32)
  (local $at4|79 f32)
  (local $this|80 i32)
  (local $this|81 i32)
  (local $x0|82 f32)
  (local $az1|83 f32)
  (local $at1|84 f32)
  (local $az2|85 f32)
  (local $at2|86 f32)
  (local $at3|87 f32)
  (local $at4|88 f32)
  (local $this|89 i32)
  (local $this|90 i32)
  (local $x0|91 f32)
  (local $az1|92 f32)
  (local $at1|93 f32)
  (local $az2|94 f32)
  (local $at2|95 f32)
  (local $at3|96 f32)
  (local $at4|97 f32)
  (local $this|98 i32)
  (local $this|99 i32)
  (local $x0|100 f32)
  (local $az1|101 f32)
  (local $at1|102 f32)
  (local $az2|103 f32)
  (local $at2|104 f32)
  (local $at3|105 f32)
  (local $at4|106 f32)
  (local $this|107 i32)
  (local $this|108 i32)
  (local $x0|109 f32)
  (local $az1|110 f32)
  (local $at1|111 f32)
  (local $az2|112 f32)
  (local $at2|113 f32)
  (local $at3|114 f32)
  (local $at4|115 f32)
  (local $this|116 i32)
  (local $this|117 i32)
  (local $x0|118 f32)
  (local $az1|119 f32)
  (local $at1|120 f32)
  (local $az2|121 f32)
  (local $at2|122 f32)
  (local $at3|123 f32)
  (local $at4|124 f32)
  (local $this|125 i32)
  (local $this|126 i32)
  (local $x0|127 f32)
  (local $az1|128 f32)
  (local $at1|129 f32)
  (local $az2|130 f32)
  (local $at2|131 f32)
  (local $at3|132 f32)
  (local $at4|133 f32)
  (local $this|134 i32)
  (local $this|135 i32)
  (local $x0|136 f32)
  (local $az1|137 f32)
  (local $at1|138 f32)
  (local $az2|139 f32)
  (local $at2|140 f32)
  (local $at3|141 f32)
  (local $at4|142 f32)
  (local $this|143 i32)
  (local $this|144 i32)
  (local $x0|145 f32)
  (local $az1|146 f32)
  (local $at1|147 f32)
  (local $az2|148 f32)
  (local $at2|149 f32)
  (local $at3|150 f32)
  (local $at4|151 f32)
  (local $this|152 i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/moog/Moog#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|9
    local.get $sample
    local.set $x0
    local.get $this|9
    local.get $x0
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1
    local.get $this|9
    local.get $az1
    local.get $at1
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1
    f32.add
    local.set $az2
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2
    local.get $this|9
    local.get $az2
    local.get $at2
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|9
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3
    local.get $this|9
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|9
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4
    local.get $this|9
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|9
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.0 (result f32)
     local.get $this
     local.set $this|17
     local.get $this|17
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|17
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|17
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|17
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|18
    local.get $sample
    local.set $x0|19
    local.get $this|18
    local.get $x0|19
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|20
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|20
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|21
    local.get $this|18
    local.get $az1|20
    local.get $at1|21
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|21
    f32.add
    local.set $az2|22
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|22
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|23
    local.get $this|18
    local.get $az2|22
    local.get $at2|23
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|18
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|23
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|24
    local.get $this|18
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|24
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|18
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|24
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|25
    local.get $this|18
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|25
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|18
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.1 (result f32)
     local.get $this
     local.set $this|26
     local.get $this|26
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|26
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|26
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|26
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.1
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|27
    local.get $sample
    local.set $x0|28
    local.get $this|27
    local.get $x0|28
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|29
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|29
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|30
    local.get $this|27
    local.get $az1|29
    local.get $at1|30
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|30
    f32.add
    local.set $az2|31
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|31
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|32
    local.get $this|27
    local.get $az2|31
    local.get $at2|32
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|27
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|32
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|33
    local.get $this|27
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|33
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|27
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|33
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|34
    local.get $this|27
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|34
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|27
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.2 (result f32)
     local.get $this
     local.set $this|35
     local.get $this|35
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|35
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|35
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|35
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.2
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|36
    local.get $sample
    local.set $x0|37
    local.get $this|36
    local.get $x0|37
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|38
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|38
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|39
    local.get $this|36
    local.get $az1|38
    local.get $at1|39
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|39
    f32.add
    local.set $az2|40
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|40
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|41
    local.get $this|36
    local.get $az2|40
    local.get $at2|41
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|36
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|41
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|42
    local.get $this|36
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|42
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|36
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|42
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|43
    local.get $this|36
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|43
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|36
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.3 (result f32)
     local.get $this
     local.set $this|44
     local.get $this|44
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|44
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|44
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|44
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.3
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|45
    local.get $sample
    local.set $x0|46
    local.get $this|45
    local.get $x0|46
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|47
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|47
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|48
    local.get $this|45
    local.get $az1|47
    local.get $at1|48
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|48
    f32.add
    local.set $az2|49
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|49
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|50
    local.get $this|45
    local.get $az2|49
    local.get $at2|50
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|45
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|50
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|51
    local.get $this|45
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|51
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|45
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|51
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|52
    local.get $this|45
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|52
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|45
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.4 (result f32)
     local.get $this
     local.set $this|53
     local.get $this|53
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|53
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|53
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|53
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.4
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|54
    local.get $sample
    local.set $x0|55
    local.get $this|54
    local.get $x0|55
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|56
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|56
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|57
    local.get $this|54
    local.get $az1|56
    local.get $at1|57
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|57
    f32.add
    local.set $az2|58
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|58
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|59
    local.get $this|54
    local.get $az2|58
    local.get $at2|59
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|54
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|59
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|60
    local.get $this|54
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|60
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|54
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|60
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|61
    local.get $this|54
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|61
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|54
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.5 (result f32)
     local.get $this
     local.set $this|62
     local.get $this|62
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|62
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|62
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|62
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.5
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|63
    local.get $sample
    local.set $x0|64
    local.get $this|63
    local.get $x0|64
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|65
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|65
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|66
    local.get $this|63
    local.get $az1|65
    local.get $at1|66
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|66
    f32.add
    local.set $az2|67
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|67
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|68
    local.get $this|63
    local.get $az2|67
    local.get $at2|68
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|63
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|68
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|69
    local.get $this|63
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|69
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|63
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|69
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|70
    local.get $this|63
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|70
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|63
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.6 (result f32)
     local.get $this
     local.set $this|71
     local.get $this|71
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|71
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|71
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|71
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.6
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|72
    local.get $sample
    local.set $x0|73
    local.get $this|72
    local.get $x0|73
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|74
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|74
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|75
    local.get $this|72
    local.get $az1|74
    local.get $at1|75
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|75
    f32.add
    local.set $az2|76
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|76
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|77
    local.get $this|72
    local.get $az2|76
    local.get $at2|77
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|72
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|77
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|78
    local.get $this|72
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|78
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|72
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|78
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|79
    local.get $this|72
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|79
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|72
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.7 (result f32)
     local.get $this
     local.set $this|80
     local.get $this|80
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|80
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|80
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|80
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.7
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|81
    local.get $sample
    local.set $x0|82
    local.get $this|81
    local.get $x0|82
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|83
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|83
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|84
    local.get $this|81
    local.get $az1|83
    local.get $at1|84
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|84
    f32.add
    local.set $az2|85
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|85
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|86
    local.get $this|81
    local.get $az2|85
    local.get $at2|86
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|81
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|86
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|87
    local.get $this|81
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|87
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|81
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|87
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|88
    local.get $this|81
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|88
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|81
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.8 (result f32)
     local.get $this
     local.set $this|89
     local.get $this|89
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|89
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|89
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|89
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.8
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|90
    local.get $sample
    local.set $x0|91
    local.get $this|90
    local.get $x0|91
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|92
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|92
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|93
    local.get $this|90
    local.get $az1|92
    local.get $at1|93
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|93
    f32.add
    local.set $az2|94
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|94
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|95
    local.get $this|90
    local.get $az2|94
    local.get $at2|95
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|90
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|95
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|96
    local.get $this|90
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|96
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|90
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|96
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|97
    local.get $this|90
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|97
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|90
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.9 (result f32)
     local.get $this
     local.set $this|98
     local.get $this|98
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|98
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|98
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|98
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.9
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|99
    local.get $sample
    local.set $x0|100
    local.get $this|99
    local.get $x0|100
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|101
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|101
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|102
    local.get $this|99
    local.get $az1|101
    local.get $at1|102
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|102
    f32.add
    local.set $az2|103
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|103
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|104
    local.get $this|99
    local.get $az2|103
    local.get $at2|104
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|99
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|104
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|105
    local.get $this|99
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|105
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|99
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|105
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|106
    local.get $this|99
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|106
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|99
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.10 (result f32)
     local.get $this
     local.set $this|107
     local.get $this|107
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|107
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|107
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|107
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.10
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|108
    local.get $sample
    local.set $x0|109
    local.get $this|108
    local.get $x0|109
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|110
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|110
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|111
    local.get $this|108
    local.get $az1|110
    local.get $at1|111
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|111
    f32.add
    local.set $az2|112
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|112
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|113
    local.get $this|108
    local.get $az2|112
    local.get $at2|113
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|108
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|113
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|114
    local.get $this|108
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|114
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|108
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|114
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|115
    local.get $this|108
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|115
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|108
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.11 (result f32)
     local.get $this
     local.set $this|116
     local.get $this|116
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|116
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|116
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|116
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.11
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|117
    local.get $sample
    local.set $x0|118
    local.get $this|117
    local.get $x0|118
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|119
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|119
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|120
    local.get $this|117
    local.get $az1|119
    local.get $at1|120
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|120
    f32.add
    local.set $az2|121
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|121
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|122
    local.get $this|117
    local.get $az2|121
    local.get $at2|122
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|117
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|122
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|123
    local.get $this|117
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|123
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|117
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|123
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|124
    local.get $this|117
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|124
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|117
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.12 (result f32)
     local.get $this
     local.set $this|125
     local.get $this|125
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|125
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|125
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|125
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.12
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|126
    local.get $sample
    local.set $x0|127
    local.get $this|126
    local.get $x0|127
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|128
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|128
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|129
    local.get $this|126
    local.get $az1|128
    local.get $at1|129
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|129
    f32.add
    local.set $az2|130
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|130
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|131
    local.get $this|126
    local.get $az2|130
    local.get $at2|131
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|126
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|131
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|132
    local.get $this|126
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|132
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|126
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|132
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|133
    local.get $this|126
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|133
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|126
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.13 (result f32)
     local.get $this
     local.set $this|134
     local.get $this|134
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|134
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|134
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|134
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.13
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|135
    local.get $sample
    local.set $x0|136
    local.get $this|135
    local.get $x0|136
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|137
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|137
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|138
    local.get $this|135
    local.get $az1|137
    local.get $at1|138
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|138
    f32.add
    local.set $az2|139
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|139
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|140
    local.get $this|135
    local.get $az2|139
    local.get $at2|140
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|135
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|140
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|141
    local.get $this|135
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|141
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|135
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|141
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|142
    local.get $this|135
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|142
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|135
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.14 (result f32)
     local.get $this
     local.set $this|143
     local.get $this|143
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|143
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|143
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|143
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.14
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|144
    local.get $sample
    local.set $x0|145
    local.get $this|144
    local.get $x0|145
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|146
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|146
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|147
    local.get $this|144
    local.get $az1|146
    local.get $at1|147
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|147
    f32.add
    local.set $az2|148
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|148
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|149
    local.get $this|144
    local.get $az2|148
    local.get $at2|149
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|144
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|149
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|150
    local.get $this|144
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|150
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|144
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|150
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|151
    local.get $this|144
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|151
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|144
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_highpass|inlined.15 (result f32)
     local.get $this
     local.set $this|152
     local.get $this|152
     call $assembly/gen/moog/Moog#get:_x1
     f32.const 3
     local.get $this|152
     call $assembly/gen/moog/Moog#get:_az3
     f32.mul
     f32.sub
     f32.const 2
     local.get $this|152
     call $assembly/gen/moog/Moog#get:_az4
     f32.mul
     f32.add
     local.get $this|152
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_highpass|inlined.15
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/mlp/Mlp#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $this|9 i32)
  (local $x0 f32)
  (local $az1 f32)
  (local $at1 f32)
  (local $az2 f32)
  (local $at2 f32)
  (local $at3 f32)
  (local $at4 f32)
  (local $this|17 i32)
  (local $this|18 i32)
  (local $x0|19 f32)
  (local $az1|20 f32)
  (local $at1|21 f32)
  (local $az2|22 f32)
  (local $at2|23 f32)
  (local $at3|24 f32)
  (local $at4|25 f32)
  (local $this|26 i32)
  (local $this|27 i32)
  (local $x0|28 f32)
  (local $az1|29 f32)
  (local $at1|30 f32)
  (local $az2|31 f32)
  (local $at2|32 f32)
  (local $at3|33 f32)
  (local $at4|34 f32)
  (local $this|35 i32)
  (local $this|36 i32)
  (local $x0|37 f32)
  (local $az1|38 f32)
  (local $at1|39 f32)
  (local $az2|40 f32)
  (local $at2|41 f32)
  (local $at3|42 f32)
  (local $at4|43 f32)
  (local $this|44 i32)
  (local $this|45 i32)
  (local $x0|46 f32)
  (local $az1|47 f32)
  (local $at1|48 f32)
  (local $az2|49 f32)
  (local $at2|50 f32)
  (local $at3|51 f32)
  (local $at4|52 f32)
  (local $this|53 i32)
  (local $this|54 i32)
  (local $x0|55 f32)
  (local $az1|56 f32)
  (local $at1|57 f32)
  (local $az2|58 f32)
  (local $at2|59 f32)
  (local $at3|60 f32)
  (local $at4|61 f32)
  (local $this|62 i32)
  (local $this|63 i32)
  (local $x0|64 f32)
  (local $az1|65 f32)
  (local $at1|66 f32)
  (local $az2|67 f32)
  (local $at2|68 f32)
  (local $at3|69 f32)
  (local $at4|70 f32)
  (local $this|71 i32)
  (local $this|72 i32)
  (local $x0|73 f32)
  (local $az1|74 f32)
  (local $at1|75 f32)
  (local $az2|76 f32)
  (local $at2|77 f32)
  (local $at3|78 f32)
  (local $at4|79 f32)
  (local $this|80 i32)
  (local $this|81 i32)
  (local $x0|82 f32)
  (local $az1|83 f32)
  (local $at1|84 f32)
  (local $az2|85 f32)
  (local $at2|86 f32)
  (local $at3|87 f32)
  (local $at4|88 f32)
  (local $this|89 i32)
  (local $this|90 i32)
  (local $x0|91 f32)
  (local $az1|92 f32)
  (local $at1|93 f32)
  (local $az2|94 f32)
  (local $at2|95 f32)
  (local $at3|96 f32)
  (local $at4|97 f32)
  (local $this|98 i32)
  (local $this|99 i32)
  (local $x0|100 f32)
  (local $az1|101 f32)
  (local $at1|102 f32)
  (local $az2|103 f32)
  (local $at2|104 f32)
  (local $at3|105 f32)
  (local $at4|106 f32)
  (local $this|107 i32)
  (local $this|108 i32)
  (local $x0|109 f32)
  (local $az1|110 f32)
  (local $at1|111 f32)
  (local $az2|112 f32)
  (local $at2|113 f32)
  (local $at3|114 f32)
  (local $at4|115 f32)
  (local $this|116 i32)
  (local $this|117 i32)
  (local $x0|118 f32)
  (local $az1|119 f32)
  (local $at1|120 f32)
  (local $az2|121 f32)
  (local $at2|122 f32)
  (local $at3|123 f32)
  (local $at4|124 f32)
  (local $this|125 i32)
  (local $this|126 i32)
  (local $x0|127 f32)
  (local $az1|128 f32)
  (local $at1|129 f32)
  (local $az2|130 f32)
  (local $at2|131 f32)
  (local $at3|132 f32)
  (local $at4|133 f32)
  (local $this|134 i32)
  (local $this|135 i32)
  (local $x0|136 f32)
  (local $az1|137 f32)
  (local $at1|138 f32)
  (local $az2|139 f32)
  (local $at2|140 f32)
  (local $at3|141 f32)
  (local $at4|142 f32)
  (local $this|143 i32)
  (local $this|144 i32)
  (local $x0|145 f32)
  (local $az1|146 f32)
  (local $at1|147 f32)
  (local $az2|148 f32)
  (local $at2|149 f32)
  (local $at3|150 f32)
  (local $at4|151 f32)
  (local $this|152 i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/moog/Moog#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|9
    local.get $sample
    local.set $x0
    local.get $this|9
    local.get $x0
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1
    local.get $this|9
    local.get $az1
    local.get $at1
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1
    f32.add
    local.set $az2
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2
    local.get $this|9
    local.get $az2
    local.get $at2
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|9
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3
    local.get $this|9
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|9
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4
    local.get $this|9
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|9
    local.get $this|9
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.0 (result f32)
     local.get $this
     local.set $this|17
     local.get $this|17
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|17
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|18
    local.get $sample
    local.set $x0|19
    local.get $this|18
    local.get $x0|19
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|20
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|20
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|21
    local.get $this|18
    local.get $az1|20
    local.get $at1|21
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|21
    f32.add
    local.set $az2|22
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|22
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|23
    local.get $this|18
    local.get $az2|22
    local.get $at2|23
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|18
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|23
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|24
    local.get $this|18
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|24
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|18
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|24
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|25
    local.get $this|18
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|25
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|18
    local.get $this|18
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.1 (result f32)
     local.get $this
     local.set $this|26
     local.get $this|26
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|26
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.1
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|27
    local.get $sample
    local.set $x0|28
    local.get $this|27
    local.get $x0|28
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|29
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|29
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|30
    local.get $this|27
    local.get $az1|29
    local.get $at1|30
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|30
    f32.add
    local.set $az2|31
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|31
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|32
    local.get $this|27
    local.get $az2|31
    local.get $at2|32
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|27
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|32
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|33
    local.get $this|27
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|33
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|27
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|33
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|34
    local.get $this|27
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|34
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|27
    local.get $this|27
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.2 (result f32)
     local.get $this
     local.set $this|35
     local.get $this|35
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|35
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.2
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|36
    local.get $sample
    local.set $x0|37
    local.get $this|36
    local.get $x0|37
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|38
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|38
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|39
    local.get $this|36
    local.get $az1|38
    local.get $at1|39
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|39
    f32.add
    local.set $az2|40
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|40
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|41
    local.get $this|36
    local.get $az2|40
    local.get $at2|41
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|36
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|41
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|42
    local.get $this|36
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|42
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|36
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|42
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|43
    local.get $this|36
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|43
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|36
    local.get $this|36
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.3 (result f32)
     local.get $this
     local.set $this|44
     local.get $this|44
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|44
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.3
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|45
    local.get $sample
    local.set $x0|46
    local.get $this|45
    local.get $x0|46
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|47
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|47
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|48
    local.get $this|45
    local.get $az1|47
    local.get $at1|48
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|48
    f32.add
    local.set $az2|49
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|49
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|50
    local.get $this|45
    local.get $az2|49
    local.get $at2|50
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|45
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|50
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|51
    local.get $this|45
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|51
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|45
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|51
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|52
    local.get $this|45
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|52
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|45
    local.get $this|45
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.4 (result f32)
     local.get $this
     local.set $this|53
     local.get $this|53
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|53
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.4
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|54
    local.get $sample
    local.set $x0|55
    local.get $this|54
    local.get $x0|55
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|56
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|56
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|57
    local.get $this|54
    local.get $az1|56
    local.get $at1|57
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|57
    f32.add
    local.set $az2|58
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|58
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|59
    local.get $this|54
    local.get $az2|58
    local.get $at2|59
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|54
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|59
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|60
    local.get $this|54
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|60
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|54
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|60
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|61
    local.get $this|54
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|61
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|54
    local.get $this|54
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.5 (result f32)
     local.get $this
     local.set $this|62
     local.get $this|62
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|62
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.5
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|63
    local.get $sample
    local.set $x0|64
    local.get $this|63
    local.get $x0|64
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|65
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|65
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|66
    local.get $this|63
    local.get $az1|65
    local.get $at1|66
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|66
    f32.add
    local.set $az2|67
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|67
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|68
    local.get $this|63
    local.get $az2|67
    local.get $at2|68
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|63
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|68
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|69
    local.get $this|63
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|69
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|63
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|69
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|70
    local.get $this|63
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|70
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|63
    local.get $this|63
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.6 (result f32)
     local.get $this
     local.set $this|71
     local.get $this|71
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|71
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.6
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|72
    local.get $sample
    local.set $x0|73
    local.get $this|72
    local.get $x0|73
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|74
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|74
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|75
    local.get $this|72
    local.get $az1|74
    local.get $at1|75
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|75
    f32.add
    local.set $az2|76
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|76
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|77
    local.get $this|72
    local.get $az2|76
    local.get $at2|77
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|72
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|77
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|78
    local.get $this|72
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|78
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|72
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|78
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|79
    local.get $this|72
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|79
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|72
    local.get $this|72
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.7 (result f32)
     local.get $this
     local.set $this|80
     local.get $this|80
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|80
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.7
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|81
    local.get $sample
    local.set $x0|82
    local.get $this|81
    local.get $x0|82
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|83
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|83
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|84
    local.get $this|81
    local.get $az1|83
    local.get $at1|84
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|84
    f32.add
    local.set $az2|85
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|85
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|86
    local.get $this|81
    local.get $az2|85
    local.get $at2|86
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|81
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|86
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|87
    local.get $this|81
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|87
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|81
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|87
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|88
    local.get $this|81
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|88
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|81
    local.get $this|81
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.8 (result f32)
     local.get $this
     local.set $this|89
     local.get $this|89
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|89
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.8
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|90
    local.get $sample
    local.set $x0|91
    local.get $this|90
    local.get $x0|91
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|92
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|92
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|93
    local.get $this|90
    local.get $az1|92
    local.get $at1|93
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|93
    f32.add
    local.set $az2|94
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|94
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|95
    local.get $this|90
    local.get $az2|94
    local.get $at2|95
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|90
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|95
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|96
    local.get $this|90
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|96
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|90
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|96
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|97
    local.get $this|90
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|97
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|90
    local.get $this|90
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.9 (result f32)
     local.get $this
     local.set $this|98
     local.get $this|98
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|98
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.9
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|99
    local.get $sample
    local.set $x0|100
    local.get $this|99
    local.get $x0|100
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|101
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|101
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|102
    local.get $this|99
    local.get $az1|101
    local.get $at1|102
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|102
    f32.add
    local.set $az2|103
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|103
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|104
    local.get $this|99
    local.get $az2|103
    local.get $at2|104
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|99
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|104
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|105
    local.get $this|99
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|105
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|99
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|105
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|106
    local.get $this|99
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|106
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|99
    local.get $this|99
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.10 (result f32)
     local.get $this
     local.set $this|107
     local.get $this|107
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|107
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.10
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|108
    local.get $sample
    local.set $x0|109
    local.get $this|108
    local.get $x0|109
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|110
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|110
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|111
    local.get $this|108
    local.get $az1|110
    local.get $at1|111
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|111
    f32.add
    local.set $az2|112
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|112
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|113
    local.get $this|108
    local.get $az2|112
    local.get $at2|113
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|108
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|113
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|114
    local.get $this|108
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|114
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|108
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|114
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|115
    local.get $this|108
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|115
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|108
    local.get $this|108
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.11 (result f32)
     local.get $this
     local.set $this|116
     local.get $this|116
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|116
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.11
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|117
    local.get $sample
    local.set $x0|118
    local.get $this|117
    local.get $x0|118
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|119
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|119
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|120
    local.get $this|117
    local.get $az1|119
    local.get $at1|120
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|120
    f32.add
    local.set $az2|121
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|121
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|122
    local.get $this|117
    local.get $az2|121
    local.get $at2|122
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|117
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|122
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|123
    local.get $this|117
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|123
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|117
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|123
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|124
    local.get $this|117
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|124
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|117
    local.get $this|117
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.12 (result f32)
     local.get $this
     local.set $this|125
     local.get $this|125
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|125
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.12
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|126
    local.get $sample
    local.set $x0|127
    local.get $this|126
    local.get $x0|127
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|128
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|128
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|129
    local.get $this|126
    local.get $az1|128
    local.get $at1|129
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|129
    f32.add
    local.set $az2|130
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|130
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|131
    local.get $this|126
    local.get $az2|130
    local.get $at2|131
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|126
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|131
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|132
    local.get $this|126
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|132
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|126
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|132
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|133
    local.get $this|126
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|133
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|126
    local.get $this|126
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.13 (result f32)
     local.get $this
     local.set $this|134
     local.get $this|134
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|134
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.13
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|135
    local.get $sample
    local.set $x0|136
    local.get $this|135
    local.get $x0|136
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|137
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|137
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|138
    local.get $this|135
    local.get $az1|137
    local.get $at1|138
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|138
    f32.add
    local.set $az2|139
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|139
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|140
    local.get $this|135
    local.get $az2|139
    local.get $at2|140
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|135
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|140
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|141
    local.get $this|135
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|141
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|135
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|141
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|142
    local.get $this|135
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|142
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|135
    local.get $this|135
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.14 (result f32)
     local.get $this
     local.set $this|143
     local.get $this|143
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|143
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.14
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|144
    local.get $sample
    local.set $x0|145
    local.get $this|144
    local.get $x0|145
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_amf
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_kacr
    f32.mul
    f32.sub
    call $assembly/gen/moog/Moog#set:_x1
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_azt1
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_x1
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    f32.add
    local.set $az1|146
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az1|146
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at1|147
    local.get $this|144
    local.get $az1|146
    local.get $at1|147
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt1
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_azt2
    local.get $at1|147
    f32.add
    local.set $az2|148
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $az2|148
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at2|149
    local.get $this|144
    local.get $az2|148
    local.get $at2|149
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt2
    local.get $this|144
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_azt3
    local.get $at2|149
    f32.add
    call $assembly/gen/moog/Moog#set:_az3
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_az3
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at3|150
    local.get $this|144
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_az3
    local.get $at3|150
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt3
    local.get $this|144
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_azt4
    local.get $at3|150
    f32.add
    call $assembly/gen/moog/Moog#set:_az4
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_m_k2vg
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_az4
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_v2
    f32.div
    call $assembly/gen/moog/tanha
    f32.mul
    local.set $at4|151
    local.get $this|144
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_az4
    local.get $at4|151
    f32.sub
    call $assembly/gen/moog/Moog#set:_m_azt4
    local.get $this|144
    local.get $this|144
    call $assembly/gen/moog/Moog#get:_az4
    call $assembly/gen/moog/Moog#set:_m_amf
    block $assembly/gen/moog/Moog#_lowpass|inlined.15 (result f32)
     local.get $this
     local.set $this|152
     local.get $this|152
     call $assembly/gen/moog/Moog#get:_m_amf
     local.get $this|152
     call $assembly/gen/moog/Moog#get:_m_postGain
     f32.mul
     br $assembly/gen/moog/Moog#_lowpass|inlined.15
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/svf/Svf#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/gen/svf/Svf#get:_c2 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=24
 )
 (func $assembly/gen/svf/Svf#get:_c1 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=16
 )
 (func $assembly/gen/svf/Svf#get:_v3 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=80
 )
 (func $assembly/gen/svf/Svf#get:_a3 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=48
 )
 (func $assembly/gen/svf/Svf#get:_v1 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=64
 )
 (func $assembly/gen/svf/Svf#get:_v2 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=72
 )
 (func $assembly/gen/svf/Svf#get:_v0 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=56
 )
 (func $assembly/gen/sap/Sap#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $this|9 i32)
  (local $v0 f32)
  (local $this|11 i32)
  (local $this|12 i32)
  (local $v0|13 f32)
  (local $this|14 i32)
  (local $this|15 i32)
  (local $v0|16 f32)
  (local $this|17 i32)
  (local $this|18 i32)
  (local $v0|19 f32)
  (local $this|20 i32)
  (local $this|21 i32)
  (local $v0|22 f32)
  (local $this|23 i32)
  (local $this|24 i32)
  (local $v0|25 f32)
  (local $this|26 i32)
  (local $this|27 i32)
  (local $v0|28 f32)
  (local $this|29 i32)
  (local $this|30 i32)
  (local $v0|31 f32)
  (local $this|32 i32)
  (local $this|33 i32)
  (local $v0|34 f32)
  (local $this|35 i32)
  (local $this|36 i32)
  (local $v0|37 f32)
  (local $this|38 i32)
  (local $this|39 i32)
  (local $v0|40 f32)
  (local $this|41 i32)
  (local $this|42 i32)
  (local $v0|43 f32)
  (local $this|44 i32)
  (local $this|45 i32)
  (local $v0|46 f32)
  (local $this|47 i32)
  (local $this|48 i32)
  (local $v0|49 f32)
  (local $this|50 i32)
  (local $this|51 i32)
  (local $v0|52 f32)
  (local $this|53 i32)
  (local $this|54 i32)
  (local $v0|55 f32)
  (local $this|56 i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/svf/Svf#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|9
    local.get $sample
    local.set $v0
    local.get $this|9
    local.get $v0
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|9
    local.get $v0
    f64.promote_f32
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|9
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|9
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|9
    f64.const 2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|9
    f64.const 2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.0 (result f32)
     local.get $this
     local.set $this|11
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|12
    local.get $sample
    local.set $v0|13
    local.get $this|12
    local.get $v0|13
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|12
    local.get $v0|13
    f64.promote_f32
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|12
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|12
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|12
    f64.const 2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|12
    f64.const 2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.1 (result f32)
     local.get $this
     local.set $this|14
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.1
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|15
    local.get $sample
    local.set $v0|16
    local.get $this|15
    local.get $v0|16
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|15
    local.get $v0|16
    f64.promote_f32
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|15
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|15
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|15
    f64.const 2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|15
    f64.const 2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.2 (result f32)
     local.get $this
     local.set $this|17
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.2
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|18
    local.get $sample
    local.set $v0|19
    local.get $this|18
    local.get $v0|19
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|18
    local.get $v0|19
    f64.promote_f32
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|18
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|18
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|18
    f64.const 2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|18
    f64.const 2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.3 (result f32)
     local.get $this
     local.set $this|20
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.3
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|21
    local.get $sample
    local.set $v0|22
    local.get $this|21
    local.get $v0|22
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|21
    local.get $v0|22
    f64.promote_f32
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|21
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|21
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|21
    f64.const 2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|21
    f64.const 2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.4 (result f32)
     local.get $this
     local.set $this|23
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.4
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|24
    local.get $sample
    local.set $v0|25
    local.get $this|24
    local.get $v0|25
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|24
    local.get $v0|25
    f64.promote_f32
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|24
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|24
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|24
    f64.const 2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|24
    f64.const 2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.5 (result f32)
     local.get $this
     local.set $this|26
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.5
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|27
    local.get $sample
    local.set $v0|28
    local.get $this|27
    local.get $v0|28
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|27
    local.get $v0|28
    f64.promote_f32
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|27
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|27
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|27
    f64.const 2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|27
    f64.const 2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.6 (result f32)
     local.get $this
     local.set $this|29
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.6
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|30
    local.get $sample
    local.set $v0|31
    local.get $this|30
    local.get $v0|31
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|30
    local.get $v0|31
    f64.promote_f32
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|30
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|30
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|30
    f64.const 2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|30
    f64.const 2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.7 (result f32)
     local.get $this
     local.set $this|32
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.7
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|33
    local.get $sample
    local.set $v0|34
    local.get $this|33
    local.get $v0|34
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|33
    local.get $v0|34
    f64.promote_f32
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|33
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|33
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|33
    f64.const 2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|33
    f64.const 2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.8 (result f32)
     local.get $this
     local.set $this|35
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.8
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|36
    local.get $sample
    local.set $v0|37
    local.get $this|36
    local.get $v0|37
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|36
    local.get $v0|37
    f64.promote_f32
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|36
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|36
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|36
    f64.const 2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|36
    f64.const 2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.9 (result f32)
     local.get $this
     local.set $this|38
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.9
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|39
    local.get $sample
    local.set $v0|40
    local.get $this|39
    local.get $v0|40
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|39
    local.get $v0|40
    f64.promote_f32
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|39
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|39
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|39
    f64.const 2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|39
    f64.const 2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.10 (result f32)
     local.get $this
     local.set $this|41
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.10
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|42
    local.get $sample
    local.set $v0|43
    local.get $this|42
    local.get $v0|43
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|42
    local.get $v0|43
    f64.promote_f32
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|42
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|42
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|42
    f64.const 2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|42
    f64.const 2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.11 (result f32)
     local.get $this
     local.set $this|44
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.11
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|45
    local.get $sample
    local.set $v0|46
    local.get $this|45
    local.get $v0|46
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|45
    local.get $v0|46
    f64.promote_f32
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|45
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|45
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|45
    f64.const 2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|45
    f64.const 2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.12 (result f32)
     local.get $this
     local.set $this|47
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.12
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|48
    local.get $sample
    local.set $v0|49
    local.get $this|48
    local.get $v0|49
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|48
    local.get $v0|49
    f64.promote_f32
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|48
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|48
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|48
    f64.const 2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|48
    f64.const 2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.13 (result f32)
     local.get $this
     local.set $this|50
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.13
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|51
    local.get $sample
    local.set $v0|52
    local.get $this|51
    local.get $v0|52
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|51
    local.get $v0|52
    f64.promote_f32
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|51
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|51
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|51
    f64.const 2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|51
    f64.const 2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.14 (result f32)
     local.get $this
     local.set $this|53
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.14
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|54
    local.get $sample
    local.set $v0|55
    local.get $this|54
    local.get $v0|55
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|54
    local.get $v0|55
    f64.promote_f32
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|54
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|54
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|54
    f64.const 2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|54
    f64.const 2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_allpass|inlined.15 (result f32)
     local.get $this
     local.set $this|56
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_v0
     f64.const 2
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_k
     f64.mul
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_allpass|inlined.15
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/sbp/Sbp#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $this|9 i32)
  (local $v0 f32)
  (local $this|11 i32)
  (local $this|12 i32)
  (local $v0|13 f32)
  (local $this|14 i32)
  (local $this|15 i32)
  (local $v0|16 f32)
  (local $this|17 i32)
  (local $this|18 i32)
  (local $v0|19 f32)
  (local $this|20 i32)
  (local $this|21 i32)
  (local $v0|22 f32)
  (local $this|23 i32)
  (local $this|24 i32)
  (local $v0|25 f32)
  (local $this|26 i32)
  (local $this|27 i32)
  (local $v0|28 f32)
  (local $this|29 i32)
  (local $this|30 i32)
  (local $v0|31 f32)
  (local $this|32 i32)
  (local $this|33 i32)
  (local $v0|34 f32)
  (local $this|35 i32)
  (local $this|36 i32)
  (local $v0|37 f32)
  (local $this|38 i32)
  (local $this|39 i32)
  (local $v0|40 f32)
  (local $this|41 i32)
  (local $this|42 i32)
  (local $v0|43 f32)
  (local $this|44 i32)
  (local $this|45 i32)
  (local $v0|46 f32)
  (local $this|47 i32)
  (local $this|48 i32)
  (local $v0|49 f32)
  (local $this|50 i32)
  (local $this|51 i32)
  (local $v0|52 f32)
  (local $this|53 i32)
  (local $this|54 i32)
  (local $v0|55 f32)
  (local $this|56 i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/svf/Svf#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|9
    local.get $sample
    local.set $v0
    local.get $this|9
    local.get $v0
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|9
    local.get $v0
    f64.promote_f32
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|9
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|9
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|9
    f64.const 2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|9
    f64.const 2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.0 (result f32)
     local.get $this
     local.set $this|11
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|12
    local.get $sample
    local.set $v0|13
    local.get $this|12
    local.get $v0|13
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|12
    local.get $v0|13
    f64.promote_f32
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|12
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|12
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|12
    f64.const 2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|12
    f64.const 2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.1 (result f32)
     local.get $this
     local.set $this|14
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.1
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|15
    local.get $sample
    local.set $v0|16
    local.get $this|15
    local.get $v0|16
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|15
    local.get $v0|16
    f64.promote_f32
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|15
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|15
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|15
    f64.const 2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|15
    f64.const 2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.2 (result f32)
     local.get $this
     local.set $this|17
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.2
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|18
    local.get $sample
    local.set $v0|19
    local.get $this|18
    local.get $v0|19
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|18
    local.get $v0|19
    f64.promote_f32
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|18
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|18
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|18
    f64.const 2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|18
    f64.const 2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.3 (result f32)
     local.get $this
     local.set $this|20
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.3
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|21
    local.get $sample
    local.set $v0|22
    local.get $this|21
    local.get $v0|22
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|21
    local.get $v0|22
    f64.promote_f32
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|21
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|21
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|21
    f64.const 2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|21
    f64.const 2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.4 (result f32)
     local.get $this
     local.set $this|23
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.4
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|24
    local.get $sample
    local.set $v0|25
    local.get $this|24
    local.get $v0|25
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|24
    local.get $v0|25
    f64.promote_f32
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|24
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|24
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|24
    f64.const 2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|24
    f64.const 2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.5 (result f32)
     local.get $this
     local.set $this|26
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.5
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|27
    local.get $sample
    local.set $v0|28
    local.get $this|27
    local.get $v0|28
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|27
    local.get $v0|28
    f64.promote_f32
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|27
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|27
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|27
    f64.const 2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|27
    f64.const 2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.6 (result f32)
     local.get $this
     local.set $this|29
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.6
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|30
    local.get $sample
    local.set $v0|31
    local.get $this|30
    local.get $v0|31
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|30
    local.get $v0|31
    f64.promote_f32
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|30
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|30
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|30
    f64.const 2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|30
    f64.const 2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.7 (result f32)
     local.get $this
     local.set $this|32
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.7
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|33
    local.get $sample
    local.set $v0|34
    local.get $this|33
    local.get $v0|34
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|33
    local.get $v0|34
    f64.promote_f32
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|33
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|33
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|33
    f64.const 2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|33
    f64.const 2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.8 (result f32)
     local.get $this
     local.set $this|35
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.8
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|36
    local.get $sample
    local.set $v0|37
    local.get $this|36
    local.get $v0|37
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|36
    local.get $v0|37
    f64.promote_f32
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|36
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|36
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|36
    f64.const 2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|36
    f64.const 2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.9 (result f32)
     local.get $this
     local.set $this|38
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.9
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|39
    local.get $sample
    local.set $v0|40
    local.get $this|39
    local.get $v0|40
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|39
    local.get $v0|40
    f64.promote_f32
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|39
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|39
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|39
    f64.const 2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|39
    f64.const 2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.10 (result f32)
     local.get $this
     local.set $this|41
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.10
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|42
    local.get $sample
    local.set $v0|43
    local.get $this|42
    local.get $v0|43
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|42
    local.get $v0|43
    f64.promote_f32
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|42
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|42
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|42
    f64.const 2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|42
    f64.const 2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.11 (result f32)
     local.get $this
     local.set $this|44
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.11
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|45
    local.get $sample
    local.set $v0|46
    local.get $this|45
    local.get $v0|46
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|45
    local.get $v0|46
    f64.promote_f32
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|45
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|45
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|45
    f64.const 2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|45
    f64.const 2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.12 (result f32)
     local.get $this
     local.set $this|47
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.12
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|48
    local.get $sample
    local.set $v0|49
    local.get $this|48
    local.get $v0|49
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|48
    local.get $v0|49
    f64.promote_f32
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|48
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|48
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|48
    f64.const 2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|48
    f64.const 2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.13 (result f32)
     local.get $this
     local.set $this|50
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.13
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|51
    local.get $sample
    local.set $v0|52
    local.get $this|51
    local.get $v0|52
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|51
    local.get $v0|52
    f64.promote_f32
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|51
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|51
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|51
    f64.const 2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|51
    f64.const 2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.14 (result f32)
     local.get $this
     local.set $this|53
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.14
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|54
    local.get $sample
    local.set $v0|55
    local.get $this|54
    local.get $v0|55
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|54
    local.get $v0|55
    f64.promote_f32
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|54
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|54
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|54
    f64.const 2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|54
    f64.const 2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_bandpass|inlined.15 (result f32)
     local.get $this
     local.set $this|56
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_v1
     f32.demote_f64
     br $assembly/gen/svf/Svf#_bandpass|inlined.15
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/shp/Shp#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $this|9 i32)
  (local $v0 f32)
  (local $this|11 i32)
  (local $this|12 i32)
  (local $v0|13 f32)
  (local $this|14 i32)
  (local $this|15 i32)
  (local $v0|16 f32)
  (local $this|17 i32)
  (local $this|18 i32)
  (local $v0|19 f32)
  (local $this|20 i32)
  (local $this|21 i32)
  (local $v0|22 f32)
  (local $this|23 i32)
  (local $this|24 i32)
  (local $v0|25 f32)
  (local $this|26 i32)
  (local $this|27 i32)
  (local $v0|28 f32)
  (local $this|29 i32)
  (local $this|30 i32)
  (local $v0|31 f32)
  (local $this|32 i32)
  (local $this|33 i32)
  (local $v0|34 f32)
  (local $this|35 i32)
  (local $this|36 i32)
  (local $v0|37 f32)
  (local $this|38 i32)
  (local $this|39 i32)
  (local $v0|40 f32)
  (local $this|41 i32)
  (local $this|42 i32)
  (local $v0|43 f32)
  (local $this|44 i32)
  (local $this|45 i32)
  (local $v0|46 f32)
  (local $this|47 i32)
  (local $this|48 i32)
  (local $v0|49 f32)
  (local $this|50 i32)
  (local $this|51 i32)
  (local $v0|52 f32)
  (local $this|53 i32)
  (local $this|54 i32)
  (local $v0|55 f32)
  (local $this|56 i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/svf/Svf#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|9
    local.get $sample
    local.set $v0
    local.get $this|9
    local.get $v0
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|9
    local.get $v0
    f64.promote_f32
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|9
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|9
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|9
    f64.const 2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|9
    f64.const 2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.0 (result f32)
     local.get $this
     local.set $this|11
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|12
    local.get $sample
    local.set $v0|13
    local.get $this|12
    local.get $v0|13
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|12
    local.get $v0|13
    f64.promote_f32
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|12
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|12
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|12
    f64.const 2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|12
    f64.const 2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.1 (result f32)
     local.get $this
     local.set $this|14
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.1
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|15
    local.get $sample
    local.set $v0|16
    local.get $this|15
    local.get $v0|16
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|15
    local.get $v0|16
    f64.promote_f32
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|15
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|15
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|15
    f64.const 2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|15
    f64.const 2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.2 (result f32)
     local.get $this
     local.set $this|17
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.2
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|18
    local.get $sample
    local.set $v0|19
    local.get $this|18
    local.get $v0|19
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|18
    local.get $v0|19
    f64.promote_f32
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|18
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|18
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|18
    f64.const 2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|18
    f64.const 2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.3 (result f32)
     local.get $this
     local.set $this|20
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.3
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|21
    local.get $sample
    local.set $v0|22
    local.get $this|21
    local.get $v0|22
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|21
    local.get $v0|22
    f64.promote_f32
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|21
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|21
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|21
    f64.const 2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|21
    f64.const 2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.4 (result f32)
     local.get $this
     local.set $this|23
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.4
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|24
    local.get $sample
    local.set $v0|25
    local.get $this|24
    local.get $v0|25
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|24
    local.get $v0|25
    f64.promote_f32
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|24
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|24
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|24
    f64.const 2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|24
    f64.const 2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.5 (result f32)
     local.get $this
     local.set $this|26
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.5
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|27
    local.get $sample
    local.set $v0|28
    local.get $this|27
    local.get $v0|28
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|27
    local.get $v0|28
    f64.promote_f32
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|27
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|27
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|27
    f64.const 2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|27
    f64.const 2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.6 (result f32)
     local.get $this
     local.set $this|29
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.6
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|30
    local.get $sample
    local.set $v0|31
    local.get $this|30
    local.get $v0|31
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|30
    local.get $v0|31
    f64.promote_f32
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|30
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|30
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|30
    f64.const 2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|30
    f64.const 2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.7 (result f32)
     local.get $this
     local.set $this|32
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.7
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|33
    local.get $sample
    local.set $v0|34
    local.get $this|33
    local.get $v0|34
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|33
    local.get $v0|34
    f64.promote_f32
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|33
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|33
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|33
    f64.const 2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|33
    f64.const 2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.8 (result f32)
     local.get $this
     local.set $this|35
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.8
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|36
    local.get $sample
    local.set $v0|37
    local.get $this|36
    local.get $v0|37
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|36
    local.get $v0|37
    f64.promote_f32
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|36
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|36
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|36
    f64.const 2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|36
    f64.const 2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.9 (result f32)
     local.get $this
     local.set $this|38
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.9
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|39
    local.get $sample
    local.set $v0|40
    local.get $this|39
    local.get $v0|40
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|39
    local.get $v0|40
    f64.promote_f32
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|39
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|39
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|39
    f64.const 2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|39
    f64.const 2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.10 (result f32)
     local.get $this
     local.set $this|41
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.10
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|42
    local.get $sample
    local.set $v0|43
    local.get $this|42
    local.get $v0|43
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|42
    local.get $v0|43
    f64.promote_f32
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|42
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|42
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|42
    f64.const 2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|42
    f64.const 2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.11 (result f32)
     local.get $this
     local.set $this|44
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.11
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|45
    local.get $sample
    local.set $v0|46
    local.get $this|45
    local.get $v0|46
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|45
    local.get $v0|46
    f64.promote_f32
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|45
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|45
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|45
    f64.const 2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|45
    f64.const 2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.12 (result f32)
     local.get $this
     local.set $this|47
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.12
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|48
    local.get $sample
    local.set $v0|49
    local.get $this|48
    local.get $v0|49
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|48
    local.get $v0|49
    f64.promote_f32
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|48
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|48
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|48
    f64.const 2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|48
    f64.const 2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.13 (result f32)
     local.get $this
     local.set $this|50
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.13
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|51
    local.get $sample
    local.set $v0|52
    local.get $this|51
    local.get $v0|52
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|51
    local.get $v0|52
    f64.promote_f32
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|51
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|51
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|51
    f64.const 2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|51
    f64.const 2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.14 (result f32)
     local.get $this
     local.set $this|53
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.14
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|54
    local.get $sample
    local.set $v0|55
    local.get $this|54
    local.get $v0|55
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|54
    local.get $v0|55
    f64.promote_f32
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|54
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|54
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|54
    f64.const 2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|54
    f64.const 2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_highpass|inlined.15 (result f32)
     local.get $this
     local.set $this|56
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_v2
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_highpass|inlined.15
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/slp/Slp#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $this|9 i32)
  (local $v0 f32)
  (local $this|11 i32)
  (local $this|12 i32)
  (local $v0|13 f32)
  (local $this|14 i32)
  (local $this|15 i32)
  (local $v0|16 f32)
  (local $this|17 i32)
  (local $this|18 i32)
  (local $v0|19 f32)
  (local $this|20 i32)
  (local $this|21 i32)
  (local $v0|22 f32)
  (local $this|23 i32)
  (local $this|24 i32)
  (local $v0|25 f32)
  (local $this|26 i32)
  (local $this|27 i32)
  (local $v0|28 f32)
  (local $this|29 i32)
  (local $this|30 i32)
  (local $v0|31 f32)
  (local $this|32 i32)
  (local $this|33 i32)
  (local $v0|34 f32)
  (local $this|35 i32)
  (local $this|36 i32)
  (local $v0|37 f32)
  (local $this|38 i32)
  (local $this|39 i32)
  (local $v0|40 f32)
  (local $this|41 i32)
  (local $this|42 i32)
  (local $v0|43 f32)
  (local $this|44 i32)
  (local $this|45 i32)
  (local $v0|46 f32)
  (local $this|47 i32)
  (local $this|48 i32)
  (local $v0|49 f32)
  (local $this|50 i32)
  (local $this|51 i32)
  (local $v0|52 f32)
  (local $this|53 i32)
  (local $this|54 i32)
  (local $v0|55 f32)
  (local $this|56 i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/svf/Svf#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|9
    local.get $sample
    local.set $v0
    local.get $this|9
    local.get $v0
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|9
    local.get $v0
    f64.promote_f32
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|9
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|9
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|9
    f64.const 2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|9
    f64.const 2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.0 (result f32)
     local.get $this
     local.set $this|11
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|12
    local.get $sample
    local.set $v0|13
    local.get $this|12
    local.get $v0|13
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|12
    local.get $v0|13
    f64.promote_f32
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|12
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|12
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|12
    f64.const 2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|12
    f64.const 2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.1 (result f32)
     local.get $this
     local.set $this|14
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.1
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|15
    local.get $sample
    local.set $v0|16
    local.get $this|15
    local.get $v0|16
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|15
    local.get $v0|16
    f64.promote_f32
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|15
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|15
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|15
    f64.const 2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|15
    f64.const 2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.2 (result f32)
     local.get $this
     local.set $this|17
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.2
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|18
    local.get $sample
    local.set $v0|19
    local.get $this|18
    local.get $v0|19
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|18
    local.get $v0|19
    f64.promote_f32
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|18
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|18
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|18
    f64.const 2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|18
    f64.const 2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.3 (result f32)
     local.get $this
     local.set $this|20
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.3
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|21
    local.get $sample
    local.set $v0|22
    local.get $this|21
    local.get $v0|22
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|21
    local.get $v0|22
    f64.promote_f32
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|21
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|21
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|21
    f64.const 2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|21
    f64.const 2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.4 (result f32)
     local.get $this
     local.set $this|23
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.4
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|24
    local.get $sample
    local.set $v0|25
    local.get $this|24
    local.get $v0|25
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|24
    local.get $v0|25
    f64.promote_f32
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|24
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|24
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|24
    f64.const 2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|24
    f64.const 2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.5 (result f32)
     local.get $this
     local.set $this|26
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.5
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|27
    local.get $sample
    local.set $v0|28
    local.get $this|27
    local.get $v0|28
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|27
    local.get $v0|28
    f64.promote_f32
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|27
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|27
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|27
    f64.const 2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|27
    f64.const 2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.6 (result f32)
     local.get $this
     local.set $this|29
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.6
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|30
    local.get $sample
    local.set $v0|31
    local.get $this|30
    local.get $v0|31
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|30
    local.get $v0|31
    f64.promote_f32
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|30
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|30
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|30
    f64.const 2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|30
    f64.const 2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.7 (result f32)
     local.get $this
     local.set $this|32
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.7
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|33
    local.get $sample
    local.set $v0|34
    local.get $this|33
    local.get $v0|34
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|33
    local.get $v0|34
    f64.promote_f32
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|33
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|33
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|33
    f64.const 2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|33
    f64.const 2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.8 (result f32)
     local.get $this
     local.set $this|35
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.8
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|36
    local.get $sample
    local.set $v0|37
    local.get $this|36
    local.get $v0|37
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|36
    local.get $v0|37
    f64.promote_f32
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|36
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|36
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|36
    f64.const 2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|36
    f64.const 2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.9 (result f32)
     local.get $this
     local.set $this|38
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.9
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|39
    local.get $sample
    local.set $v0|40
    local.get $this|39
    local.get $v0|40
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|39
    local.get $v0|40
    f64.promote_f32
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|39
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|39
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|39
    f64.const 2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|39
    f64.const 2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.10 (result f32)
     local.get $this
     local.set $this|41
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.10
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|42
    local.get $sample
    local.set $v0|43
    local.get $this|42
    local.get $v0|43
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|42
    local.get $v0|43
    f64.promote_f32
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|42
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|42
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|42
    f64.const 2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|42
    f64.const 2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.11 (result f32)
     local.get $this
     local.set $this|44
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.11
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|45
    local.get $sample
    local.set $v0|46
    local.get $this|45
    local.get $v0|46
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|45
    local.get $v0|46
    f64.promote_f32
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|45
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|45
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|45
    f64.const 2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|45
    f64.const 2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.12 (result f32)
     local.get $this
     local.set $this|47
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.12
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|48
    local.get $sample
    local.set $v0|49
    local.get $this|48
    local.get $v0|49
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|48
    local.get $v0|49
    f64.promote_f32
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|48
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|48
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|48
    f64.const 2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|48
    f64.const 2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.13 (result f32)
     local.get $this
     local.set $this|50
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.13
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|51
    local.get $sample
    local.set $v0|52
    local.get $this|51
    local.get $v0|52
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|51
    local.get $v0|52
    f64.promote_f32
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|51
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|51
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|51
    f64.const 2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|51
    f64.const 2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.14 (result f32)
     local.get $this
     local.set $this|53
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.14
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|54
    local.get $sample
    local.set $v0|55
    local.get $this|54
    local.get $v0|55
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|54
    local.get $v0|55
    f64.promote_f32
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|54
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|54
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|54
    f64.const 2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|54
    f64.const 2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_lowpass|inlined.15 (result f32)
     local.get $this
     local.set $this|56
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_v2
     f32.demote_f64
     br $assembly/gen/svf/Svf#_lowpass|inlined.15
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/sno/Sno#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $this|9 i32)
  (local $v0 f32)
  (local $this|11 i32)
  (local $this|12 i32)
  (local $v0|13 f32)
  (local $this|14 i32)
  (local $this|15 i32)
  (local $v0|16 f32)
  (local $this|17 i32)
  (local $this|18 i32)
  (local $v0|19 f32)
  (local $this|20 i32)
  (local $this|21 i32)
  (local $v0|22 f32)
  (local $this|23 i32)
  (local $this|24 i32)
  (local $v0|25 f32)
  (local $this|26 i32)
  (local $this|27 i32)
  (local $v0|28 f32)
  (local $this|29 i32)
  (local $this|30 i32)
  (local $v0|31 f32)
  (local $this|32 i32)
  (local $this|33 i32)
  (local $v0|34 f32)
  (local $this|35 i32)
  (local $this|36 i32)
  (local $v0|37 f32)
  (local $this|38 i32)
  (local $this|39 i32)
  (local $v0|40 f32)
  (local $this|41 i32)
  (local $this|42 i32)
  (local $v0|43 f32)
  (local $this|44 i32)
  (local $this|45 i32)
  (local $v0|46 f32)
  (local $this|47 i32)
  (local $this|48 i32)
  (local $v0|49 f32)
  (local $this|50 i32)
  (local $this|51 i32)
  (local $v0|52 f32)
  (local $this|53 i32)
  (local $this|54 i32)
  (local $v0|55 f32)
  (local $this|56 i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/svf/Svf#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|9
    local.get $sample
    local.set $v0
    local.get $this|9
    local.get $v0
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|9
    local.get $v0
    f64.promote_f32
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|9
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|9
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|9
    f64.const 2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|9
    f64.const 2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.0 (result f32)
     local.get $this
     local.set $this|11
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|12
    local.get $sample
    local.set $v0|13
    local.get $this|12
    local.get $v0|13
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|12
    local.get $v0|13
    f64.promote_f32
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|12
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|12
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|12
    f64.const 2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|12
    f64.const 2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.1 (result f32)
     local.get $this
     local.set $this|14
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.1
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|15
    local.get $sample
    local.set $v0|16
    local.get $this|15
    local.get $v0|16
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|15
    local.get $v0|16
    f64.promote_f32
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|15
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|15
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|15
    f64.const 2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|15
    f64.const 2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.2 (result f32)
     local.get $this
     local.set $this|17
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.2
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|18
    local.get $sample
    local.set $v0|19
    local.get $this|18
    local.get $v0|19
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|18
    local.get $v0|19
    f64.promote_f32
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|18
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|18
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|18
    f64.const 2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|18
    f64.const 2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.3 (result f32)
     local.get $this
     local.set $this|20
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.3
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|21
    local.get $sample
    local.set $v0|22
    local.get $this|21
    local.get $v0|22
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|21
    local.get $v0|22
    f64.promote_f32
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|21
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|21
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|21
    f64.const 2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|21
    f64.const 2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.4 (result f32)
     local.get $this
     local.set $this|23
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.4
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|24
    local.get $sample
    local.set $v0|25
    local.get $this|24
    local.get $v0|25
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|24
    local.get $v0|25
    f64.promote_f32
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|24
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|24
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|24
    f64.const 2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|24
    f64.const 2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.5 (result f32)
     local.get $this
     local.set $this|26
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.5
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|27
    local.get $sample
    local.set $v0|28
    local.get $this|27
    local.get $v0|28
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|27
    local.get $v0|28
    f64.promote_f32
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|27
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|27
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|27
    f64.const 2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|27
    f64.const 2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.6 (result f32)
     local.get $this
     local.set $this|29
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.6
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|30
    local.get $sample
    local.set $v0|31
    local.get $this|30
    local.get $v0|31
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|30
    local.get $v0|31
    f64.promote_f32
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|30
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|30
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|30
    f64.const 2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|30
    f64.const 2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.7 (result f32)
     local.get $this
     local.set $this|32
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.7
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|33
    local.get $sample
    local.set $v0|34
    local.get $this|33
    local.get $v0|34
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|33
    local.get $v0|34
    f64.promote_f32
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|33
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|33
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|33
    f64.const 2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|33
    f64.const 2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.8 (result f32)
     local.get $this
     local.set $this|35
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.8
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|36
    local.get $sample
    local.set $v0|37
    local.get $this|36
    local.get $v0|37
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|36
    local.get $v0|37
    f64.promote_f32
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|36
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|36
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|36
    f64.const 2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|36
    f64.const 2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.9 (result f32)
     local.get $this
     local.set $this|38
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.9
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|39
    local.get $sample
    local.set $v0|40
    local.get $this|39
    local.get $v0|40
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|39
    local.get $v0|40
    f64.promote_f32
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|39
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|39
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|39
    f64.const 2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|39
    f64.const 2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.10 (result f32)
     local.get $this
     local.set $this|41
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.10
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|42
    local.get $sample
    local.set $v0|43
    local.get $this|42
    local.get $v0|43
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|42
    local.get $v0|43
    f64.promote_f32
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|42
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|42
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|42
    f64.const 2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|42
    f64.const 2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.11 (result f32)
     local.get $this
     local.set $this|44
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.11
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|45
    local.get $sample
    local.set $v0|46
    local.get $this|45
    local.get $v0|46
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|45
    local.get $v0|46
    f64.promote_f32
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|45
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|45
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|45
    f64.const 2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|45
    f64.const 2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.12 (result f32)
     local.get $this
     local.set $this|47
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.12
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|48
    local.get $sample
    local.set $v0|49
    local.get $this|48
    local.get $v0|49
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|48
    local.get $v0|49
    f64.promote_f32
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|48
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|48
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|48
    f64.const 2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|48
    f64.const 2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.13 (result f32)
     local.get $this
     local.set $this|50
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.13
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|51
    local.get $sample
    local.set $v0|52
    local.get $this|51
    local.get $v0|52
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|51
    local.get $v0|52
    f64.promote_f32
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|51
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|51
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|51
    f64.const 2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|51
    f64.const 2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.14 (result f32)
     local.get $this
     local.set $this|53
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.14
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|54
    local.get $sample
    local.set $v0|55
    local.get $this|54
    local.get $v0|55
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|54
    local.get $v0|55
    f64.promote_f32
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|54
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|54
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|54
    f64.const 2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|54
    f64.const 2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_notch|inlined.15 (result f32)
     local.get $this
     local.set $this|56
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_notch|inlined.15
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/spk/Spk#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $this|9 i32)
  (local $v0 f32)
  (local $this|11 i32)
  (local $this|12 i32)
  (local $v0|13 f32)
  (local $this|14 i32)
  (local $this|15 i32)
  (local $v0|16 f32)
  (local $this|17 i32)
  (local $this|18 i32)
  (local $v0|19 f32)
  (local $this|20 i32)
  (local $this|21 i32)
  (local $v0|22 f32)
  (local $this|23 i32)
  (local $this|24 i32)
  (local $v0|25 f32)
  (local $this|26 i32)
  (local $this|27 i32)
  (local $v0|28 f32)
  (local $this|29 i32)
  (local $this|30 i32)
  (local $v0|31 f32)
  (local $this|32 i32)
  (local $this|33 i32)
  (local $v0|34 f32)
  (local $this|35 i32)
  (local $this|36 i32)
  (local $v0|37 f32)
  (local $this|38 i32)
  (local $this|39 i32)
  (local $v0|40 f32)
  (local $this|41 i32)
  (local $this|42 i32)
  (local $v0|43 f32)
  (local $this|44 i32)
  (local $this|45 i32)
  (local $v0|46 f32)
  (local $this|47 i32)
  (local $this|48 i32)
  (local $v0|49 f32)
  (local $this|50 i32)
  (local $this|51 i32)
  (local $v0|52 f32)
  (local $this|53 i32)
  (local $this|54 i32)
  (local $v0|55 f32)
  (local $this|56 i32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/svf/Svf#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|9
    local.get $sample
    local.set $v0
    local.get $this|9
    local.get $v0
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|9
    local.get $v0
    f64.promote_f32
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|9
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|9
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|9
    f64.const 2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|9
    f64.const 2
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|9
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.0 (result f32)
     local.get $this
     local.set $this|11
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|11
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|12
    local.get $sample
    local.set $v0|13
    local.get $this|12
    local.get $v0|13
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|12
    local.get $v0|13
    f64.promote_f32
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|12
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|12
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|12
    f64.const 2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|12
    f64.const 2
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|12
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.1 (result f32)
     local.get $this
     local.set $this|14
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|14
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.1
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|15
    local.get $sample
    local.set $v0|16
    local.get $this|15
    local.get $v0|16
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|15
    local.get $v0|16
    f64.promote_f32
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|15
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|15
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|15
    f64.const 2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|15
    f64.const 2
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|15
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.2 (result f32)
     local.get $this
     local.set $this|17
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|17
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.2
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|18
    local.get $sample
    local.set $v0|19
    local.get $this|18
    local.get $v0|19
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|18
    local.get $v0|19
    f64.promote_f32
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|18
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|18
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|18
    f64.const 2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|18
    f64.const 2
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|18
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.3 (result f32)
     local.get $this
     local.set $this|20
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|20
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.3
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|21
    local.get $sample
    local.set $v0|22
    local.get $this|21
    local.get $v0|22
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|21
    local.get $v0|22
    f64.promote_f32
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|21
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|21
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|21
    f64.const 2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|21
    f64.const 2
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|21
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.4 (result f32)
     local.get $this
     local.set $this|23
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|23
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.4
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|24
    local.get $sample
    local.set $v0|25
    local.get $this|24
    local.get $v0|25
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|24
    local.get $v0|25
    f64.promote_f32
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|24
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|24
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|24
    f64.const 2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|24
    f64.const 2
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|24
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.5 (result f32)
     local.get $this
     local.set $this|26
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|26
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.5
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|27
    local.get $sample
    local.set $v0|28
    local.get $this|27
    local.get $v0|28
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|27
    local.get $v0|28
    f64.promote_f32
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|27
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|27
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|27
    f64.const 2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|27
    f64.const 2
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|27
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.6 (result f32)
     local.get $this
     local.set $this|29
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|29
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.6
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|30
    local.get $sample
    local.set $v0|31
    local.get $this|30
    local.get $v0|31
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|30
    local.get $v0|31
    f64.promote_f32
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|30
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|30
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|30
    f64.const 2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|30
    f64.const 2
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|30
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.7 (result f32)
     local.get $this
     local.set $this|32
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|32
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.7
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|33
    local.get $sample
    local.set $v0|34
    local.get $this|33
    local.get $v0|34
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|33
    local.get $v0|34
    f64.promote_f32
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|33
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|33
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|33
    f64.const 2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|33
    f64.const 2
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|33
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.8 (result f32)
     local.get $this
     local.set $this|35
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|35
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.8
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|36
    local.get $sample
    local.set $v0|37
    local.get $this|36
    local.get $v0|37
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|36
    local.get $v0|37
    f64.promote_f32
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|36
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|36
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|36
    f64.const 2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|36
    f64.const 2
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|36
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.9 (result f32)
     local.get $this
     local.set $this|38
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|38
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.9
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|39
    local.get $sample
    local.set $v0|40
    local.get $this|39
    local.get $v0|40
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|39
    local.get $v0|40
    f64.promote_f32
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|39
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|39
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|39
    f64.const 2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|39
    f64.const 2
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|39
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.10 (result f32)
     local.get $this
     local.set $this|41
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|41
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.10
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|42
    local.get $sample
    local.set $v0|43
    local.get $this|42
    local.get $v0|43
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|42
    local.get $v0|43
    f64.promote_f32
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|42
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|42
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|42
    f64.const 2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|42
    f64.const 2
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|42
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.11 (result f32)
     local.get $this
     local.set $this|44
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|44
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.11
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|45
    local.get $sample
    local.set $v0|46
    local.get $this|45
    local.get $v0|46
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|45
    local.get $v0|46
    f64.promote_f32
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|45
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|45
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|45
    f64.const 2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|45
    f64.const 2
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|45
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.12 (result f32)
     local.get $this
     local.set $this|47
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|47
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.12
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|48
    local.get $sample
    local.set $v0|49
    local.get $this|48
    local.get $v0|49
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|48
    local.get $v0|49
    f64.promote_f32
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|48
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|48
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|48
    f64.const 2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|48
    f64.const 2
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|48
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.13 (result f32)
     local.get $this
     local.set $this|50
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|50
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.13
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|51
    local.get $sample
    local.set $v0|52
    local.get $this|51
    local.get $v0|52
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|51
    local.get $v0|52
    f64.promote_f32
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|51
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|51
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|51
    f64.const 2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|51
    f64.const 2
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|51
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.14 (result f32)
     local.get $this
     local.set $this|53
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|53
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.14
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    local.set $this|54
    local.get $sample
    local.set $v0|55
    local.get $this|54
    local.get $v0|55
    f64.promote_f32
    call $assembly/gen/svf/Svf#set:_v0
    local.get $this|54
    local.get $v0|55
    f64.promote_f32
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_v3
    local.get $this|54
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a1
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v1
    local.get $this|54
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.mul
    f64.add
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_a3
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v3
    f64.mul
    f64.add
    call $assembly/gen/svf/Svf#set:_v2
    local.get $this|54
    f64.const 2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v1
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c1
    f64.sub
    call $assembly/gen/svf/Svf#set:_c1
    local.get $this|54
    f64.const 2
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_v2
    f64.mul
    local.get $this|54
    call $assembly/gen/svf/Svf#get:_c2
    f64.sub
    call $assembly/gen/svf/Svf#set:_c2
    block $assembly/gen/svf/Svf#_peak|inlined.15 (result f32)
     local.get $this
     local.set $this|56
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_v0
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_k
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_v1
     f64.mul
     f64.sub
     f64.const 2
     local.get $this|56
     call $assembly/gen/svf/Svf#get:_v2
     f64.mul
     f64.sub
     f32.demote_f64
     br $assembly/gen/svf/Svf#_peak|inlined.15
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/tanh/Tanh#get:_gainv (param $this i32) (result v128)
  local.get $this
  v128.load $0 offset=16
 )
 (func $assembly/gen/tanh/Tanh#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=32
 )
 (func $assembly/gen/tanh/Tanh#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $gainv v128)
  (local $in0 i32)
  (local $x v128)
  (local $resv v128)
  (local $i i32)
  (local $offset i32)
  (local $x2 v128)
  local.get $this
  call $assembly/gen/tanh/Tanh#get:_gainv
  local.set $gainv
  local.get $this
  call $assembly/gen/tanh/Tanh#get:in
  local.set $in0
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $in0
  local.get $offset
  i32.add
  local.set $in0
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $in0
    v128.load $0
    local.set $x
    local.get $x
    local.get $gainv
    f32x4.mul
    local.set $x
    local.get $x
    local.get $x
    f32x4.mul
    local.set $x2
    f32.const 5
    f32x4.splat
    local.get $x2
    f32x4.add
    local.set $resv
    local.get $x2
    local.get $resv
    f32x4.div
    local.set $resv
    f32.const 3
    f32x4.splat
    local.get $resv
    f32x4.add
    local.set $resv
    local.get $x
    f32.const 1
    f32x4.splat
    local.get $x2
    local.get $resv
    f32x4.div
    f32x4.add
    f32x4.div
    local.set $resv
    local.get $resv
    f32.const 1
    f32x4.splat
    f32x4.min
    local.set $resv
    local.get $resv
    f32.const -1
    f32x4.splat
    f32x4.max
    local.set $resv
    local.get $out
    local.get $resv
    v128.store $0
    local.get $in0
    i32.const 16
    i32.add
    local.set $in0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/tap/Tap#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $assembly/gen/tap/Tap#get:_mask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/gen/tap/Tap#get:_index (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/gen/tap/Tap#get:_floats (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/gen/tap/Tap#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $mask i32)
  (local $index i32)
  (local $delay f32)
  (local $stepf f32)
  (local $targetf f32)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/tap/Tap#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  local.get $this
  call $assembly/gen/tap/Tap#get:_mask
  local.set $mask
  local.get $this
  call $assembly/gen/tap/Tap#get:_index
  local.set $index
  f32.const 0
  local.set $delay
  local.get $this
  call $assembly/gen/tap/Tap#get:_stepf
  local.set $stepf
  local.get $this
  call $assembly/gen/tap/Tap#get:_targetf
  local.set $targetf
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $inp
    f32.load $0
    local.set $sample
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    f32.convert_i32_u
    local.get $stepf
    f32.sub
    local.get $mask
    call $assembly/util/cubic
    local.set $delay
    local.get $this
    call $assembly/gen/tap/Tap#get:_floats
    local.get $index
    local.get $sample
    call $~lib/staticarray/StaticArray<f32>#__set
    local.get $out
    local.get $delay
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $index
    i32.const 1
    i32.add
    local.get $mask
    i32.and
    local.set $index
    local.get $stepf
    local.get $targetf
    local.get $stepf
    f32.sub
    f32.const 7.999999797903001e-04
    f32.mul
    f32.add
    local.set $stepf
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.get $index
  call $assembly/gen/tap/Tap#set:_index
  local.get $this
  local.get $stepf
  call $assembly/gen/tap/Tap#set:_stepf
 )
 (func $assembly/gen/zero/Zero#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $zerov v128)
  (local $i i32)
  (local $offset i32)
  v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000
  local.set $zerov
  local.get $begin
  local.set $i
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $out
    local.get $zerov
    v128.store $0
    local.get $out
    i32.const 16
    i32.add
    local.set $out
    local.get $i
    i32.const 64
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/biquad/Biquad#get:in (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $assembly/gen/biquad/Biquad#get:_x1 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=16
 )
 (func $assembly/gen/biquad/Biquad#get:_x2 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=24
 )
 (func $assembly/gen/biquad/Biquad#get:_y1 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=32
 )
 (func $assembly/gen/biquad/Biquad#get:_y2 (param $this i32) (result f64)
  local.get $this
  f64.load $0 offset=40
 )
 (func $assembly/gen/biquad/Biquad#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $length i32)
  (local $sample f32)
  (local $inp i32)
  (local $i i32)
  (local $offset i32)
  (local $this|9 i32)
  (local $x0 f32)
  (local $y0 f64)
  (local $this|12 i32)
  (local $x0|13 f32)
  (local $y0|14 f64)
  (local $this|15 i32)
  (local $x0|16 f32)
  (local $y0|17 f64)
  (local $this|18 i32)
  (local $x0|19 f32)
  (local $y0|20 f64)
  (local $this|21 i32)
  (local $x0|22 f32)
  (local $y0|23 f64)
  (local $this|24 i32)
  (local $x0|25 f32)
  (local $y0|26 f64)
  (local $this|27 i32)
  (local $x0|28 f32)
  (local $y0|29 f64)
  (local $this|30 i32)
  (local $x0|31 f32)
  (local $y0|32 f64)
  (local $this|33 i32)
  (local $x0|34 f32)
  (local $y0|35 f64)
  (local $this|36 i32)
  (local $x0|37 f32)
  (local $y0|38 f64)
  (local $this|39 i32)
  (local $x0|40 f32)
  (local $y0|41 f64)
  (local $this|42 i32)
  (local $x0|43 f32)
  (local $y0|44 f64)
  (local $this|45 i32)
  (local $x0|46 f32)
  (local $y0|47 f64)
  (local $this|48 i32)
  (local $x0|49 f32)
  (local $y0|50 f64)
  (local $this|51 i32)
  (local $x0|52 f32)
  (local $y0|53 f64)
  (local $this|54 i32)
  (local $x0|55 f32)
  (local $y0|56 f64)
  local.get $end
  local.get $begin
  i32.sub
  local.set $length
  f32.const 0
  local.set $sample
  local.get $this
  call $assembly/gen/biquad/Biquad#get:in
  local.set $inp
  local.get $begin
  local.set $i
  local.get $i
  local.get $length
  i32.add
  local.set $end
  local.get $begin
  i32.const 2
  i32.shl
  local.set $offset
  local.get $inp
  local.get $offset
  i32.add
  local.set $inp
  local.get $out
  local.get $offset
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.0 (result f32)
     local.get $this
     local.set $this|9
     local.get $sample
     local.set $x0
     local.get $this|9
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0
     f64.promote_f32
     f64.mul
     local.get $this|9
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|9
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|9
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|9
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|9
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|9
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|9
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|9
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0
     local.get $this|9
     local.get $this|9
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|9
     local.get $this|9
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|9
     local.get $x0
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|9
     local.get $y0
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.0
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.1 (result f32)
     local.get $this
     local.set $this|12
     local.get $sample
     local.set $x0|13
     local.get $this|12
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|13
     f64.promote_f32
     f64.mul
     local.get $this|12
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|12
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|12
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|12
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|12
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|12
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|12
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|12
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|14
     local.get $this|12
     local.get $this|12
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|12
     local.get $this|12
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|12
     local.get $x0|13
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|12
     local.get $y0|14
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|14
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.1
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.2 (result f32)
     local.get $this
     local.set $this|15
     local.get $sample
     local.set $x0|16
     local.get $this|15
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|16
     f64.promote_f32
     f64.mul
     local.get $this|15
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|15
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|15
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|15
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|15
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|15
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|15
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|15
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|17
     local.get $this|15
     local.get $this|15
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|15
     local.get $this|15
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|15
     local.get $x0|16
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|15
     local.get $y0|17
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|17
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.2
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.3 (result f32)
     local.get $this
     local.set $this|18
     local.get $sample
     local.set $x0|19
     local.get $this|18
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|19
     f64.promote_f32
     f64.mul
     local.get $this|18
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|18
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|18
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|18
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|18
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|18
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|18
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|18
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|20
     local.get $this|18
     local.get $this|18
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|18
     local.get $this|18
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|18
     local.get $x0|19
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|18
     local.get $y0|20
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|20
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.3
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.4 (result f32)
     local.get $this
     local.set $this|21
     local.get $sample
     local.set $x0|22
     local.get $this|21
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|22
     f64.promote_f32
     f64.mul
     local.get $this|21
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|21
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|21
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|21
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|21
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|21
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|21
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|21
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|23
     local.get $this|21
     local.get $this|21
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|21
     local.get $this|21
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|21
     local.get $x0|22
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|21
     local.get $y0|23
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|23
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.4
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.5 (result f32)
     local.get $this
     local.set $this|24
     local.get $sample
     local.set $x0|25
     local.get $this|24
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|25
     f64.promote_f32
     f64.mul
     local.get $this|24
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|24
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|24
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|24
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|24
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|24
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|24
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|24
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|26
     local.get $this|24
     local.get $this|24
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|24
     local.get $this|24
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|24
     local.get $x0|25
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|24
     local.get $y0|26
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|26
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.5
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.6 (result f32)
     local.get $this
     local.set $this|27
     local.get $sample
     local.set $x0|28
     local.get $this|27
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|28
     f64.promote_f32
     f64.mul
     local.get $this|27
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|27
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|27
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|27
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|27
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|27
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|27
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|27
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|29
     local.get $this|27
     local.get $this|27
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|27
     local.get $this|27
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|27
     local.get $x0|28
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|27
     local.get $y0|29
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|29
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.6
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.7 (result f32)
     local.get $this
     local.set $this|30
     local.get $sample
     local.set $x0|31
     local.get $this|30
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|31
     f64.promote_f32
     f64.mul
     local.get $this|30
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|30
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|30
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|30
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|30
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|30
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|30
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|30
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|32
     local.get $this|30
     local.get $this|30
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|30
     local.get $this|30
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|30
     local.get $x0|31
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|30
     local.get $y0|32
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|32
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.7
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.8 (result f32)
     local.get $this
     local.set $this|33
     local.get $sample
     local.set $x0|34
     local.get $this|33
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|34
     f64.promote_f32
     f64.mul
     local.get $this|33
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|33
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|33
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|33
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|33
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|33
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|33
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|33
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|35
     local.get $this|33
     local.get $this|33
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|33
     local.get $this|33
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|33
     local.get $x0|34
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|33
     local.get $y0|35
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|35
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.8
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.9 (result f32)
     local.get $this
     local.set $this|36
     local.get $sample
     local.set $x0|37
     local.get $this|36
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|37
     f64.promote_f32
     f64.mul
     local.get $this|36
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|36
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|36
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|36
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|36
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|36
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|36
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|36
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|38
     local.get $this|36
     local.get $this|36
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|36
     local.get $this|36
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|36
     local.get $x0|37
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|36
     local.get $y0|38
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|38
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.9
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.10 (result f32)
     local.get $this
     local.set $this|39
     local.get $sample
     local.set $x0|40
     local.get $this|39
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|40
     f64.promote_f32
     f64.mul
     local.get $this|39
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|39
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|39
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|39
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|39
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|39
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|39
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|39
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|41
     local.get $this|39
     local.get $this|39
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|39
     local.get $this|39
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|39
     local.get $x0|40
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|39
     local.get $y0|41
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|41
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.10
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.11 (result f32)
     local.get $this
     local.set $this|42
     local.get $sample
     local.set $x0|43
     local.get $this|42
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|43
     f64.promote_f32
     f64.mul
     local.get $this|42
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|42
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|42
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|42
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|42
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|42
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|42
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|42
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|44
     local.get $this|42
     local.get $this|42
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|42
     local.get $this|42
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|42
     local.get $x0|43
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|42
     local.get $y0|44
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|44
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.11
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.12 (result f32)
     local.get $this
     local.set $this|45
     local.get $sample
     local.set $x0|46
     local.get $this|45
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|46
     f64.promote_f32
     f64.mul
     local.get $this|45
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|45
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|45
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|45
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|45
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|45
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|45
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|45
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|47
     local.get $this|45
     local.get $this|45
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|45
     local.get $this|45
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|45
     local.get $x0|46
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|45
     local.get $y0|47
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|47
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.12
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.13 (result f32)
     local.get $this
     local.set $this|48
     local.get $sample
     local.set $x0|49
     local.get $this|48
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|49
     f64.promote_f32
     f64.mul
     local.get $this|48
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|48
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|48
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|48
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|48
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|48
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|48
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|48
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|50
     local.get $this|48
     local.get $this|48
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|48
     local.get $this|48
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|48
     local.get $x0|49
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|48
     local.get $y0|50
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|50
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.13
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.14 (result f32)
     local.get $this
     local.set $this|51
     local.get $sample
     local.set $x0|52
     local.get $this|51
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|52
     f64.promote_f32
     f64.mul
     local.get $this|51
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|51
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|51
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|51
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|51
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|51
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|51
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|51
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|53
     local.get $this|51
     local.get $this|51
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|51
     local.get $this|51
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|51
     local.get $x0|52
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|51
     local.get $y0|53
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|53
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.14
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $inp
    f32.load $0
    local.set $sample
    block $assembly/gen/biquad/Biquad#_process|inlined.15 (result f32)
     local.get $this
     local.set $this|54
     local.get $sample
     local.set $x0|55
     local.get $this|54
     call $assembly/gen/biquad/Biquad#get:_b0
     local.get $x0|55
     f64.promote_f32
     f64.mul
     local.get $this|54
     call $assembly/gen/biquad/Biquad#get:_b1
     local.get $this|54
     call $assembly/gen/biquad/Biquad#get:_x1
     f64.mul
     f64.add
     local.get $this|54
     call $assembly/gen/biquad/Biquad#get:_b2
     local.get $this|54
     call $assembly/gen/biquad/Biquad#get:_x2
     f64.mul
     f64.add
     local.get $this|54
     call $assembly/gen/biquad/Biquad#get:_a1
     local.get $this|54
     call $assembly/gen/biquad/Biquad#get:_y1
     f64.mul
     f64.sub
     local.get $this|54
     call $assembly/gen/biquad/Biquad#get:_a2
     local.get $this|54
     call $assembly/gen/biquad/Biquad#get:_y2
     f64.mul
     f64.sub
     local.set $y0|56
     local.get $this|54
     local.get $this|54
     call $assembly/gen/biquad/Biquad#get:_x1
     call $assembly/gen/biquad/Biquad#set:_x2
     local.get $this|54
     local.get $this|54
     call $assembly/gen/biquad/Biquad#get:_y1
     call $assembly/gen/biquad/Biquad#set:_y2
     local.get $this|54
     local.get $x0|55
     f64.promote_f32
     call $assembly/gen/biquad/Biquad#set:_x1
     local.get $this|54
     local.get $y0|56
     call $assembly/gen/biquad/Biquad#set:_y1
     local.get $y0|56
     f32.demote_f64
     br $assembly/gen/biquad/Biquad#_process|inlined.15
    end
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $inp
    i32.const 4
    i32.add
    local.set $inp
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $assembly/gen/osc/Osc#get:_table (param $this i32) (result i32)
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  call $assembly/core/wavetable/Wavetable#get:sine
  return
 )
 (func $assembly/gen/osc/Osc#get:_mask (param $this i32) (result i32)
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  call $assembly/core/wavetable/Wavetable#get:mask
  return
 )
 (func $assembly/gen/osc/Osc#get:_phase (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=20
 )
 (func $assembly/gen/osc/Osc#get:_offsetU32 (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=36
 )
 (func $assembly/core/wavetable/Wavetable#read (param $this i32) (param $table i32) (param $mask i32) (param $phase i32) (param $offset i32) (param $step i32) (param $begin i32) (param $end i32) (param $targetPtr i32) (result i32)
  (local $target i32)
  (local $sv v128)
  (local $mask|11 i32)
  (local $table|12 i32)
  (local $phase|13 i32)
  (local $offset|14 i32)
  (local $current i32)
  (local $pos i32)
  (local $masked i32)
  (local $index i32)
  (local $a f32)
  (local $b f32)
  (local $d f32)
  (local $phase|22 i32)
  (local $u i32)
  (local $frac f32)
  (local $sample f32)
  (local $mask|26 i32)
  (local $table|27 i32)
  (local $phase|28 i32)
  (local $offset|29 i32)
  (local $current|30 i32)
  (local $pos|31 i32)
  (local $masked|32 i32)
  (local $index|33 i32)
  (local $a|34 f32)
  (local $b|35 f32)
  (local $d|36 f32)
  (local $phase|37 i32)
  (local $u|38 i32)
  (local $frac|39 f32)
  (local $sample|40 f32)
  (local $mask|41 i32)
  (local $table|42 i32)
  (local $phase|43 i32)
  (local $offset|44 i32)
  (local $current|45 i32)
  (local $pos|46 i32)
  (local $masked|47 i32)
  (local $index|48 i32)
  (local $a|49 f32)
  (local $b|50 f32)
  (local $d|51 f32)
  (local $phase|52 i32)
  (local $u|53 i32)
  (local $frac|54 f32)
  (local $sample|55 f32)
  (local $mask|56 i32)
  (local $table|57 i32)
  (local $phase|58 i32)
  (local $offset|59 i32)
  (local $current|60 i32)
  (local $pos|61 i32)
  (local $masked|62 i32)
  (local $index|63 i32)
  (local $a|64 f32)
  (local $b|65 f32)
  (local $d|66 f32)
  (local $phase|67 i32)
  (local $u|68 i32)
  (local $frac|69 f32)
  (local $sample|70 f32)
  (local $mask|71 i32)
  (local $table|72 i32)
  (local $phase|73 i32)
  (local $offset|74 i32)
  (local $current|75 i32)
  (local $pos|76 i32)
  (local $masked|77 i32)
  (local $index|78 i32)
  (local $a|79 f32)
  (local $b|80 f32)
  (local $d|81 f32)
  (local $phase|82 i32)
  (local $u|83 i32)
  (local $frac|84 f32)
  (local $sample|85 f32)
  (local $mask|86 i32)
  (local $table|87 i32)
  (local $phase|88 i32)
  (local $offset|89 i32)
  (local $current|90 i32)
  (local $pos|91 i32)
  (local $masked|92 i32)
  (local $index|93 i32)
  (local $a|94 f32)
  (local $b|95 f32)
  (local $d|96 f32)
  (local $phase|97 i32)
  (local $u|98 i32)
  (local $frac|99 f32)
  (local $sample|100 f32)
  (local $mask|101 i32)
  (local $table|102 i32)
  (local $phase|103 i32)
  (local $offset|104 i32)
  (local $current|105 i32)
  (local $pos|106 i32)
  (local $masked|107 i32)
  (local $index|108 i32)
  (local $a|109 f32)
  (local $b|110 f32)
  (local $d|111 f32)
  (local $phase|112 i32)
  (local $u|113 i32)
  (local $frac|114 f32)
  (local $sample|115 f32)
  (local $mask|116 i32)
  (local $table|117 i32)
  (local $phase|118 i32)
  (local $offset|119 i32)
  (local $current|120 i32)
  (local $pos|121 i32)
  (local $masked|122 i32)
  (local $index|123 i32)
  (local $a|124 f32)
  (local $b|125 f32)
  (local $d|126 f32)
  (local $phase|127 i32)
  (local $u|128 i32)
  (local $frac|129 f32)
  (local $sample|130 f32)
  (local $mask|131 i32)
  (local $table|132 i32)
  (local $phase|133 i32)
  (local $offset|134 i32)
  (local $current|135 i32)
  (local $pos|136 i32)
  (local $masked|137 i32)
  (local $index|138 i32)
  (local $a|139 f32)
  (local $b|140 f32)
  (local $d|141 f32)
  (local $phase|142 i32)
  (local $u|143 i32)
  (local $frac|144 f32)
  (local $sample|145 f32)
  (local $mask|146 i32)
  (local $table|147 i32)
  (local $phase|148 i32)
  (local $offset|149 i32)
  (local $current|150 i32)
  (local $pos|151 i32)
  (local $masked|152 i32)
  (local $index|153 i32)
  (local $a|154 f32)
  (local $b|155 f32)
  (local $d|156 f32)
  (local $phase|157 i32)
  (local $u|158 i32)
  (local $frac|159 f32)
  (local $sample|160 f32)
  (local $mask|161 i32)
  (local $table|162 i32)
  (local $phase|163 i32)
  (local $offset|164 i32)
  (local $current|165 i32)
  (local $pos|166 i32)
  (local $masked|167 i32)
  (local $index|168 i32)
  (local $a|169 f32)
  (local $b|170 f32)
  (local $d|171 f32)
  (local $phase|172 i32)
  (local $u|173 i32)
  (local $frac|174 f32)
  (local $sample|175 f32)
  (local $mask|176 i32)
  (local $table|177 i32)
  (local $phase|178 i32)
  (local $offset|179 i32)
  (local $current|180 i32)
  (local $pos|181 i32)
  (local $masked|182 i32)
  (local $index|183 i32)
  (local $a|184 f32)
  (local $b|185 f32)
  (local $d|186 f32)
  (local $phase|187 i32)
  (local $u|188 i32)
  (local $frac|189 f32)
  (local $sample|190 f32)
  (local $mask|191 i32)
  (local $table|192 i32)
  (local $phase|193 i32)
  (local $offset|194 i32)
  (local $current|195 i32)
  (local $pos|196 i32)
  (local $masked|197 i32)
  (local $index|198 i32)
  (local $a|199 f32)
  (local $b|200 f32)
  (local $d|201 f32)
  (local $phase|202 i32)
  (local $u|203 i32)
  (local $frac|204 f32)
  (local $sample|205 f32)
  (local $mask|206 i32)
  (local $table|207 i32)
  (local $phase|208 i32)
  (local $offset|209 i32)
  (local $current|210 i32)
  (local $pos|211 i32)
  (local $masked|212 i32)
  (local $index|213 i32)
  (local $a|214 f32)
  (local $b|215 f32)
  (local $d|216 f32)
  (local $phase|217 i32)
  (local $u|218 i32)
  (local $frac|219 f32)
  (local $sample|220 f32)
  (local $mask|221 i32)
  (local $table|222 i32)
  (local $phase|223 i32)
  (local $offset|224 i32)
  (local $current|225 i32)
  (local $pos|226 i32)
  (local $masked|227 i32)
  (local $index|228 i32)
  (local $a|229 f32)
  (local $b|230 f32)
  (local $d|231 f32)
  (local $phase|232 i32)
  (local $u|233 i32)
  (local $frac|234 f32)
  (local $sample|235 f32)
  (local $mask|236 i32)
  (local $table|237 i32)
  (local $phase|238 i32)
  (local $offset|239 i32)
  (local $current|240 i32)
  (local $pos|241 i32)
  (local $masked|242 i32)
  (local $index|243 i32)
  (local $a|244 f32)
  (local $b|245 f32)
  (local $d|246 f32)
  (local $phase|247 i32)
  (local $u|248 i32)
  (local $frac|249 f32)
  (local $sample|250 f32)
  local.get $targetPtr
  local.get $begin
  i32.const 2
  i32.shl
  i32.add
  local.set $target
  v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000
  local.set $sv
  local.get $target
  local.get $end
  local.get $begin
  i32.sub
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $target
   local.get $end
   i32.lt_u
   if
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.0 (result f32)
     local.get $mask
     local.set $mask|11
     local.get $table
     local.set $table|12
     local.get $phase
     local.set $phase|13
     local.get $offset
     local.set $offset|14
     local.get $phase|13
     local.get $offset|14
     i32.add
     local.set $current
     local.get $current
     i32.const 14
     i32.shr_u
     local.set $pos
     local.get $pos
     local.get $mask|11
     i32.and
     local.set $masked
     local.get $table|12
     local.get $masked
     i32.add
     local.set $index
     local.get $index
     f32.load $0
     local.set $a
     local.get $index
     f32.load $0 offset=4
     local.set $b
     local.get $b
     local.get $a
     f32.sub
     local.set $d
     block $assembly/util/phaseFrac|inlined.1 (result f32)
      local.get $current
      local.set $phase|22
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|22
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u
      local.get $u
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.1
     end
     local.set $frac
     local.get $a
     local.get $frac
     local.get $d
     f32.mul
     f32.add
     local.set $sample
     local.get $sample
     br $assembly/core/wavetable/readAtPhase|inlined.0
    end
    f32x4.replace_lane 0
    local.set $sv
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.1 (result f32)
     local.get $mask
     local.set $mask|26
     local.get $table
     local.set $table|27
     local.get $phase
     local.set $phase|28
     local.get $offset
     local.set $offset|29
     local.get $phase|28
     local.get $offset|29
     i32.add
     local.set $current|30
     local.get $current|30
     i32.const 14
     i32.shr_u
     local.set $pos|31
     local.get $pos|31
     local.get $mask|26
     i32.and
     local.set $masked|32
     local.get $table|27
     local.get $masked|32
     i32.add
     local.set $index|33
     local.get $index|33
     f32.load $0
     local.set $a|34
     local.get $index|33
     f32.load $0 offset=4
     local.set $b|35
     local.get $b|35
     local.get $a|34
     f32.sub
     local.set $d|36
     block $assembly/util/phaseFrac|inlined.2 (result f32)
      local.get $current|30
      local.set $phase|37
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|37
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|38
      local.get $u|38
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.2
     end
     local.set $frac|39
     local.get $a|34
     local.get $frac|39
     local.get $d|36
     f32.mul
     f32.add
     local.set $sample|40
     local.get $sample|40
     br $assembly/core/wavetable/readAtPhase|inlined.1
    end
    f32x4.replace_lane 1
    local.set $sv
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.2 (result f32)
     local.get $mask
     local.set $mask|41
     local.get $table
     local.set $table|42
     local.get $phase
     local.set $phase|43
     local.get $offset
     local.set $offset|44
     local.get $phase|43
     local.get $offset|44
     i32.add
     local.set $current|45
     local.get $current|45
     i32.const 14
     i32.shr_u
     local.set $pos|46
     local.get $pos|46
     local.get $mask|41
     i32.and
     local.set $masked|47
     local.get $table|42
     local.get $masked|47
     i32.add
     local.set $index|48
     local.get $index|48
     f32.load $0
     local.set $a|49
     local.get $index|48
     f32.load $0 offset=4
     local.set $b|50
     local.get $b|50
     local.get $a|49
     f32.sub
     local.set $d|51
     block $assembly/util/phaseFrac|inlined.3 (result f32)
      local.get $current|45
      local.set $phase|52
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|52
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|53
      local.get $u|53
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.3
     end
     local.set $frac|54
     local.get $a|49
     local.get $frac|54
     local.get $d|51
     f32.mul
     f32.add
     local.set $sample|55
     local.get $sample|55
     br $assembly/core/wavetable/readAtPhase|inlined.2
    end
    f32x4.replace_lane 2
    local.set $sv
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.3 (result f32)
     local.get $mask
     local.set $mask|56
     local.get $table
     local.set $table|57
     local.get $phase
     local.set $phase|58
     local.get $offset
     local.set $offset|59
     local.get $phase|58
     local.get $offset|59
     i32.add
     local.set $current|60
     local.get $current|60
     i32.const 14
     i32.shr_u
     local.set $pos|61
     local.get $pos|61
     local.get $mask|56
     i32.and
     local.set $masked|62
     local.get $table|57
     local.get $masked|62
     i32.add
     local.set $index|63
     local.get $index|63
     f32.load $0
     local.set $a|64
     local.get $index|63
     f32.load $0 offset=4
     local.set $b|65
     local.get $b|65
     local.get $a|64
     f32.sub
     local.set $d|66
     block $assembly/util/phaseFrac|inlined.4 (result f32)
      local.get $current|60
      local.set $phase|67
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|67
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|68
      local.get $u|68
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.4
     end
     local.set $frac|69
     local.get $a|64
     local.get $frac|69
     local.get $d|66
     f32.mul
     f32.add
     local.set $sample|70
     local.get $sample|70
     br $assembly/core/wavetable/readAtPhase|inlined.3
    end
    f32x4.replace_lane 3
    local.set $sv
    local.get $target
    local.get $sv
    v128.store $0
    local.get $target
    i32.const 16
    i32.add
    local.set $target
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.4 (result f32)
     local.get $mask
     local.set $mask|71
     local.get $table
     local.set $table|72
     local.get $phase
     local.set $phase|73
     local.get $offset
     local.set $offset|74
     local.get $phase|73
     local.get $offset|74
     i32.add
     local.set $current|75
     local.get $current|75
     i32.const 14
     i32.shr_u
     local.set $pos|76
     local.get $pos|76
     local.get $mask|71
     i32.and
     local.set $masked|77
     local.get $table|72
     local.get $masked|77
     i32.add
     local.set $index|78
     local.get $index|78
     f32.load $0
     local.set $a|79
     local.get $index|78
     f32.load $0 offset=4
     local.set $b|80
     local.get $b|80
     local.get $a|79
     f32.sub
     local.set $d|81
     block $assembly/util/phaseFrac|inlined.5 (result f32)
      local.get $current|75
      local.set $phase|82
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|82
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|83
      local.get $u|83
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.5
     end
     local.set $frac|84
     local.get $a|79
     local.get $frac|84
     local.get $d|81
     f32.mul
     f32.add
     local.set $sample|85
     local.get $sample|85
     br $assembly/core/wavetable/readAtPhase|inlined.4
    end
    f32x4.replace_lane 0
    local.set $sv
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.5 (result f32)
     local.get $mask
     local.set $mask|86
     local.get $table
     local.set $table|87
     local.get $phase
     local.set $phase|88
     local.get $offset
     local.set $offset|89
     local.get $phase|88
     local.get $offset|89
     i32.add
     local.set $current|90
     local.get $current|90
     i32.const 14
     i32.shr_u
     local.set $pos|91
     local.get $pos|91
     local.get $mask|86
     i32.and
     local.set $masked|92
     local.get $table|87
     local.get $masked|92
     i32.add
     local.set $index|93
     local.get $index|93
     f32.load $0
     local.set $a|94
     local.get $index|93
     f32.load $0 offset=4
     local.set $b|95
     local.get $b|95
     local.get $a|94
     f32.sub
     local.set $d|96
     block $assembly/util/phaseFrac|inlined.6 (result f32)
      local.get $current|90
      local.set $phase|97
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|97
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|98
      local.get $u|98
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.6
     end
     local.set $frac|99
     local.get $a|94
     local.get $frac|99
     local.get $d|96
     f32.mul
     f32.add
     local.set $sample|100
     local.get $sample|100
     br $assembly/core/wavetable/readAtPhase|inlined.5
    end
    f32x4.replace_lane 1
    local.set $sv
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.6 (result f32)
     local.get $mask
     local.set $mask|101
     local.get $table
     local.set $table|102
     local.get $phase
     local.set $phase|103
     local.get $offset
     local.set $offset|104
     local.get $phase|103
     local.get $offset|104
     i32.add
     local.set $current|105
     local.get $current|105
     i32.const 14
     i32.shr_u
     local.set $pos|106
     local.get $pos|106
     local.get $mask|101
     i32.and
     local.set $masked|107
     local.get $table|102
     local.get $masked|107
     i32.add
     local.set $index|108
     local.get $index|108
     f32.load $0
     local.set $a|109
     local.get $index|108
     f32.load $0 offset=4
     local.set $b|110
     local.get $b|110
     local.get $a|109
     f32.sub
     local.set $d|111
     block $assembly/util/phaseFrac|inlined.7 (result f32)
      local.get $current|105
      local.set $phase|112
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|112
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|113
      local.get $u|113
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.7
     end
     local.set $frac|114
     local.get $a|109
     local.get $frac|114
     local.get $d|111
     f32.mul
     f32.add
     local.set $sample|115
     local.get $sample|115
     br $assembly/core/wavetable/readAtPhase|inlined.6
    end
    f32x4.replace_lane 2
    local.set $sv
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.7 (result f32)
     local.get $mask
     local.set $mask|116
     local.get $table
     local.set $table|117
     local.get $phase
     local.set $phase|118
     local.get $offset
     local.set $offset|119
     local.get $phase|118
     local.get $offset|119
     i32.add
     local.set $current|120
     local.get $current|120
     i32.const 14
     i32.shr_u
     local.set $pos|121
     local.get $pos|121
     local.get $mask|116
     i32.and
     local.set $masked|122
     local.get $table|117
     local.get $masked|122
     i32.add
     local.set $index|123
     local.get $index|123
     f32.load $0
     local.set $a|124
     local.get $index|123
     f32.load $0 offset=4
     local.set $b|125
     local.get $b|125
     local.get $a|124
     f32.sub
     local.set $d|126
     block $assembly/util/phaseFrac|inlined.8 (result f32)
      local.get $current|120
      local.set $phase|127
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|127
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|128
      local.get $u|128
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.8
     end
     local.set $frac|129
     local.get $a|124
     local.get $frac|129
     local.get $d|126
     f32.mul
     f32.add
     local.set $sample|130
     local.get $sample|130
     br $assembly/core/wavetable/readAtPhase|inlined.7
    end
    f32x4.replace_lane 3
    local.set $sv
    local.get $target
    local.get $sv
    v128.store $0
    local.get $target
    i32.const 16
    i32.add
    local.set $target
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.8 (result f32)
     local.get $mask
     local.set $mask|131
     local.get $table
     local.set $table|132
     local.get $phase
     local.set $phase|133
     local.get $offset
     local.set $offset|134
     local.get $phase|133
     local.get $offset|134
     i32.add
     local.set $current|135
     local.get $current|135
     i32.const 14
     i32.shr_u
     local.set $pos|136
     local.get $pos|136
     local.get $mask|131
     i32.and
     local.set $masked|137
     local.get $table|132
     local.get $masked|137
     i32.add
     local.set $index|138
     local.get $index|138
     f32.load $0
     local.set $a|139
     local.get $index|138
     f32.load $0 offset=4
     local.set $b|140
     local.get $b|140
     local.get $a|139
     f32.sub
     local.set $d|141
     block $assembly/util/phaseFrac|inlined.9 (result f32)
      local.get $current|135
      local.set $phase|142
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|142
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|143
      local.get $u|143
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.9
     end
     local.set $frac|144
     local.get $a|139
     local.get $frac|144
     local.get $d|141
     f32.mul
     f32.add
     local.set $sample|145
     local.get $sample|145
     br $assembly/core/wavetable/readAtPhase|inlined.8
    end
    f32x4.replace_lane 0
    local.set $sv
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.9 (result f32)
     local.get $mask
     local.set $mask|146
     local.get $table
     local.set $table|147
     local.get $phase
     local.set $phase|148
     local.get $offset
     local.set $offset|149
     local.get $phase|148
     local.get $offset|149
     i32.add
     local.set $current|150
     local.get $current|150
     i32.const 14
     i32.shr_u
     local.set $pos|151
     local.get $pos|151
     local.get $mask|146
     i32.and
     local.set $masked|152
     local.get $table|147
     local.get $masked|152
     i32.add
     local.set $index|153
     local.get $index|153
     f32.load $0
     local.set $a|154
     local.get $index|153
     f32.load $0 offset=4
     local.set $b|155
     local.get $b|155
     local.get $a|154
     f32.sub
     local.set $d|156
     block $assembly/util/phaseFrac|inlined.10 (result f32)
      local.get $current|150
      local.set $phase|157
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|157
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|158
      local.get $u|158
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.10
     end
     local.set $frac|159
     local.get $a|154
     local.get $frac|159
     local.get $d|156
     f32.mul
     f32.add
     local.set $sample|160
     local.get $sample|160
     br $assembly/core/wavetable/readAtPhase|inlined.9
    end
    f32x4.replace_lane 1
    local.set $sv
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.10 (result f32)
     local.get $mask
     local.set $mask|161
     local.get $table
     local.set $table|162
     local.get $phase
     local.set $phase|163
     local.get $offset
     local.set $offset|164
     local.get $phase|163
     local.get $offset|164
     i32.add
     local.set $current|165
     local.get $current|165
     i32.const 14
     i32.shr_u
     local.set $pos|166
     local.get $pos|166
     local.get $mask|161
     i32.and
     local.set $masked|167
     local.get $table|162
     local.get $masked|167
     i32.add
     local.set $index|168
     local.get $index|168
     f32.load $0
     local.set $a|169
     local.get $index|168
     f32.load $0 offset=4
     local.set $b|170
     local.get $b|170
     local.get $a|169
     f32.sub
     local.set $d|171
     block $assembly/util/phaseFrac|inlined.11 (result f32)
      local.get $current|165
      local.set $phase|172
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|172
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|173
      local.get $u|173
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.11
     end
     local.set $frac|174
     local.get $a|169
     local.get $frac|174
     local.get $d|171
     f32.mul
     f32.add
     local.set $sample|175
     local.get $sample|175
     br $assembly/core/wavetable/readAtPhase|inlined.10
    end
    f32x4.replace_lane 2
    local.set $sv
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.11 (result f32)
     local.get $mask
     local.set $mask|176
     local.get $table
     local.set $table|177
     local.get $phase
     local.set $phase|178
     local.get $offset
     local.set $offset|179
     local.get $phase|178
     local.get $offset|179
     i32.add
     local.set $current|180
     local.get $current|180
     i32.const 14
     i32.shr_u
     local.set $pos|181
     local.get $pos|181
     local.get $mask|176
     i32.and
     local.set $masked|182
     local.get $table|177
     local.get $masked|182
     i32.add
     local.set $index|183
     local.get $index|183
     f32.load $0
     local.set $a|184
     local.get $index|183
     f32.load $0 offset=4
     local.set $b|185
     local.get $b|185
     local.get $a|184
     f32.sub
     local.set $d|186
     block $assembly/util/phaseFrac|inlined.12 (result f32)
      local.get $current|180
      local.set $phase|187
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|187
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|188
      local.get $u|188
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.12
     end
     local.set $frac|189
     local.get $a|184
     local.get $frac|189
     local.get $d|186
     f32.mul
     f32.add
     local.set $sample|190
     local.get $sample|190
     br $assembly/core/wavetable/readAtPhase|inlined.11
    end
    f32x4.replace_lane 3
    local.set $sv
    local.get $target
    local.get $sv
    v128.store $0
    local.get $target
    i32.const 16
    i32.add
    local.set $target
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.12 (result f32)
     local.get $mask
     local.set $mask|191
     local.get $table
     local.set $table|192
     local.get $phase
     local.set $phase|193
     local.get $offset
     local.set $offset|194
     local.get $phase|193
     local.get $offset|194
     i32.add
     local.set $current|195
     local.get $current|195
     i32.const 14
     i32.shr_u
     local.set $pos|196
     local.get $pos|196
     local.get $mask|191
     i32.and
     local.set $masked|197
     local.get $table|192
     local.get $masked|197
     i32.add
     local.set $index|198
     local.get $index|198
     f32.load $0
     local.set $a|199
     local.get $index|198
     f32.load $0 offset=4
     local.set $b|200
     local.get $b|200
     local.get $a|199
     f32.sub
     local.set $d|201
     block $assembly/util/phaseFrac|inlined.13 (result f32)
      local.get $current|195
      local.set $phase|202
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|202
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|203
      local.get $u|203
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.13
     end
     local.set $frac|204
     local.get $a|199
     local.get $frac|204
     local.get $d|201
     f32.mul
     f32.add
     local.set $sample|205
     local.get $sample|205
     br $assembly/core/wavetable/readAtPhase|inlined.12
    end
    f32x4.replace_lane 0
    local.set $sv
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.13 (result f32)
     local.get $mask
     local.set $mask|206
     local.get $table
     local.set $table|207
     local.get $phase
     local.set $phase|208
     local.get $offset
     local.set $offset|209
     local.get $phase|208
     local.get $offset|209
     i32.add
     local.set $current|210
     local.get $current|210
     i32.const 14
     i32.shr_u
     local.set $pos|211
     local.get $pos|211
     local.get $mask|206
     i32.and
     local.set $masked|212
     local.get $table|207
     local.get $masked|212
     i32.add
     local.set $index|213
     local.get $index|213
     f32.load $0
     local.set $a|214
     local.get $index|213
     f32.load $0 offset=4
     local.set $b|215
     local.get $b|215
     local.get $a|214
     f32.sub
     local.set $d|216
     block $assembly/util/phaseFrac|inlined.14 (result f32)
      local.get $current|210
      local.set $phase|217
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|217
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|218
      local.get $u|218
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.14
     end
     local.set $frac|219
     local.get $a|214
     local.get $frac|219
     local.get $d|216
     f32.mul
     f32.add
     local.set $sample|220
     local.get $sample|220
     br $assembly/core/wavetable/readAtPhase|inlined.13
    end
    f32x4.replace_lane 1
    local.set $sv
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.14 (result f32)
     local.get $mask
     local.set $mask|221
     local.get $table
     local.set $table|222
     local.get $phase
     local.set $phase|223
     local.get $offset
     local.set $offset|224
     local.get $phase|223
     local.get $offset|224
     i32.add
     local.set $current|225
     local.get $current|225
     i32.const 14
     i32.shr_u
     local.set $pos|226
     local.get $pos|226
     local.get $mask|221
     i32.and
     local.set $masked|227
     local.get $table|222
     local.get $masked|227
     i32.add
     local.set $index|228
     local.get $index|228
     f32.load $0
     local.set $a|229
     local.get $index|228
     f32.load $0 offset=4
     local.set $b|230
     local.get $b|230
     local.get $a|229
     f32.sub
     local.set $d|231
     block $assembly/util/phaseFrac|inlined.15 (result f32)
      local.get $current|225
      local.set $phase|232
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|232
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|233
      local.get $u|233
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.15
     end
     local.set $frac|234
     local.get $a|229
     local.get $frac|234
     local.get $d|231
     f32.mul
     f32.add
     local.set $sample|235
     local.get $sample|235
     br $assembly/core/wavetable/readAtPhase|inlined.14
    end
    f32x4.replace_lane 2
    local.set $sv
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $sv
    block $assembly/core/wavetable/readAtPhase|inlined.15 (result f32)
     local.get $mask
     local.set $mask|236
     local.get $table
     local.set $table|237
     local.get $phase
     local.set $phase|238
     local.get $offset
     local.set $offset|239
     local.get $phase|238
     local.get $offset|239
     i32.add
     local.set $current|240
     local.get $current|240
     i32.const 14
     i32.shr_u
     local.set $pos|241
     local.get $pos|241
     local.get $mask|236
     i32.and
     local.set $masked|242
     local.get $table|237
     local.get $masked|242
     i32.add
     local.set $index|243
     local.get $index|243
     f32.load $0
     local.set $a|244
     local.get $index|243
     f32.load $0 offset=4
     local.set $b|245
     local.get $b|245
     local.get $a|244
     f32.sub
     local.set $d|246
     block $assembly/util/phaseFrac|inlined.16 (result f32)
      local.get $current|240
      local.set $phase|247
      i32.const 1065353216
      i32.const 8388480
      local.get $phase|247
      i32.and
      i32.const 7
      i32.shl
      i32.or
      local.set $u|248
      local.get $u|248
      f32.reinterpret_i32
      f32.const 1
      f32.sub
      br $assembly/util/phaseFrac|inlined.16
     end
     local.set $frac|249
     local.get $a|244
     local.get $frac|249
     local.get $d|246
     f32.mul
     f32.add
     local.set $sample|250
     local.get $sample|250
     br $assembly/core/wavetable/readAtPhase|inlined.15
    end
    f32x4.replace_lane 3
    local.set $sv
    local.get $target
    local.get $sv
    v128.store $0
    local.get $target
    i32.const 16
    i32.add
    local.set $target
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    br $while-continue|0
   end
  end
  local.get $phase
  return
 )
 (func $assembly/gen/osc/Osc#_audio (param $this i32) (param $begin i32) (param $end i32) (param $targetPtr i32)
  local.get $this
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  local.get $this
  call $assembly/gen/osc/Osc#get:_table@override
  local.get $this
  call $assembly/gen/osc/Osc#get:_mask@override
  local.get $this
  call $assembly/gen/osc/Osc#get:_phase
  local.get $this
  call $assembly/gen/osc/Osc#get:_offsetU32
  local.get $this
  call $assembly/gen/osc/Osc#get:_step
  local.get $begin
  local.get $end
  local.get $targetPtr
  call $assembly/core/wavetable/Wavetable#read
  call $assembly/gen/osc/Osc#set:_phase
 )
 (func $assembly/gen/sample/Sample#get:_phase (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=24
 )
 (func $assembly/gen/sample/Sample#get:_floats (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=16
 )
 (func $assembly/util/cubicFrac (param $floats i32) (param $index i32) (param $fr f32) (param $mask i32) (result f32)
  (local $i i32)
  (local $xm f32)
  (local $x0 f32)
  (local $x1 f32)
  (local $x2 f32)
  (local $a f32)
  (local $b f32)
  (local $c f32)
  local.get $index
  local.set $i
  local.get $floats
  local.get $i
  i32.const 1
  i32.sub
  local.get $mask
  i32.and
  call $~lib/staticarray/StaticArray<f32>#__get
  local.set $xm
  local.get $floats
  local.get $i
  local.get $mask
  i32.and
  call $~lib/staticarray/StaticArray<f32>#__get
  local.set $x0
  local.get $floats
  local.get $i
  i32.const 1
  i32.add
  local.get $mask
  i32.and
  call $~lib/staticarray/StaticArray<f32>#__get
  local.set $x1
  local.get $floats
  local.get $i
  i32.const 2
  i32.add
  local.get $mask
  i32.and
  call $~lib/staticarray/StaticArray<f32>#__get
  local.set $x2
  f32.const 3
  local.get $x0
  local.get $x1
  f32.sub
  f32.mul
  local.get $xm
  f32.sub
  local.get $x2
  f32.add
  f32.const 0.5
  f32.mul
  local.set $a
  f32.const 2
  local.get $x1
  f32.mul
  local.get $xm
  f32.add
  f32.const 5
  local.get $x0
  f32.mul
  local.get $x2
  f32.add
  f32.const 0.5
  f32.mul
  f32.sub
  local.set $b
  local.get $x1
  local.get $xm
  f32.sub
  f32.const 0.5
  f32.mul
  local.set $c
  local.get $a
  local.get $fr
  f32.mul
  local.get $b
  f32.add
  local.get $fr
  f32.mul
  local.get $c
  f32.add
  local.get $fr
  f32.mul
  local.get $x0
  f32.add
  return
 )
 (func $assembly/gen/sample/Sample#_audio (param $this i32) (param $begin i32) (param $end i32) (param $out i32)
  (local $mask i32)
  (local $step i32)
  (local $offsetCurrent f64)
  (local $offsetTarget f64)
  (local $phase i32)
  (local $index i32)
  (local $sample f32)
  (local $frac f32)
  (local $offset i32)
  (local $i i32)
  (local $phase|14 i32)
  (local $u i32)
  (local $phase|16 i32)
  (local $u|17 i32)
  (local $phase|18 i32)
  (local $u|19 i32)
  (local $phase|20 i32)
  (local $u|21 i32)
  (local $phase|22 i32)
  (local $u|23 i32)
  (local $phase|24 i32)
  (local $u|25 i32)
  (local $phase|26 i32)
  (local $u|27 i32)
  (local $phase|28 i32)
  (local $u|29 i32)
  (local $phase|30 i32)
  (local $u|31 i32)
  (local $phase|32 i32)
  (local $u|33 i32)
  (local $phase|34 i32)
  (local $u|35 i32)
  (local $phase|36 i32)
  (local $u|37 i32)
  (local $phase|38 i32)
  (local $u|39 i32)
  (local $phase|40 i32)
  (local $u|41 i32)
  (local $phase|42 i32)
  (local $u|43 i32)
  (local $phase|44 i32)
  (local $u|45 i32)
  local.get $this
  call $assembly/gen/sample/Sample#get:_mask
  local.set $mask
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:rateStep
  i32.const 2
  i32.shr_u
  local.set $step
  local.get $this
  call $assembly/gen/sample/Sample#get:_offsetCurrent
  local.set $offsetCurrent
  local.get $this
  call $assembly/gen/sample/Sample#get:_offsetTarget
  local.set $offsetTarget
  local.get $this
  call $assembly/gen/sample/Sample#get:_phase
  local.set $phase
  local.get $begin
  local.set $i
  local.get $out
  local.get $begin
  i32.const 2
  i32.shl
  i32.add
  local.set $out
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.17 (result f32)
     local.get $phase
     local.set $phase|14
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|14
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u
     local.get $u
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.17
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.18 (result f32)
     local.get $phase
     local.set $phase|16
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|16
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|17
     local.get $u|17
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.18
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.19 (result f32)
     local.get $phase
     local.set $phase|18
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|18
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|19
     local.get $u|19
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.19
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.20 (result f32)
     local.get $phase
     local.set $phase|20
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|20
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|21
     local.get $u|21
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.20
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.21 (result f32)
     local.get $phase
     local.set $phase|22
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|22
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|23
     local.get $u|23
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.21
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.22 (result f32)
     local.get $phase
     local.set $phase|24
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|24
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|25
     local.get $u|25
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.22
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.23 (result f32)
     local.get $phase
     local.set $phase|26
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|26
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|27
     local.get $u|27
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.23
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.24 (result f32)
     local.get $phase
     local.set $phase|28
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|28
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|29
     local.get $u|29
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.24
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.25 (result f32)
     local.get $phase
     local.set $phase|30
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|30
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|31
     local.get $u|31
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.25
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.26 (result f32)
     local.get $phase
     local.set $phase|32
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|32
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|33
     local.get $u|33
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.26
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.27 (result f32)
     local.get $phase
     local.set $phase|34
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|34
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|35
     local.get $u|35
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.27
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.28 (result f32)
     local.get $phase
     local.set $phase|36
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|36
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|37
     local.get $u|37
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.28
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.29 (result f32)
     local.get $phase
     local.set $phase|38
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|38
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|39
     local.get $u|39
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.29
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.30 (result f32)
     local.get $phase
     local.set $phase|40
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|40
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|41
     local.get $u|41
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.30
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.31 (result f32)
     local.get $phase
     local.set $phase|42
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|42
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|43
     local.get $u|43
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.31
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $phase
    i32.const 14
    i32.shr_u
    local.set $offset
    local.get $offset
    local.get $offsetCurrent
    i32.trunc_sat_f64_u
    i32.add
    local.get $mask
    i32.and
    local.set $index
    block $assembly/util/phaseFrac|inlined.32 (result f32)
     local.get $phase
     local.set $phase|44
     i32.const 1065353216
     i32.const 8388480
     local.get $phase|44
     i32.and
     i32.const 7
     i32.shl
     i32.or
     local.set $u|45
     local.get $u|45
     f32.reinterpret_i32
     f32.const 1
     f32.sub
     br $assembly/util/phaseFrac|inlined.32
    end
    local.set $frac
    local.get $this
    call $assembly/gen/sample/Sample#get:_floats
    local.get $index
    local.get $frac
    local.get $mask
    call $assembly/util/cubicFrac
    local.set $sample
    local.get $out
    local.get $sample
    f32.store $0
    local.get $out
    i32.const 4
    i32.add
    local.set $out
    local.get $phase
    local.get $step
    i32.add
    local.set $phase
    local.get $offsetCurrent
    local.get $offsetTarget
    local.get $offsetCurrent
    f64.sub
    f64.const 0.0008
    f64.mul
    f64.add
    local.set $offsetCurrent
    local.get $i
    i32.const 16
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.get $phase
  call $assembly/gen/sample/Sample#set:_phase
  local.get $this
  local.get $offsetCurrent
  call $assembly/gen/sample/Sample#set:_offsetCurrent
 )
 (func $assembly/gen/exp/Exp#get:_table (param $this i32) (result i32)
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  call $assembly/core/wavetable/Wavetable#get:exp
  return
 )
 (func $assembly/gen/noise/Noise#get:_table (param $this i32) (result i32)
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  call $assembly/core/wavetable/Wavetable#get:noise
  return
 )
 (func $assembly/gen/sin/Sin#get:_table (param $this i32) (result i32)
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  call $assembly/core/wavetable/Wavetable#get:sine
  return
 )
 (func $assembly/gen/aosc/AOsc#get:_tables (param $this i32) (result i32)
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  call $assembly/core/wavetable/Wavetable#get:antialias
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:saw
  return
 )
 (func $assembly/gen/aosc/AOsc#get:_tableIndex (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=40
 )
 (func $assembly/gen/aosc/AOsc#get:_table (param $this i32) (result i32)
  local.get $this
  call $assembly/gen/aosc/AOsc#get:_tables@override
  local.get $this
  call $assembly/gen/aosc/AOsc#get:_tableIndex
  call $~lib/staticarray/StaticArray<~lib/staticarray/StaticArray<f32>>#__get
  return
 )
 (func $assembly/core/antialias-wavetable/AntialiasWavetable#get:tableMask (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=36
 )
 (func $assembly/gen/aosc/AOsc#get:_mask (param $this i32) (result i32)
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  call $assembly/core/wavetable/Wavetable#get:antialias
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:tableMask
  return
 )
 (func $assembly/gen/ramp/Ramp#get:_tables (param $this i32) (result i32)
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  call $assembly/core/wavetable/Wavetable#get:antialias
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:ramp
  return
 )
 (func $assembly/gen/saw/Saw#get:_tables (param $this i32) (result i32)
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  call $assembly/core/wavetable/Wavetable#get:antialias
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:saw
  return
 )
 (func $assembly/gen/sqr/Sqr#get:_tables (param $this i32) (result i32)
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  call $assembly/core/wavetable/Wavetable#get:antialias
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:sqr
  return
 )
 (func $assembly/gen/tri/Tri#get:_tables (param $this i32) (result i32)
  local.get $this
  call $assembly/gen/gen/Gen#get:_engine
  call $assembly/core/engine/Engine#get:wavetable
  call $assembly/core/wavetable/Wavetable#get:antialias
  call $assembly/core/antialias-wavetable/AntialiasWavetable#get:tri
  return
 )
 (func $assembly/gen/gen/Gen#_update@override (param $0 i32)
  (local $1 i32)
  block $default
   block $case27
    block $case26
     block $case25
      block $case24
       block $case23
        block $case22
         block $case21
          block $case20
           block $case19
            block $case18
             block $case17
              block $case16
               block $case15
                block $case14
                 block $case13
                  block $case12
                   block $case11
                    block $case10
                     block $case9
                      block $case8
                       block $case7
                        block $case6
                         block $case5
                          block $case4
                           block $case3
                            block $case2
                             block $case1
                              block $case0
                               local.get $0
                               i32.const 8
                               i32.sub
                               i32.load $0
                               local.set $1
                               local.get $1
                               i32.const 45
                               i32.eq
                               br_if $case0
                               local.get $1
                               i32.const 42
                               i32.eq
                               br_if $case1
                               local.get $1
                               i32.const 41
                               i32.eq
                               br_if $case2
                               local.get $1
                               i32.const 47
                               i32.eq
                               br_if $case3
                               local.get $1
                               i32.const 37
                               i32.eq
                               br_if $case4
                               local.get $1
                               i32.const 46
                               i32.eq
                               br_if $case5
                               local.get $1
                               i32.const 43
                               i32.eq
                               br_if $case6
                               local.get $1
                               i32.const 44
                               i32.eq
                               br_if $case7
                               local.get $1
                               i32.const 66
                               i32.eq
                               br_if $case8
                               local.get $1
                               i32.const 58
                               i32.eq
                               br_if $case9
                               local.get $1
                               i32.const 33
                               i32.eq
                               br_if $case10
                               local.get $1
                               i32.const 60
                               i32.eq
                               br_if $case11
                               local.get $1
                               i32.const 67
                               i32.eq
                               br_if $case12
                               local.get $1
                               i32.const 35
                               i32.eq
                               br_if $case13
                               local.get $1
                               i32.const 57
                               i32.eq
                               br_if $case14
                               local.get $1
                               i32.const 55
                               i32.eq
                               br_if $case15
                               local.get $1
                               i32.const 36
                               i32.eq
                               br_if $case16
                               local.get $1
                               i32.const 52
                               i32.eq
                               br_if $case17
                               local.get $1
                               i32.const 51
                               i32.eq
                               br_if $case18
                               local.get $1
                               i32.const 50
                               i32.eq
                               br_if $case19
                               local.get $1
                               i32.const 48
                               i32.eq
                               br_if $case20
                               local.get $1
                               i32.const 53
                               i32.eq
                               br_if $case21
                               local.get $1
                               i32.const 54
                               i32.eq
                               br_if $case22
                               local.get $1
                               i32.const 59
                               i32.eq
                               br_if $case23
                               local.get $1
                               i32.const 34
                               i32.eq
                               br_if $case24
                               local.get $1
                               i32.const 24
                               i32.eq
                               br_if $case25
                               local.get $1
                               i32.const 23
                               i32.eq
                               br_if $case25
                               local.get $1
                               i32.const 25
                               i32.eq
                               br_if $case25
                               local.get $1
                               i32.const 26
                               i32.eq
                               br_if $case25
                               local.get $1
                               i32.const 28
                               i32.eq
                               br_if $case25
                               local.get $1
                               i32.const 29
                               i32.eq
                               br_if $case25
                               local.get $1
                               i32.const 30
                               i32.eq
                               br_if $case25
                               local.get $1
                               i32.const 31
                               i32.eq
                               br_if $case25
                               local.get $1
                               i32.const 69
                               i32.eq
                               br_if $case26
                               local.get $1
                               i32.const 68
                               i32.eq
                               br_if $case26
                               local.get $1
                               i32.const 70
                               i32.eq
                               br_if $case26
                               local.get $1
                               i32.const 27
                               i32.eq
                               br_if $case27
                               local.get $1
                               i32.const 26
                               i32.eq
                               br_if $case27
                               local.get $1
                               i32.const 28
                               i32.eq
                               br_if $case27
                               local.get $1
                               i32.const 29
                               i32.eq
                               br_if $case27
                               local.get $1
                               i32.const 30
                               i32.eq
                               br_if $case27
                               br $default
                              end
                              local.get $0
                              call $assembly/gen/bap/Bap#_update
                              return
                             end
                             local.get $0
                             call $assembly/gen/bbp/Bbp#_update
                             return
                            end
                            local.get $0
                            call $assembly/gen/bhp/Bhp#_update
                            return
                           end
                           local.get $0
                           call $assembly/gen/bhs/Bhs#_update
                           return
                          end
                          local.get $0
                          call $assembly/gen/blp/Blp#_update
                          return
                         end
                         local.get $0
                         call $assembly/gen/bls/Bls#_update
                         return
                        end
                        local.get $0
                        call $assembly/gen/bno/Bno#_update
                        return
                       end
                       local.get $0
                       call $assembly/gen/bpk/Bpk#_update
                       return
                      end
                      local.get $0
                      call $assembly/gen/comp/Comp#_update
                      return
                     end
                     local.get $0
                     call $assembly/gen/daverb/Daverb#_update
                     return
                    end
                    local.get $0
                    call $assembly/gen/delay/Delay#_update
                    return
                   end
                   local.get $0
                   call $assembly/gen/diode/Diode#_update
                   return
                  end
                  local.get $0
                  call $assembly/gen/inc/Inc#_update
                  return
                 end
                 local.get $0
                 call $assembly/gen/lp/Lp#_update
                 return
                end
                local.get $0
                call $assembly/gen/mhp/Mhp#_update
                return
               end
               local.get $0
               call $assembly/gen/mlp/Mlp#_update
               return
              end
              local.get $0
              call $assembly/gen/rate/Rate#_update
              return
             end
             local.get $0
             call $assembly/gen/sap/Sap#_update
             return
            end
            local.get $0
            call $assembly/gen/sbp/Sbp#_update
            return
           end
           local.get $0
           call $assembly/gen/shp/Shp#_update
           return
          end
          local.get $0
          call $assembly/gen/slp/Slp#_update
          return
         end
         local.get $0
         call $assembly/gen/sno/Sno#_update
         return
        end
        local.get $0
        call $assembly/gen/spk/Spk#_update
        return
       end
       local.get $0
       call $assembly/gen/tanh/Tanh#_update
       return
      end
      local.get $0
      call $assembly/gen/tap/Tap#_update
      return
     end
     local.get $0
     call $assembly/gen/osc/Osc#_update
     return
    end
    local.get $0
    call $assembly/gen/sample/Sample#_update
    return
   end
   local.get $0
   call $assembly/gen/aosc/AOsc#_update
   return
  end
  local.get $0
  call $assembly/gen/gen/Gen#_update
 )
 (func $assembly/gen/gen/Gen#_reset@override (param $0 i32)
  (local $1 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.set $1
    local.get $1
    i32.const 33
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   call $assembly/gen/delay/Delay#_reset
   return
  end
  local.get $0
  call $assembly/gen/gen/Gen#_reset
 )
 (func $assembly/gen/gen/Gen#_audio@override (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  block $default
   block $case25
    block $case24
     block $case23
      block $case22
       block $case21
        block $case20
         block $case19
          block $case18
           block $case17
            block $case16
             block $case15
              block $case14
               block $case13
                block $case12
                 block $case11
                  block $case10
                   block $case9
                    block $case8
                     block $case7
                      block $case6
                       block $case5
                        block $case4
                         block $case3
                          block $case2
                           block $case1
                            block $case0
                             local.get $0
                             i32.const 8
                             i32.sub
                             i32.load $0
                             local.set $4
                             local.get $4
                             i32.const 64
                             i32.eq
                             br_if $case0
                             local.get $4
                             i32.const 65
                             i32.eq
                             br_if $case1
                             local.get $4
                             i32.const 66
                             i32.eq
                             br_if $case2
                             local.get $4
                             i32.const 58
                             i32.eq
                             br_if $case3
                             local.get $4
                             i32.const 32
                             i32.eq
                             br_if $case4
                             local.get $4
                             i32.const 61
                             i32.eq
                             br_if $case5
                             local.get $4
                             i32.const 63
                             i32.eq
                             br_if $case6
                             local.get $4
                             i32.const 62
                             i32.eq
                             br_if $case7
                             local.get $4
                             i32.const 33
                             i32.eq
                             br_if $case8
                             local.get $4
                             i32.const 60
                             i32.eq
                             br_if $case9
                             local.get $4
                             i32.const 67
                             i32.eq
                             br_if $case10
                             local.get $4
                             i32.const 35
                             i32.eq
                             br_if $case11
                             local.get $4
                             i32.const 57
                             i32.eq
                             br_if $case12
                             local.get $4
                             i32.const 55
                             i32.eq
                             br_if $case13
                             local.get $4
                             i32.const 52
                             i32.eq
                             br_if $case14
                             local.get $4
                             i32.const 51
                             i32.eq
                             br_if $case15
                             local.get $4
                             i32.const 50
                             i32.eq
                             br_if $case16
                             local.get $4
                             i32.const 48
                             i32.eq
                             br_if $case17
                             local.get $4
                             i32.const 53
                             i32.eq
                             br_if $case18
                             local.get $4
                             i32.const 54
                             i32.eq
                             br_if $case19
                             local.get $4
                             i32.const 59
                             i32.eq
                             br_if $case20
                             local.get $4
                             i32.const 34
                             i32.eq
                             br_if $case21
                             local.get $4
                             i32.const 22
                             i32.eq
                             br_if $case22
                             local.get $4
                             i32.const 38
                             i32.eq
                             br_if $case23
                             local.get $4
                             i32.const 37
                             i32.eq
                             br_if $case23
                             local.get $4
                             i32.const 41
                             i32.eq
                             br_if $case23
                             local.get $4
                             i32.const 42
                             i32.eq
                             br_if $case23
                             local.get $4
                             i32.const 43
                             i32.eq
                             br_if $case23
                             local.get $4
                             i32.const 44
                             i32.eq
                             br_if $case23
                             local.get $4
                             i32.const 45
                             i32.eq
                             br_if $case23
                             local.get $4
                             i32.const 46
                             i32.eq
                             br_if $case23
                             local.get $4
                             i32.const 47
                             i32.eq
                             br_if $case23
                             local.get $4
                             i32.const 24
                             i32.eq
                             br_if $case24
                             local.get $4
                             i32.const 23
                             i32.eq
                             br_if $case24
                             local.get $4
                             i32.const 25
                             i32.eq
                             br_if $case24
                             local.get $4
                             i32.const 27
                             i32.eq
                             br_if $case24
                             local.get $4
                             i32.const 26
                             i32.eq
                             br_if $case24
                             local.get $4
                             i32.const 28
                             i32.eq
                             br_if $case24
                             local.get $4
                             i32.const 29
                             i32.eq
                             br_if $case24
                             local.get $4
                             i32.const 30
                             i32.eq
                             br_if $case24
                             local.get $4
                             i32.const 31
                             i32.eq
                             br_if $case24
                             local.get $4
                             i32.const 69
                             i32.eq
                             br_if $case25
                             local.get $4
                             i32.const 68
                             i32.eq
                             br_if $case25
                             local.get $4
                             i32.const 70
                             i32.eq
                             br_if $case25
                             br $default
                            end
                            local.get $0
                            local.get $1
                            local.get $2
                            local.get $3
                            call $assembly/gen/clamp/Clamp#_audio
                            return
                           end
                           local.get $0
                           local.get $1
                           local.get $2
                           local.get $3
                           call $assembly/gen/clip/Clip#_audio
                           return
                          end
                          local.get $0
                          local.get $1
                          local.get $2
                          local.get $3
                          call $assembly/gen/comp/Comp#_audio
                          return
                         end
                         local.get $0
                         local.get $1
                         local.get $2
                         local.get $3
                         call $assembly/gen/daverb/Daverb#_audio
                         return
                        end
                        local.get $0
                        local.get $1
                        local.get $2
                        local.get $3
                        call $assembly/gen/dc/Dc#_audio
                        return
                       end
                       local.get $0
                       local.get $1
                       local.get $2
                       local.get $3
                       call $assembly/gen/dclip/Dclip#_audio
                       return
                      end
                      local.get $0
                      local.get $1
                      local.get $2
                      local.get $3
                      call $assembly/gen/dclipexp/Dclipexp#_audio
                      return
                     end
                     local.get $0
                     local.get $1
                     local.get $2
                     local.get $3
                     call $assembly/gen/dcliplin/Dcliplin#_audio
                     return
                    end
                    local.get $0
                    local.get $1
                    local.get $2
                    local.get $3
                    call $assembly/gen/delay/Delay#_audio
                    return
                   end
                   local.get $0
                   local.get $1
                   local.get $2
                   local.get $3
                   call $assembly/gen/diode/Diode#_audio
                   return
                  end
                  local.get $0
                  local.get $1
                  local.get $2
                  local.get $3
                  call $assembly/gen/inc/Inc#_audio
                  return
                 end
                 local.get $0
                 local.get $1
                 local.get $2
                 local.get $3
                 call $assembly/gen/lp/Lp#_audio
                 return
                end
                local.get $0
                local.get $1
                local.get $2
                local.get $3
                call $assembly/gen/mhp/Mhp#_audio
                return
               end
               local.get $0
               local.get $1
               local.get $2
               local.get $3
               call $assembly/gen/mlp/Mlp#_audio
               return
              end
              local.get $0
              local.get $1
              local.get $2
              local.get $3
              call $assembly/gen/sap/Sap#_audio
              return
             end
             local.get $0
             local.get $1
             local.get $2
             local.get $3
             call $assembly/gen/sbp/Sbp#_audio
             return
            end
            local.get $0
            local.get $1
            local.get $2
            local.get $3
            call $assembly/gen/shp/Shp#_audio
            return
           end
           local.get $0
           local.get $1
           local.get $2
           local.get $3
           call $assembly/gen/slp/Slp#_audio
           return
          end
          local.get $0
          local.get $1
          local.get $2
          local.get $3
          call $assembly/gen/sno/Sno#_audio
          return
         end
         local.get $0
         local.get $1
         local.get $2
         local.get $3
         call $assembly/gen/spk/Spk#_audio
         return
        end
        local.get $0
        local.get $1
        local.get $2
        local.get $3
        call $assembly/gen/tanh/Tanh#_audio
        return
       end
       local.get $0
       local.get $1
       local.get $2
       local.get $3
       call $assembly/gen/tap/Tap#_audio
       return
      end
      local.get $0
      local.get $1
      local.get $2
      local.get $3
      call $assembly/gen/zero/Zero#_audio
      return
     end
     local.get $0
     local.get $1
     local.get $2
     local.get $3
     call $assembly/gen/biquad/Biquad#_audio
     return
    end
    local.get $0
    local.get $1
    local.get $2
    local.get $3
    call $assembly/gen/osc/Osc#_audio
    return
   end
   local.get $0
   local.get $1
   local.get $2
   local.get $3
   call $assembly/gen/sample/Sample#_audio
   return
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/gen/gen/Gen#_audio
 )
 (func $assembly/gen/osc/Osc#get:_table@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case3
    block $case2
     block $case1
      block $case0
       local.get $0
       i32.const 8
       i32.sub
       i32.load $0
       local.set $1
       local.get $1
       i32.const 25
       i32.eq
       br_if $case0
       local.get $1
       i32.const 31
       i32.eq
       br_if $case1
       local.get $1
       i32.const 23
       i32.eq
       br_if $case2
       local.get $1
       i32.const 27
       i32.eq
       br_if $case3
       local.get $1
       i32.const 26
       i32.eq
       br_if $case3
       local.get $1
       i32.const 28
       i32.eq
       br_if $case3
       local.get $1
       i32.const 29
       i32.eq
       br_if $case3
       local.get $1
       i32.const 30
       i32.eq
       br_if $case3
       br $default
      end
      local.get $0
      call $assembly/gen/exp/Exp#get:_table
      return
     end
     local.get $0
     call $assembly/gen/noise/Noise#get:_table
     return
    end
    local.get $0
    call $assembly/gen/sin/Sin#get:_table
    return
   end
   local.get $0
   call $assembly/gen/aosc/AOsc#get:_table
   return
  end
  local.get $0
  call $assembly/gen/osc/Osc#get:_table
 )
 (func $assembly/gen/osc/Osc#get:_mask@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load $0
    local.set $1
    local.get $1
    i32.const 27
    i32.eq
    br_if $case0
    local.get $1
    i32.const 26
    i32.eq
    br_if $case0
    local.get $1
    i32.const 28
    i32.eq
    br_if $case0
    local.get $1
    i32.const 29
    i32.eq
    br_if $case0
    local.get $1
    i32.const 30
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   call $assembly/gen/aosc/AOsc#get:_mask
   return
  end
  local.get $0
  call $assembly/gen/osc/Osc#get:_mask
 )
 (func $assembly/gen/aosc/AOsc#get:_tables@override (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case3
    block $case2
     block $case1
      block $case0
       local.get $0
       i32.const 8
       i32.sub
       i32.load $0
       local.set $1
       local.get $1
       i32.const 28
       i32.eq
       br_if $case0
       local.get $1
       i32.const 26
       i32.eq
       br_if $case1
       local.get $1
       i32.const 29
       i32.eq
       br_if $case2
       local.get $1
       i32.const 30
       i32.eq
       br_if $case3
       br $default
      end
      local.get $0
      call $assembly/gen/ramp/Ramp#get:_tables
      return
     end
     local.get $0
     call $assembly/gen/saw/Saw#get:_tables
     return
    end
    local.get $0
    call $assembly/gen/sqr/Sqr#get:_tables
    return
   end
   local.get $0
   call $assembly/gen/tri/Tri#get:_tables
   return
  end
  local.get $0
  call $assembly/gen/aosc/AOsc#get:_tables
 )
 (func $~start
  call $start:assembly/index
  global.get $~lib/memory/__heap_base
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  global.set $~lib/rt/stub/startOffset
  global.get $~lib/rt/stub/startOffset
  global.set $~lib/rt/stub/offset
 )
)
