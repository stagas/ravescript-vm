// This file was automatically generated from the Assemblyscript transform: export-all.ts
// during the Assemblyscript compilation. Use `npm run asbuild` to regenerate.
export const envTypes = {
  gen_daverb_nearestPowerOfTwo: '(i32) i32',
  wavetable_set_length: '(i32 i32) void',
  wavetable_set_mask: '(i32 i32) void',
  wavetable_set_phases: '(i32 i32) void',
  wavetable_set_sine: '(i32 i32) void',
  wavetable_set_cos: '(i32 i32) void',
  wavetable_set_exp: '(i32 i32) void',
  wavetable_set_noise: '(i32 i32) void',
  util_nextPowerOfTwo: '(i32) i32',
  antialias_wavetable_AntialiasWavetable_set_real: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_set_imag: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_set_freqs: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_set_saw: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_set_ramp: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_set_sqr: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_set_tri: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_set_audioRate: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_set_topFreq: '(i32 f64) void',
  antialias_wavetable_AntialiasWavetable_set_maxHarms: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_set_numOfTables: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_set_tableLength: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_set_tableMask: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_get_tableLength: '(i32) i32',
  antialias_wavetable_AntialiasWavetable_set_stepShift: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_get_saw: '(i32) i32',
  antialias_wavetable_Real_saw: '(i32 i32 i32) void',
  antialias_wavetable_AntialiasWavetable_get_topFreq: '(i32) f64',
  antialias_wavetable_AntialiasWavetable_get_maxHarms: '(i32) i32',
  antialias_wavetable_AntialiasWavetable_get_imag: '(i32) i32',
  antialias_wavetable_AntialiasWavetable_get_real: '(i32) i32',
  antialias_wavetable_AntialiasWavetable_defineWaveform: '(i32 i32 i32) void',
  fft_: '(i32 i32 i32) void',
  antialias_wavetable_AntialiasWavetable_makeWavetable: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_get_freqs: '(i32) i32',
  antialias_wavetable_AntialiasWavetable_makeTables: '(i32 i32 i32) void',
  antialias_wavetable_AntialiasWavetable_get_ramp: '(i32) i32',
  antialias_wavetable_Real_ramp: '(i32 i32 i32) void',
  antialias_wavetable_AntialiasWavetable_get_sqr: '(i32) i32',
  antialias_wavetable_Real_sqr: '(i32 i32 i32) void',
  antialias_wavetable_AntialiasWavetable_get_tri: '(i32) i32',
  antialias_wavetable_Real_tri: '(i32 i32 i32) void',
  antialias_wavetable_AntialiasWavetable_set_tableIndex: '(i32 i32) void',
  antialias_wavetable_AntialiasWavetable_constructor: '(i32 i32) i32',
  wavetable_set_antialias: '(i32 i32) void',
  wavetable_get_size: '(i32) i32',
  wavetable_get_length: '(i32) i32',
  wavetable_get_phases: '(i32) i32',
  wavetable_get_sine: '(i32) i32',
  util_phaseToRadians: '(i32) f64',
  wavetable_fill: '(i32 i32 i32 i32) void',
  wavetable_get_cos: '(i32) i32',
  wavetable_get_exp: '(i32) i32',
  wavetable_exp: '(f64) f64',
  wavetable_get_noise: '(i32) i32',
  wave_rnd: '(f64) f64',
  wave_noise: '(f64) f64',
  wavetable_set_audioRate: '(i32 i32) void',
  wavetable_set_size: '(i32 i32) void',
  wavetable_constructor: '(i32 i32 i32) i32',
  engine_Core_set_wavetable: '(i32 i32) void',
  engine_Core_set_audioRate: '(i32 i32) void',
  engine_Core_constructor: '(i32 i32) i32',
  clock_set_time: '(i32 f64) void',
  clock_set_timeStep: '(i32 f64) void',
  clock_set_prevTime: '(i32 f64) void',
  clock_set_endTime: '(i32 f64) void',
  clock_set_internalTime: '(i32 f64) void',
  clock_set_bpm: '(i32 f64) void',
  clock_set_coeff: '(i32 f64) void',
  clock_set_barTime: '(i32 f64) void',
  clock_set_barTimeStep: '(i32 f64) void',
  clock_set_loopStart: '(i32 f64) void',
  clock_set_loopEnd: '(i32 f64) void',
  clock_set_sampleRate: '(i32 i32) void',
  clock_set_jumpBar: '(i32 i32) void',
  clock_set_ringPos: '(i32 i32) void',
  clock_constructor: '(i32) i32',
  runner_Bar_set_size: '(i32 i32) void',
  runner_Bar_set_ctrls: '(i32 i32) void',
  runner_Bar_set_events: '(i32 i32) void',
  runner_Bar_constructor: '(i32) i32',
  runner_get_barInstances: '(i32) i32',
  runner_Ctrl_set_tableIndex: '(i32 i32) void',
  runner_Ctrl_set_id: '(i32 i32) void',
  runner_Signal_set_L: '(i32 i32) void',
  runner_Signal_set_R: '(i32 i32) void',
  runner_Signal_set_LR: '(i32 i32) void',
  runner_Signal_constructor: '(i32) i32',
  runner_Ctrl_set_signal: '(i32 i32) void',
  runner_Ctrl_set_literalsCount: '(i32 i32) void',
  runner_Ctrl_set_liveLiterals: '(i32 i32) void',
  runner_Ctrl_set_ownLiterals: '(i32 i32) void',
  runner_Ctrl_constructor: '(i32) i32',
  runner_get_ctrlInstances: '(i32) i32',
  runner_set_clock: '(i32 i32) void',
  runner_set_barInstances: '(i32 i32) void',
  runner_set_bars: '(i32 i32) void',
  runner_set_ctrlInstances: '(i32 i32) void',
  runner_set_ctrls: '(i32 i32) void',
  runner_set_main: '(i32 i32) void',
  runner_set_lastMain: '(i32 i32) void',
  runner_set_last: '(i32 i32) void',
  runner_set_tableIndex: '(i32 i32) void',
  runner_constructor: '(i32 i32) i32',
  engine_set_runner: '(i32 i32) void',
  engine_Core_get_wavetable: '(i32) i32',
  engine_set_wavetable: '(i32 i32) void',
  engine_set_rateSamples: '(i32 i32) void',
  engine_set_rateStep: '(i32 i32) void',
  engine_set_clock: '(i32 i32) void',
  engine_get_clock: '(i32) i32',
  engine_set_audioRate: '(i32 i32) void',
  engine_set_core: '(i32 i32) void',
  engine_set_signal: '(i32 i32) void',
  engine_constructor: '(i32 i32 i32) i32',
  engine_get_signal: '(i32) i32',
  engine_get_rateSamples: '(i32) i32',
  util_allocF32: '(i32) i32',
  engine_createBlock: '(i32 i32) i32',
  engine_get_runner: '(i32) i32',
  runner_clearLastBar: '(i32) void',
  runner_get_main: '(i32) i32',
  runner_get_ctrls: '(i32) i32',
  runner_Ctrl_get_signal: '(i32) i32',
  runner_get_bars: '(i32) i32',
  runner_Bar_get_size: '(i32) i32',
  runner_get_clock: '(i32) i32',
  runner_Bar_get_ctrls: '(i32) i32',
  runner_get_tableIndex: '(i32) i32',
  runner_Ctrl_get_id: '(i32) i32',
  env_setCtrlInstanceAt: '(i32 i32) i32',
  runner_Ctrl_get_ownLiterals: '(i32) i32',
  runner_Ctrl_get_liveLiterals: '(i32) i32',
  runner_Ctrl_get_literalsCount: '(i32) i32',
  copy_copyMem: '(i32 i32 i32) void',
  runner_Ctrl_get_tableIndex: '(i32) i32',
  runner_Ctrl_get_run: '(i32) i32',
  runner_Signal_get_L: '(i32) i32',
  add_audio_audio: '(i32 i32 i32 i32 i32) void',
  runner_Signal_get_R: '(i32) i32',
  runner_Signal_get_LR: '(i32) i32',
  copy_copyInto: '(i32 i32 i32 i32) void',
  runner_fill: '(i32 i32 i32 i32 i32) void',
  clock_get_timeStep: '(i32) f64',
  runner_get_last: '(i32) i32',
  fade_fadeOut: '(i32 i32 i32 i32) void',
  env_resetCtrlInstance: '(i32) i32',
  fade_fadeIn: '(i32 i32 i32 i32) void',
  runner_get_lastMain: '(i32) i32',
  runner_process: '(i32 f64 f64 f64 i32 i32 i32) void',
  gen_gen_set__engine: '(i32 i32) void',
  gen_gen_set_gain: '(i32 f32) void',
  gen_gen_constructor: '(i32 i32) i32',
  gen_zero_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_zero_Zero_: '() i32',
  util_cloneI32: '(i32 i32) i32',
  gen_osc_set_hz: '(i32 f32) void',
  gen_osc_set_trig: '(i32 f32) void',
  gen_osc_set_offset: '(i32 f32) void',
  gen_osc_set__phase: '(i32 i32) void',
  gen_osc_set__step: '(i32 i32) void',
  gen_osc_set__sample: '(i32 f32) void',
  gen_osc_set__lastTrig: '(i32 i32) void',
  gen_osc_set__offsetU32: '(i32 i32) void',
  gen_osc_constructor: '(i32 i32) i32',
  gen_sin_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_sin_Sin_: '() i32',
  gen_exp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_exp_Exp_: '() i32',
  gen_aosc_set__tableIndex: '(i32 i32) void',
  gen_aosc_constructor: '(i32 i32) i32',
  gen_saw_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_saw_Saw_: '() i32',
  gen_ramp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_ramp_Ramp_: '() i32',
  gen_sqr_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_sqr_Sqr_: '() i32',
  gen_tri_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_tri_Tri_: '() i32',
  gen_noise_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_noise_Noise_: '() i32',
  gen_dc_set_ceil: '(i32 f32) void',
  gen_dc_set_in: '(i32 i32) void',
  gen_dc_set_sample: '(i32 f32) void',
  gen_dc_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_dc_Dc_: '() i32',
  gen_delay_set_ms: '(i32 f32) void',
  gen_delay_set_fb: '(i32 f32) void',
  gen_delay_set_in: '(i32 i32) void',
  gen_delay_set__floats: '(i32 i32) void',
  gen_delay_set__mask: '(i32 i32) void',
  gen_delay_set__index: '(i32 i32) void',
  gen_delay_set__stepf: '(i32 f32) void',
  gen_delay_set__targetf: '(i32 f32) void',
  gen_delay_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_delay_Delay_: '() i32',
  gen_tap_set_ms: '(i32 f32) void',
  gen_tap_set_in: '(i32 i32) void',
  gen_tap_set__floats: '(i32 i32) void',
  gen_tap_set__mask: '(i32 i32) void',
  gen_tap_set__index: '(i32 i32) void',
  gen_tap_set__stepf: '(i32 f32) void',
  gen_tap_set__targetf: '(i32 f32) void',
  gen_tap_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_tap_Tap_: '() i32',
  gen_lp_set_cut: '(i32 f32) void',
  gen_lp_set_in: '(i32 i32) void',
  gen_lp_set__alpha: '(i32 f32) void',
  gen_lp_set__sample: '(i32 f32) void',
  gen_lp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_lp_Lp_: '() i32',
  engine_get_audioRate: '(i32) i32',
  gen_rate_set_samples: '(i32 f32) void',
  gen_rate_set__engine: '(i32 i32) void',
  gen_rate_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_rate_Rate_: '() i32',
  gen_biquad_set_in: '(i32 i32) void',
  gen_biquad_set__x1: '(i32 f64) void',
  gen_biquad_set__x2: '(i32 f64) void',
  gen_biquad_set__y1: '(i32 f64) void',
  gen_biquad_set__y2: '(i32 f64) void',
  gen_biquad_set__a0: '(i32 f64) void',
  gen_biquad_set__a1: '(i32 f64) void',
  gen_biquad_set__a2: '(i32 f64) void',
  gen_biquad_set__b0: '(i32 f64) void',
  gen_biquad_set__b1: '(i32 f64) void',
  gen_biquad_set__b2: '(i32 f64) void',
  gen_biquad_set__params_freq: '(i32 i32) void',
  gen_biquad_set__params_Q: '(i32 i32) void',
  gen_biquad_set__params_gain: '(i32 i32) void',
  gen_biquad_constructor: '(i32 i32) i32',
  gen_blp_set_cut: '(i32 f32) void',
  gen_blp_set_q: '(i32 f32) void',
  gen_blp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_blp_Blp_: '() i32',
  gen_bhp_set_cut: '(i32 f32) void',
  gen_bhp_set_q: '(i32 f32) void',
  gen_bhp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_bhp_Bhp_: '() i32',
  gen_bbp_set_cut: '(i32 f32) void',
  gen_bbp_set_q: '(i32 f32) void',
  gen_bbp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_bbp_Bbp_: '() i32',
  gen_bno_set_cut: '(i32 f32) void',
  gen_bno_set_q: '(i32 f32) void',
  gen_bno_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_bno_Bno_: '() i32',
  gen_bpk_set_cut: '(i32 f32) void',
  gen_bpk_set_q: '(i32 f32) void',
  gen_bpk_set_amt: '(i32 f32) void',
  gen_bpk_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_bpk_Bpk_: '() i32',
  gen_bap_set_cut: '(i32 f32) void',
  gen_bap_set_q: '(i32 f32) void',
  gen_bap_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_bap_Bap_: '() i32',
  gen_bls_set_cut: '(i32 f32) void',
  gen_bls_set_q: '(i32 f32) void',
  gen_bls_set_amt: '(i32 f32) void',
  gen_bls_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_bls_Bls_: '() i32',
  gen_bhs_set_cut: '(i32 f32) void',
  gen_bhs_set_q: '(i32 f32) void',
  gen_bhs_set_amt: '(i32 f32) void',
  gen_bhs_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_bhs_Bhs_: '() i32',
  gen_svf_set_in: '(i32 i32) void',
  gen_svf_set__c1: '(i32 f64) void',
  gen_svf_set__c2: '(i32 f64) void',
  gen_svf_set__a1: '(i32 f64) void',
  gen_svf_set__a2: '(i32 f64) void',
  gen_svf_set__a3: '(i32 f64) void',
  gen_svf_set__v0: '(i32 f64) void',
  gen_svf_set__v1: '(i32 f64) void',
  gen_svf_set__v2: '(i32 f64) void',
  gen_svf_set__v3: '(i32 f64) void',
  gen_svf_set__k: '(i32 f64) void',
  gen_svf_set__params_freq: '(i32 i32) void',
  gen_svf_set__params_Q: '(i32 i32) void',
  gen_svf_constructor: '(i32 i32) i32',
  gen_slp_set_cut: '(i32 f32) void',
  gen_slp_set_q: '(i32 f32) void',
  gen_slp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_slp_Slp_: '() i32',
  gen_shp_set_cut: '(i32 f32) void',
  gen_shp_set_q: '(i32 f32) void',
  gen_shp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_shp_Shp_: '() i32',
  gen_sbp_set_cut: '(i32 f32) void',
  gen_sbp_set_q: '(i32 f32) void',
  gen_sbp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_sbp_Sbp_: '() i32',
  gen_sap_set_cut: '(i32 f32) void',
  gen_sap_set_q: '(i32 f32) void',
  gen_sap_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_sap_Sap_: '() i32',
  gen_sno_set_cut: '(i32 f32) void',
  gen_sno_set_q: '(i32 f32) void',
  gen_sno_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_sno_Sno_: '() i32',
  gen_spk_set_cut: '(i32 f32) void',
  gen_spk_set_q: '(i32 f32) void',
  gen_spk_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_spk_Spk_: '() i32',
  gen_moog_set_in: '(i32 i32) void',
  gen_moog_set__m_azt1: '(i32 f32) void',
  gen_moog_set__m_azt2: '(i32 f32) void',
  gen_moog_set__m_azt3: '(i32 f32) void',
  gen_moog_set__m_azt4: '(i32 f32) void',
  gen_moog_set__m_az5: '(i32 f32) void',
  gen_moog_set__m_amf: '(i32 f32) void',
  gen_moog_set__v2: '(i32 f32) void',
  gen_moog_set__x1: '(i32 f32) void',
  gen_moog_set__az3: '(i32 f32) void',
  gen_moog_set__az4: '(i32 f32) void',
  gen_moog_set__amf: '(i32 f32) void',
  gen_moog_set__kVt: '(i32 f32) void',
  gen_moog_set__m_kacr: '(i32 f32) void',
  gen_moog_set__m_k2vg: '(i32 f32) void',
  gen_moog_set__m_postGain: '(i32 f32) void',
  gen_moog_set__params_freq: '(i32 i32) void',
  gen_moog_set__params_Q: '(i32 i32) void',
  gen_moog_constructor: '(i32 i32) i32',
  gen_mlp_set_cut: '(i32 f32) void',
  gen_mlp_set_q: '(i32 f32) void',
  gen_mlp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_mlp_Mlp_: '() i32',
  gen_mhp_set_cut: '(i32 f32) void',
  gen_mhp_set_q: '(i32 f32) void',
  gen_mhp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_mhp_Mhp_: '() i32',
  gen_daverb_set_in: '(i32 i32) void',
  gen_daverb_set__pd: '(i32 f32) void',
  gen_daverb_set__bw: '(i32 f32) void',
  gen_daverb_set__fi: '(i32 f32) void',
  gen_daverb_set__si: '(i32 f32) void',
  gen_daverb_set__dc: '(i32 f32) void',
  gen_daverb_set__ft: '(i32 f32) void',
  gen_daverb_set__st: '(i32 f32) void',
  gen_daverb_set__dp: '(i32 f32) void',
  gen_daverb_set__ex: '(i32 f32) void',
  gen_daverb_set__ed: '(i32 f32) void',
  gen_daverb_set__params_pd: '(i32 i32) void',
  gen_daverb_set__params_bw: '(i32 i32) void',
  gen_daverb_set__params_fi: '(i32 i32) void',
  gen_daverb_set__params_si: '(i32 i32) void',
  gen_daverb_set__params_dc: '(i32 i32) void',
  gen_daverb_set__params_ft: '(i32 i32) void',
  gen_daverb_set__params_st: '(i32 i32) void',
  gen_daverb_set__params_dp: '(i32 i32) void',
  gen_daverb_set__params_ex: '(i32 i32) void',
  gen_daverb_set__params_ed: '(i32 i32) void',
  gen_daverb_set__dpn: '(i32 f32) void',
  gen_daverb_set__exn: '(i32 f32) void',
  gen_daverb_set__edn: '(i32 f32) void',
  gen_daverb_set__pdn: '(i32 f32) void',
  gen_daverb_set__predelay: '(i32 i32) void',
  gen_daverb_set__d0: '(i32 i32) void',
  gen_daverb_set__d1: '(i32 i32) void',
  gen_daverb_set__d2: '(i32 i32) void',
  gen_daverb_set__d3: '(i32 i32) void',
  gen_daverb_set__d4: '(i32 i32) void',
  gen_daverb_set__d5: '(i32 i32) void',
  gen_daverb_set__d6: '(i32 i32) void',
  gen_daverb_set__d7: '(i32 i32) void',
  gen_daverb_set__d8: '(i32 i32) void',
  gen_daverb_set__d9: '(i32 i32) void',
  gen_daverb_set__d10: '(i32 i32) void',
  gen_daverb_set__d11: '(i32 i32) void',
  gen_daverb_set__index: '(i32 i32) void',
  gen_daverb_set__mask: '(i32 i32) void',
  gen_daverb_set__lp1: '(i32 f32) void',
  gen_daverb_set__lp2: '(i32 f32) void',
  gen_daverb_set__lp3: '(i32 f32) void',
  gen_daverb_set__excPhase: '(i32 i32) void',
  gen_daverb_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_daverb_Daverb_: '() i32',
  gen_tanh_set_gain: '(i32 f32) void',
  gen_tanh_set__gainv: '(i32 v128) void',
  gen_tanh_set_in: '(i32 i32) void',
  gen_tanh_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_tanh_Tanh_: '() i32',
  gen_diode_set_cut: '(i32 f32) void',
  gen_diode_set_hpf: '(i32 f32) void',
  gen_diode_set_sat: '(i32 f32) void',
  gen_diode_set_q: '(i32 f32) void',
  gen_diode_set_in: '(i32 i32) void',
  gen_diode_set__z0: '(i32 f32) void',
  gen_diode_set__z1: '(i32 f32) void',
  gen_diode_set__z2: '(i32 f32) void',
  gen_diode_set__z3: '(i32 f32) void',
  gen_diode_set__z4: '(i32 f32) void',
  gen_diode_set__A: '(i32 f32) void',
  gen_diode_set__a: '(i32 f32) void',
  gen_diode_set__a2: '(i32 f32) void',
  gen_diode_set__b: '(i32 f32) void',
  gen_diode_set__b2: '(i32 f32) void',
  gen_diode_set__c: '(i32 f32) void',
  gen_diode_set__g: '(i32 f32) void',
  gen_diode_set__g0: '(i32 f32) void',
  gen_diode_set__ah: '(i32 f32) void',
  gen_diode_set__bh: '(i32 f32) void',
  gen_diode_set__ainv: '(i32 f32) void',
  gen_diode_set__k: '(i32 f32) void',
  gen_diode_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_diode_Diode_: '() i32',
  gen_dclip_set_in: '(i32 i32) void',
  gen_dclip_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_dclip_Dclip_: '() i32',
  gen_dcliplin_set_threshold: '(i32 f32) void',
  gen_dcliplin_set_factor: '(i32 f32) void',
  gen_dcliplin_set_in: '(i32 i32) void',
  gen_dcliplin_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_dcliplin_Dcliplin_: '() i32',
  gen_dclipexp_set_factor: '(i32 f32) void',
  gen_dclipexp_set_in: '(i32 i32) void',
  gen_dclipexp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_dclipexp_Dclipexp_: '() i32',
  gen_clamp_set_min: '(i32 f32) void',
  gen_clamp_set_max: '(i32 f32) void',
  gen_clamp_set_in: '(i32 i32) void',
  gen_clamp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_clamp_Clamp_: '() i32',
  gen_clip_set_threshold: '(i32 f32) void',
  gen_clip_set_in: '(i32 i32) void',
  gen_clip_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_clip_Clip_: '() i32',
  gen_comp_set_threshold: '(i32 f32) void',
  gen_comp_set_ratio: '(i32 f32) void',
  gen_comp_set_attack: '(i32 f32) void',
  gen_comp_set_release: '(i32 f32) void',
  gen_comp_set_in: '(i32 i32) void',
  gen_comp_set_sidechain: '(i32 i32) void',
  gen_comp_set__prevLevel: '(i32 f32) void',
  gen_comp_set__gainReduction: '(i32 f32) void',
  gen_comp_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_comp_Comp_: '() i32',
  gen_sample_set_offset: '(i32 f32) void',
  gen_sample_set_trig: '(i32 f32) void',
  gen_sample_set__floats: '(i32 i32) void',
  gen_sample_set__mask: '(i32 i32) void',
  gen_sample_set__phase: '(i32 i32) void',
  gen_sample_set__step: '(i32 i32) void',
  gen_sample_set__offsetCurrent: '(i32 f64) void',
  gen_sample_set__offsetTarget: '(i32 f64) void',
  gen_sample_set__lastTrig: '(i32 f32) void',
  gen_sample_constructor: '(i32 i32) i32',
  gen_freesound_set_id: '(i32 f32) void',
  gen_freesound_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_freesound_Freesound_: '() i32',
  gen_freesound_get_id: '(i32) f32',
  env_logf: '(f32) void',
  gen_say_set_text: '(i32 f32) void',
  gen_say_constructor: '(i32 i32) i32',
  util_getObjectSize__gen_say_Say_: '() i32',
  gen_gen__update: '(i32) void',
  gen_gen__audio: '(i32 i32 i32 i32) void',
  pow_audio_scalar: '(i32 f32 i32 i32 i32) void',
  pow_scalar_audio: '(f32 i32 i32 i32 i32) void',
  pow_scalar_scalar: '(f32 f32) f32',
  mul_audio_scalar: '(i32 f32 i32 i32 i32) void',
  mul_audio_audio: '(i32 i32 i32 i32 i32) void',
  div_audio_scalar: '(i32 f32 i32 i32 i32) void',
  div_scalar_audio: '(f32 i32 i32 i32 i32) void',
  add_audio_scalar: '(i32 f32 i32 i32 i32) void',
  sub_audio_scalar: '(i32 f32 i32 i32 i32) void',
  sub_audio_audio: '(i32 i32 i32 i32 i32) void',
  not_audio: '(i32 i32 i32 i32) void',
  to_audio_scalar: '(f32 i32 i32 i32) void',
  join_join21g: '(i32 i32 i32 i32 i32 f32 f32) void',
  join_join21: '(i32 i32 i32 i32 i32) void',
  dc_bias_dcBias: '(i32 i32 i32) void',
  rms_: '(i32 i32 i32) f32',
  index_preventTreeShaking: '(i32) void',
  bench_audio_benchAudio: '(i32 i32 i32) void',
  gen_gen_get_gain: '(i32) f32',
  bench_audio_benchAudioGain: '(i32 i32 i32) void',
  bench_audio_benchAudioTwo: '(i32 i32 i32 i32 i32 i32) void',
  gen_bap_get_cut: '(i32) f32',
  gen_bap_get_q: '(i32) f32',
  gen_biquad_get__params_freq: '(i32) i32',
  util_clamp: '(f32 f32 f32 f32) f32',
  util_paramClamp: '(i32 f32) f32',
  gen_biquad_get__params_Q: '(i32) i32',
  gen_gen_get__engine: '(i32) i32',
  gen_biquad_get__a0: '(i32) f64',
  gen_biquad_get__b0: '(i32) f64',
  gen_biquad_get__b1: '(i32) f64',
  gen_biquad_get__b2: '(i32) f64',
  gen_biquad_get__a1: '(i32) f64',
  gen_biquad_get__a2: '(i32) f64',
  gen_bap__update: '(i32) void',
  gen_bbp_get_cut: '(i32) f32',
  gen_bbp_get_q: '(i32) f32',
  gen_bbp__update: '(i32) void',
  gen_bhp_get_cut: '(i32) f32',
  gen_bhp_get_q: '(i32) f32',
  gen_bhp__update: '(i32) void',
  gen_bhs_get_cut: '(i32) f32',
  gen_bhs_get_q: '(i32) f32',
  gen_bhs_get_amt: '(i32) f32',
  gen_biquad_get__params_gain: '(i32) i32',
  gen_bhs__update: '(i32) void',
  gen_blp_get_cut: '(i32) f32',
  gen_blp_get_q: '(i32) f32',
  gen_blp__update: '(i32) void',
  gen_bls_get_cut: '(i32) f32',
  gen_bls_get_q: '(i32) f32',
  gen_bls_get_amt: '(i32) f32',
  gen_bls__update: '(i32) void',
  gen_bno_get_cut: '(i32) f32',
  gen_bno_get_q: '(i32) f32',
  gen_bno__update: '(i32) void',
  gen_bpk_get_cut: '(i32) f32',
  gen_bpk_get_q: '(i32) f32',
  gen_bpk_get_amt: '(i32) f32',
  gen_bpk__update: '(i32) void',
  gen_comp__update: '(i32) void',
  gen_daverb_get__dp: '(i32) f32',
  gen_daverb_get__ex: '(i32) f32',
  gen_daverb_get__ed: '(i32) f32',
  gen_daverb_get__pd: '(i32) f32',
  gen_daverb__update: '(i32) void',
  gen_delay_get_ms: '(i32) f32',
  engine_get_rateStep: '(i32) i32',
  gen_delay_get__stepf: '(i32) f32',
  gen_delay_get__targetf: '(i32) f32',
  gen_delay__update: '(i32) void',
  gen_diode_get_hpf: '(i32) f32',
  gen_diode_clamp: '(f32 f32 f32) f32',
  gen_diode_get_q: '(i32) f32',
  gen_diode_get__k: '(i32) f32',
  gen_diode_get_cut: '(i32) f32',
  gen_diode__update: '(i32) void',
  gen_lp_get_cut: '(i32) f32',
  gen_lp__update: '(i32) void',
  gen_mhp_get_cut: '(i32) f32',
  gen_mhp_get_q: '(i32) f32',
  gen_moog_get__params_freq: '(i32) i32',
  gen_moog_get__params_Q: '(i32) i32',
  gen_moog_get__kVt: '(i32) f32',
  gen_moog_get__v2: '(i32) f32',
  gen_mhp__update: '(i32) void',
  gen_mlp_get_cut: '(i32) f32',
  gen_mlp_get_q: '(i32) f32',
  gen_mlp__update: '(i32) void',
  gen_rate_get_samples: '(i32) f32',
  gen_rate_get__engine: '(i32) i32',
  gen_rate__update: '(i32) void',
  gen_sap_get_cut: '(i32) f32',
  gen_sap_get_q: '(i32) f32',
  gen_svf_get__params_freq: '(i32) i32',
  gen_svf_get__params_Q: '(i32) i32',
  gen_svf_get__k: '(i32) f64',
  gen_svf_get__a1: '(i32) f64',
  gen_svf_get__a2: '(i32) f64',
  gen_sap__update: '(i32) void',
  gen_sbp_get_cut: '(i32) f32',
  gen_sbp_get_q: '(i32) f32',
  gen_sbp__update: '(i32) void',
  gen_shp_get_cut: '(i32) f32',
  gen_shp_get_q: '(i32) f32',
  gen_shp__update: '(i32) void',
  gen_slp_get_cut: '(i32) f32',
  gen_slp_get_q: '(i32) f32',
  gen_slp__update: '(i32) void',
  gen_sno_get_cut: '(i32) f32',
  gen_sno_get_q: '(i32) f32',
  gen_sno__update: '(i32) void',
  gen_spk_get_cut: '(i32) f32',
  gen_spk_get_q: '(i32) f32',
  gen_spk__update: '(i32) void',
  gen_tanh_get_gain: '(i32) f32',
  gen_tanh__update: '(i32) void',
  gen_tap_get_ms: '(i32) f32',
  gen_tap_get__stepf: '(i32) f32',
  gen_tap_get__targetf: '(i32) f32',
  gen_tap__update: '(i32) void',
  gen_osc_get_hz: '(i32) f32',
  gen_osc_get_offset: '(i32) f32',
  gen_osc_get__lastTrig: '(i32) i32',
  gen_osc_get_trig: '(i32) f32',
  gen_osc__update: '(i32) void',
  gen_sample_get_offset: '(i32) f32',
  gen_sample_get__mask: '(i32) i32',
  gen_sample_get__offsetCurrent: '(i32) f64',
  gen_sample_get__offsetTarget: '(i32) f64',
  gen_sample_get__lastTrig: '(i32) f32',
  gen_sample_get_trig: '(i32) f32',
  gen_sample__update: '(i32) void',
  engine_get_wavetable: '(i32) i32',
  wavetable_get_antialias: '(i32) i32',
  antialias_wavetable_AntialiasWavetable_get_numOfTables: '(i32) i32',
  antialias_wavetable_AntialiasWavetable_getTableIndex: '(i32 f32) i32',
  antialias_wavetable_AntialiasWavetable_get_stepShift: '(i32) i32',
  gen_osc_get__step: '(i32) i32',
  gen_aosc__update: '(i32) void',
  gen_clamp_get_min: '(i32) f32',
  gen_clamp_get_max: '(i32) f32',
  gen_clamp_get_in: '(i32) i32',
  gen_clamp__audio: '(i32 i32 i32 i32) void',
  gen_clip_get_threshold: '(i32) f32',
  gen_clip_get_in: '(i32) i32',
  gen_clip__audio: '(i32 i32 i32 i32) void',
  gen_comp_get_in: '(i32) i32',
  gen_comp_get__gainReduction: '(i32) f32',
  gen_comp_get_threshold: '(i32) f32',
  gen_comp_get_ratio: '(i32) f32',
  gen_comp_get_attack: '(i32) f32',
  gen_comp_get_release: '(i32) f32',
  gen_comp_get_sidechain: '(i32) i32',
  gen_comp__audio: '(i32 i32 i32 i32) void',
  gen_daverb_get_in: '(i32) i32',
  gen_daverb_get__mask: '(i32) i32',
  gen_daverb_get__index: '(i32) i32',
  gen_daverb_get__lp1: '(i32) f32',
  gen_daverb_get__lp2: '(i32) f32',
  gen_daverb_get__lp3: '(i32) f32',
  gen_daverb_get__excPhase: '(i32) i32',
  gen_daverb_get__predelay: '(i32) i32',
  gen_daverb_get__bw: '(i32) f32',
  gen_daverb_get__pdn: '(i32) f32',
  util_cubic: '(i32 f32 i32) f32',
  gen_daverb_get__fi: '(i32) f32',
  gen_daverb_get__d0: '(i32) i32',
  gen_daverb_get__d1: '(i32) i32',
  gen_daverb_get__si: '(i32) f32',
  gen_daverb_get__d2: '(i32) i32',
  gen_daverb_get__d3: '(i32) i32',
  gen_daverb_get__edn: '(i32) f32',
  wavetable_get_mask: '(i32) i32',
  wavetable_readAt: '(i32 i32 i32) f32',
  gen_daverb_get__d4: '(i32) i32',
  gen_daverb_get__dc: '(i32) f32',
  gen_daverb_get__d11: '(i32) i32',
  gen_daverb_get__ft: '(i32) f32',
  gen_daverb_get__d5: '(i32) i32',
  gen_daverb_get__dpn: '(i32) f32',
  gen_daverb_get__st: '(i32) f32',
  gen_daverb_get__d6: '(i32) i32',
  gen_daverb_get__d7: '(i32) i32',
  gen_daverb_get__d8: '(i32) i32',
  gen_daverb_get__d9: '(i32) i32',
  gen_daverb_get__d10: '(i32) i32',
  gen_daverb__audio: '(i32 i32 i32 i32) void',
  gen_dc_get_ceil: '(i32) f32',
  gen_dc_get_sample: '(i32) f32',
  gen_dc_get_in: '(i32) i32',
  gen_dc__audio: '(i32 i32 i32 i32) void',
  gen_dclip_get_in: '(i32) i32',
  gen_dclip__audio: '(i32 i32 i32 i32) void',
  gen_dclipexp_get_factor: '(i32) f32',
  gen_dclipexp_get_in: '(i32) i32',
  gen_dclipexp__audio: '(i32 i32 i32 i32) void',
  gen_dcliplin_get_threshold: '(i32) f32',
  gen_dcliplin_get_factor: '(i32) f32',
  gen_dcliplin_get_in: '(i32) i32',
  gen_dcliplin__audio: '(i32 i32 i32 i32) void',
  gen_delay_get_in: '(i32) i32',
  gen_delay_get__mask: '(i32) i32',
  gen_delay_get__index: '(i32) i32',
  gen_delay_get_fb: '(i32) f32',
  gen_delay_get__floats: '(i32) i32',
  gen_delay__audio: '(i32 i32 i32 i32) void',
  gen_diode_get__A: '(i32) f32',
  gen_diode_get__a: '(i32) f32',
  gen_diode_get__a2: '(i32) f32',
  gen_diode_get__b: '(i32) f32',
  gen_diode_get__b2: '(i32) f32',
  gen_diode_get__c: '(i32) f32',
  gen_diode_get__g: '(i32) f32',
  gen_diode_get__g0: '(i32) f32',
  gen_diode_get__ah: '(i32) f32',
  gen_diode_get__bh: '(i32) f32',
  gen_diode_get__ainv: '(i32) f32',
  gen_diode_get_sat: '(i32) f32',
  gen_diode_get_in: '(i32) i32',
  gen_diode_get__z0: '(i32) f32',
  gen_diode_get__z1: '(i32) f32',
  gen_diode_get__z2: '(i32) f32',
  gen_diode_get__z3: '(i32) f32',
  gen_diode_get__z4: '(i32) f32',
  gen_diode_soft: '(f32 f32) f32',
  gen_diode__audio: '(i32 i32 i32 i32) void',
  gen_lp_get__alpha: '(i32) f32',
  gen_lp_get__sample: '(i32) f32',
  gen_lp_get_in: '(i32) i32',
  gen_lp__audio: '(i32 i32 i32 i32) void',
  gen_moog_get_in: '(i32) i32',
  gen_moog_get__m_amf: '(i32) f32',
  gen_moog_get__m_kacr: '(i32) f32',
  gen_moog_get__m_azt1: '(i32) f32',
  gen_moog_get__m_k2vg: '(i32) f32',
  gen_moog_get__x1: '(i32) f32',
  gen_moog_tanha: '(f32) f32',
  gen_moog_get__m_azt2: '(i32) f32',
  gen_moog_get__m_azt3: '(i32) f32',
  gen_moog_get__az3: '(i32) f32',
  gen_moog_get__m_azt4: '(i32) f32',
  gen_moog_get__az4: '(i32) f32',
  gen_moog_get__m_postGain: '(i32) f32',
  gen_mhp__audio: '(i32 i32 i32 i32) void',
  gen_mlp__audio: '(i32 i32 i32 i32) void',
  gen_svf_get_in: '(i32) i32',
  gen_svf_get__c2: '(i32) f64',
  gen_svf_get__c1: '(i32) f64',
  gen_svf_get__v3: '(i32) f64',
  gen_svf_get__a3: '(i32) f64',
  gen_svf_get__v1: '(i32) f64',
  gen_svf_get__v2: '(i32) f64',
  gen_svf_get__v0: '(i32) f64',
  gen_sap__audio: '(i32 i32 i32 i32) void',
  gen_sbp__audio: '(i32 i32 i32 i32) void',
  gen_shp__audio: '(i32 i32 i32 i32) void',
  gen_slp__audio: '(i32 i32 i32 i32) void',
  gen_sno__audio: '(i32 i32 i32 i32) void',
  gen_spk__audio: '(i32 i32 i32 i32) void',
  gen_tanh_get__gainv: '(i32) v128',
  gen_tanh_get_in: '(i32) i32',
  gen_tanh__audio: '(i32 i32 i32 i32) void',
  gen_tap_get_in: '(i32) i32',
  gen_tap_get__mask: '(i32) i32',
  gen_tap_get__index: '(i32) i32',
  gen_tap_get__floats: '(i32) i32',
  gen_tap__audio: '(i32 i32 i32 i32) void',
  gen_zero__audio: '(i32 i32 i32 i32) void',
  gen_biquad_get_in: '(i32) i32',
  gen_biquad_get__x1: '(i32) f64',
  gen_biquad_get__x2: '(i32) f64',
  gen_biquad_get__y1: '(i32) f64',
  gen_biquad_get__y2: '(i32) f64',
  gen_biquad__audio: '(i32 i32 i32 i32) void',
  gen_osc_get__table: '(i32) i32',
  gen_osc_get__mask: '(i32) i32',
  gen_osc_get__phase: '(i32) i32',
  gen_osc_get__offsetU32: '(i32) i32',
  wavetable_read: '(i32 i32 i32 i32 i32 i32 i32 i32 i32) i32',
  gen_osc__audio: '(i32 i32 i32 i32) void',
  gen_sample_get__phase: '(i32) i32',
  gen_sample_get__floats: '(i32) i32',
  util_cubicFrac: '(i32 i32 f32 i32) f32',
  gen_sample__audio: '(i32 i32 i32 i32) void',
  gen_exp_get__table: '(i32) i32',
  gen_noise_get__table: '(i32) i32',
  gen_sin_get__table: '(i32) i32',
  gen_aosc_get__tables: '(i32) i32',
  gen_aosc_get__tableIndex: '(i32) i32',
  gen_aosc_get__table: '(i32) i32',
  antialias_wavetable_AntialiasWavetable_get_tableMask: '(i32) i32',
  gen_aosc_get__mask: '(i32) i32',
  gen_ramp_get__tables: '(i32) i32',
  gen_saw_get__tables: '(i32) i32',
  gen_sqr_get__tables: '(i32) i32',
  gen_tri_get__tables: '(i32) i32',
  gen_gen__update_override: '(i32) void',
  gen_gen__audio_override: '(i32 i32 i32 i32) void',
  gen_osc_get__table_override: '(i32) i32',
  gen_osc_get__mask_override: '(i32) i32',
  gen_aosc_get__tables_override: '(i32) i32'
} as const
